[{"/mnt/c/New App Academy/MERN_FS/frontend/src/index.js":"1","/mnt/c/New App Academy/MERN_FS/frontend/src/root.js":"2","/mnt/c/New App Academy/MERN_FS/frontend/src/utils/session_api_util.js":"3","/mnt/c/New App Academy/MERN_FS/frontend/src/store/store.js":"4","/mnt/c/New App Academy/MERN_FS/frontend/src/actions/session_actions.js":"5","/mnt/c/New App Academy/MERN_FS/frontend/src/start.js":"6","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/root_reducer.js":"7","/mnt/c/New App Academy/MERN_FS/frontend/src/actions/modal_actions.js":"8","/mnt/c/New App Academy/MERN_FS/frontend/src/utils/route_util.js":"9","/mnt/c/New App Academy/MERN_FS/frontend/src/session/login_form_container.js":"10","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/ui_reducer.js":"11","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/entities_reducer.js":"12","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/errors_reducer.js":"13","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/session_api_reducer.js":"14","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile_container.js":"15","/mnt/c/New App Academy/MERN_FS/frontend/src/modal.jsx":"16","/mnt/c/New App Academy/MERN_FS/frontend/src/session/signup_form_container.jsx":"17","/mnt/c/New App Academy/MERN_FS/frontend/src/components/about/about_container.jsx":"18","/mnt/c/New App Academy/MERN_FS/frontend/src/components/create_favor/favor_create_container.jsx":"19","/mnt/c/New App Academy/MERN_FS/frontend/src/components/covid_help/covid_help.jsx":"20","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/splash_container.jsx":"21","/mnt/c/New App Academy/MERN_FS/frontend/src/components/newsfeed/newsfeed_container.jsx":"22","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profile_show/profile_show_container.jsx":"23","/mnt/c/New App Academy/MERN_FS/frontend/src/components/about/about.jsx":"24","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/modals_reducer.js":"25","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/session_errors_reducer.js":"26","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/favors_reducer.js":"27","/mnt/c/New App Academy/MERN_FS/frontend/src/actions/favor_actions.js":"28","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/users_reducer.js":"29","/mnt/c/New App Academy/MERN_FS/frontend/src/session/login_form.jsx":"30","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile_nav_container.js":"31","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile.jsx":"32","/mnt/c/New App Academy/MERN_FS/frontend/src/session/signup_form.jsx":"33","/mnt/c/New App Academy/MERN_FS/frontend/src/components/create_favor/favor_create.jsx":"34","/mnt/c/New App Academy/MERN_FS/frontend/src/components/about/hospitals_near.jsx":"35","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/splash.jsx":"36","/mnt/c/New App Academy/MERN_FS/frontend/src/components/newsfeed/newsfeed.jsx":"37","/mnt/c/New App Academy/MERN_FS/frontend/src/utils/favors_api_util.js":"38","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profile_show/profile_show.jsx":"39","/mnt/c/New App Academy/MERN_FS/frontend/src/session/navbar_container.js":"40","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/map.jsx":"41","/mnt/c/New App Academy/MERN_FS/frontend/src/session/navbar.jsx":"42","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile_nav.jsx":"43","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profilenav2.jsx":"44","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/profile_nav_container.js":"45","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/profilenav2.jsx":"46"},{"size":1062,"mtime":1607014327042,"results":"47","hashOfConfig":"48"},{"size":294,"mtime":1607014327022,"results":"49","hashOfConfig":"48"},{"size":611,"mtime":1610137444886,"results":"50","hashOfConfig":"48"},{"size":353,"mtime":1607014327005,"results":"51","hashOfConfig":"48"},{"size":2907,"mtime":1610131152541,"results":"52","hashOfConfig":"48"},{"size":1711,"mtime":1609873181265,"results":"53","hashOfConfig":"48"},{"size":462,"mtime":1607014327033,"results":"54","hashOfConfig":"48"},{"size":265,"mtime":1607014327056,"results":"55","hashOfConfig":"48"},{"size":801,"mtime":1608568219885,"results":"56","hashOfConfig":"48"},{"size":913,"mtime":1608568219821,"results":"57","hashOfConfig":"48"},{"size":187,"mtime":1607014327027,"results":"58","hashOfConfig":"48"},{"size":315,"mtime":1607014327038,"results":"59","hashOfConfig":"48"},{"size":220,"mtime":1607014327036,"results":"60","hashOfConfig":"48"},{"size":684,"mtime":1608568248873,"results":"61","hashOfConfig":"48"},{"size":993,"mtime":1609944950323,"results":"62","hashOfConfig":"48"},{"size":1171,"mtime":1607097904590,"results":"63","hashOfConfig":"48"},{"size":966,"mtime":1608568219870,"results":"64","hashOfConfig":"48"},{"size":207,"mtime":1608568248811,"results":"65","hashOfConfig":"48"},{"size":692,"mtime":1608568219688,"results":"66","hashOfConfig":"48"},{"size":800,"mtime":1609429514391,"results":"67","hashOfConfig":"48"},{"size":763,"mtime":1610823754218,"results":"68","hashOfConfig":"48"},{"size":976,"mtime":1610038325649,"results":"69","hashOfConfig":"48"},{"size":1243,"mtime":1610131152578,"results":"70","hashOfConfig":"48"},{"size":4700,"mtime":1610112868680,"results":"71","hashOfConfig":"48"},{"size":348,"mtime":1607014327034,"results":"72","hashOfConfig":"48"},{"size":512,"mtime":1608568219806,"results":"73","hashOfConfig":"48"},{"size":1650,"mtime":1610377622305,"results":"74","hashOfConfig":"48"},{"size":1763,"mtime":1610377835086,"results":"75","hashOfConfig":"48"},{"size":635,"mtime":1610377778647,"results":"76","hashOfConfig":"48"},{"size":2438,"mtime":1610377622312,"results":"77","hashOfConfig":"48"},{"size":959,"mtime":1610742149588,"results":"78","hashOfConfig":"48"},{"size":12011,"mtime":1610742149557,"results":"79","hashOfConfig":"48"},{"size":3816,"mtime":1610742109174,"results":"80","hashOfConfig":"48"},{"size":3838,"mtime":1610742108935,"results":"81","hashOfConfig":"48"},{"size":1319,"mtime":1608568248834,"results":"82","hashOfConfig":"48"},{"size":9061,"mtime":1610812816504,"results":"83","hashOfConfig":"48"},{"size":9032,"mtime":1610742108966,"results":"84","hashOfConfig":"48"},{"size":524,"mtime":1610377726722,"results":"85","hashOfConfig":"48"},{"size":12313,"mtime":1610742108983,"results":"86","hashOfConfig":"48"},{"size":825,"mtime":1610742109162,"results":"87","hashOfConfig":"48"},{"size":1859,"mtime":1610049066249,"results":"88","hashOfConfig":"48"},{"size":1798,"mtime":1610467904923,"results":"89","hashOfConfig":"48"},{"size":6775,"mtime":1610742149721,"results":"90","hashOfConfig":"48"},{"size":5785,"mtime":1610742149613,"results":"91","hashOfConfig":"48"},{"size":965,"mtime":1610812671961,"results":"92","hashOfConfig":"48"},{"size":5628,"mtime":1610823797431,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"e1an4n",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"96"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"96"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"96"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"96"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"96"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/New App Academy/MERN_FS/frontend/src/index.js",[],["203","204"],"/mnt/c/New App Academy/MERN_FS/frontend/src/root.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/utils/session_api_util.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/store/store.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/actions/session_actions.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/start.js",["205"],"import React from 'react';\nimport { AuthRoute, ProtectedRoute } from './utils/route_util';\nimport { Switch } from 'react-router-dom';\nimport LoginFormContainer from './session/login_form_container';\nimport SignupFormContainer from './session/signup_form_container';\nimport ProfileContainer from './components/profiles/profile_container';\nimport Modal from './modal';\nimport SplashContainer from './components/splash/splash_container';\nimport { Route } from 'react-router-dom';\nimport FavorCreateContainer from './components/create_favor/favor_create_container';\nimport About from './components/about/about'\nimport AboutContainer from './components/about/about_container';\nimport CovidHelp from './components/covid_help/covid_help';\nimport NewsFeedContainer from './components/newsfeed/newsfeed_container';\nimport ProfileShowContainer from './components/profile_show/profile_show_container';\n\n\nconst App = () => (\n  <div>\n     <Modal />\n    \n    <Switch>\n      <Route exact path=\"/\" component={SplashContainer} /> \n      <Route exact path=\"/about\" component={AboutContainer} />\n      <Route exact path=\"/newsfeed\" component={NewsFeedContainer} />\n      <ProtectedRoute exact path='/add' component = {FavorCreateContainer} />\n      <AuthRoute exact path=\"/login\" component={LoginFormContainer} />\n      <AuthRoute exact path=\"/signup\" component={SignupFormContainer} />\n      <Route exact path=\"/covid\"  component={CovidHelp} />\n      <ProtectedRoute exact path=\"/:user_id\" component={ProfileContainer} /> \n      <ProtectedRoute exact path=\"profile\" component={ProfileContainer} /> \n      <Route exact path=\"/user/:user_id\" component={ProfileShowContainer} />\n    \n    </Switch>\n  </div>\n);\n\nexport default App;\n\n","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/root_reducer.js",["206"],"import { ReactReduxContext } from \"react-redux\";\nimport {combineReducers} from 'redux';\nimport entitiesReducer from \"./entities_reducer\";\nimport sessionReducer from './session_api_reducer';\nimport errorsReducer from './errors_reducer';\n\nimport uiReducer from \"./ui_reducer\";\n\n\nconst RootReducer = combineReducers({\n    entities: entitiesReducer,\n    session: sessionReducer,\n        ui: uiReducer,\n    errors: errorsReducer\n\n\n\n})\n\n\n\n\n\nexport default RootReducer;","/mnt/c/New App Academy/MERN_FS/frontend/src/actions/modal_actions.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/utils/route_util.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/session/login_form_container.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/ui_reducer.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/entities_reducer.js",["207"],"import { ReactReduxContext } from \"react-redux\";\nimport { combineReducers } from 'redux';\nimport usersReducer from './users_reducer';\nimport favorsReducer from './favors_reducer';\n\n\nconst entitiesReducer = combineReducers({\n    users: usersReducer,\n    favors: favorsReducer\n\n})\n\n\n\n\n\nexport default entitiesReducer;","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/errors_reducer.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/session_api_reducer.js",["208"],"\nimport { RECEIVE_CURRENT_USER, \n         RECEIVE_USER_LOGOUT, \n         RECEIVE_USER_SIGN_IN } from '../actions/session_actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      \n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: undefined\n      };\n    case RECEIVE_USER_SIGN_IN:\n      return {\n        ...state,\n        isSignedIn: true\n      }\n    default:\n      return state;\n  }\n}\n\n","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile_container.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/modal.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/session/signup_form_container.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/about/about_container.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/create_favor/favor_create_container.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/covid_help/covid_help.jsx",["209","210","211","212","213","214"],"import React from 'react';\nimport ProfileNavContainer from '../profiles/profile_nav_container';\n\nimport '../profiles/profile.css';\n\n\nclass CovidHelp  extends React.Component {\n\n\n\n\n\n\nrender() {\n\nreturn (\n\n<>\n<ProfileNavContainer />\n<div className=\"banners\">\n\n    <img className=\"support-banner\" src=\"https://i.ibb.co/SQLXj3y/1.png\"/>\n    <img className=\"support-banner\" src=\" https://i.ibb.co/fDdmsYj/2.png\"/>\n    <img className=\"support-banner\" src=\"https://i.ibb.co/r4g1jGw/3.png\"/>\n    <img className=\"support-banner\" src=\"https://i.ibb.co/fk1Rkdd/4.png\"/>\n    <img className=\"support-banner\" src=\"https://i.ibb.co/gFCy8ny/5.png\"/>\n    <img className=\"support-banner\" src=\"https://i.ibb.co/ZxttcGY/6.png\"/>\n                          \n</div>\n</>\n\n\n\n\n\n)\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n}\n\n\nexport default CovidHelp;\n","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/splash_container.jsx",["215","216"],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/newsfeed/newsfeed_container.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/profile_show/profile_show_container.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/about/about.jsx",["217","218","219","220","221","222"],"import React from 'react';\r\nimport HospitalsNear from './hospitals_near'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCodeBranch} from '@fortawesome/free-solid-svg-icons'\r\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons'\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './about.css'\r\n\r\nclass About extends React.Component {\r\n\r\n    render() {\r\n        const git = <img alt=\"icon\" src=\"https://git-scm.com/images/logos/downloads/Git-Icon-1788C.png\" height={30} width={30}></img>;\r\n        const link = <img alt=\"icon\" src=\"https://pngmind.com/wp-content/uploads/2019/08/Linkedin-Logo-Png-Transparent-Background.png\" width={30} height = {30} ></img>\r\n        return(\r\n            <div className=\"about\">\r\n                    <div className=\"about-header\">\r\n                        <h1> About Us </h1>\r\n                        <h2> View more of our projects or contact us!</h2>\r\n                    </div>\r\n                    <div className=\"about-people\">\r\n                        <div className=\"person-div\">\r\n                            <h2> Divyam Satyarthi </h2>\r\n                            <div className=\"links\">\r\n                                <div className=\"link-text-image\">\r\n                                    <a href=\"https://github.com/divyams1\">\r\n                                        {git}\r\n                                        <p> Github </p>\r\n                                    </a>\r\n                                </div>\r\n                                <div className=\"link-text-image\">\r\n                                    <a href=\"https://www.linkedin.com/in/divyam-satyarthi-b6628513b/\">\r\n                                    {link}\r\n                                    <p> LinkedIn</p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <h4> Email: divyamsat@gmail.com </h4>\r\n                            <h4> Phone: 443-838-7815</h4>\r\n                        </div>\r\n\r\n                        <div className=\"person-div\">\r\n                            <h2> Aaron Robinson </h2>\r\n                            <div className=\"links\">\r\n                                <div className=\"link-text-image\">\r\n                                    <a href=\"https://github.com/indierusky\"> \r\n                                        {git}\r\n                                        <p> Github </p>\r\n                                    </a>\r\n                                </div>\r\n                                <div className=\"link-text-image\">\r\n                                     <a href=\"https://www.linkedin.com/in/aaron-robinson-258a77201/\"> \r\n                                         {link}\r\n                                         <p> LinkedIn </p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <h4> Email: aaronjrobinson@hotmail.com </h4>\r\n                            <h4> Phone: 347-664-0151</h4>\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"person-div\">\r\n                            <h2> Anthony Collichio </h2>\r\n                            <div className=\"links\">\r\n                                    <div className=\"link-text-image\">\r\n                                <a  href=\"https://github.com/collich55\">\r\n                                            {git}\r\n                                            <p> Github</p>\r\n                                            </a>\r\n                                    </div>\r\n                                    <div className=\"link-text-image\">\r\n                                <a  href=\"https://www.linkedin.com/in/anthony-collichio-451b11103/\"> \r\n                                            {link}\r\n                                            <p> LinkedIn </p>\r\n                                        </a>\r\n                                    </div>\r\n                            </div>\r\n                            <h4> Email: collich55@gmail.com  </h4>\r\n                            <h4> Phone: 585-794-3850  </h4>\r\n                        </div>\r\n                    </div>\r\n                    <Link id=\"back-link\" to={'/'}>Back</Link>\r\n                </div>\r\n\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default About;\r\n\r\n         {/* <div className=\"link-text-image\">\r\n\r\n                                    <img className=\"link-image\" src=\"https://images.spot.im/v1/production/xfghicjlsq78tkpf9xxe\" />\r\n                                    <p> Angel List </p>\r\n                                </div> */}","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/modals_reducer.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/session_errors_reducer.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/favors_reducer.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/actions/favor_actions.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/users_reducer.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/session/login_form.jsx",["223"],"// src/components/session/login_form.js\n\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.currentUser === true) {\n      this.props.history.push('/profile');\n    }\n\n    this.setState({errors: nextProps.errors})\n  }\n\n\n  componentWillUnmount(){\n      \n    this.props.clearSessionErrors();\n\n\n  }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    let user = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n\n      this.props.loginUser(user);\n    \n   \n  }\n\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.state.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.state.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"login-form-container\">\n        <form className=\"login-form-box\" onSubmit={this.handleSubmit}>\n          <center>Welcome to the Covid Connection! </center>\n          <br/>\n\n            <center><img className=\"logo-img\"  src=\"https://i.ibb.co/5MynHJQ/Clogo3.png\"/></center>\n            \n\n           \n           <br/>\n             \n           <center>Please  Login or {this.props.other}</center>\n            \n          <div onClick={this.props.closeModal} className=\"close-x\">X</div>\n          {this.renderErrors()}\n          <div className=\"login-form\">\n              <input type=\"text\"\n              className=\"form-input\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Enter Email\"\n              />\n            <br/>\n              <input type=\"password\"\n              className=\"form-input\"\n                value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Enter Password\"\n              />\n            <br/>\n            <input className=\"submit-btn\" type=\"submit\" value=\"Submit\" />\n            \n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(LoginForm);","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile_nav_container.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile.jsx",["224","225","226","227","228","229","230"],"import React from 'react';\nimport ProfileNavContainer from './profile_nav_container';\nimport {NavLink, Link} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faLifeRing, faHandsHelping} from '@fortawesome/free-solid-svg-icons';\nimport FavorsReducer from '../../reducers/favors_reducer';\nimport NavBarContainer from '../../session/navbar_container';\nimport NavBarNoLogoContainer from '../../session/navbar_no_logo_container';\n\n\n\n// import FavorItem from '../favors/favor_item';\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.props.favors;\n        this.handleFavors = this.handleFavors.bind(this);\n        this.handleNoFavors = this.handleNoFavors.bind(this);\n        this.renderForm = this.renderForm.bind(this);\n        this.handleTime = this.handleTime.bind(this);\n    }\n    componentDidMount() {\n      console.log(this.props.currentUser.id)\n      this.props.fetchFavors();\n      this.state = this.props.favors;\n      this.props.closeModal();\n      // this.props.fetchFavorsForUser({ user_id: this.props.user_profile_id });\n    }\n    componentWillReceiveProps(newState) {\n      this.setState({ favors: newState.favors });\n    }\n\n\n    componentDidUpdate(prevProps) {\n\n \n   \n\n\n        if (this.props.favors !== prevProps.favors) {\n\n        \n\n            const newFavors = this.props.favors;\n            this.setState({ favors: newFavors })\n        }\n\n\n}\n\n\n    componentWillUnmount() {\n        this.props.closeModal();\n    }\n    // listOfRequest() {\n    //   return this.props.favors[0].filter(favor => favor.favor_for_user_id === this.props.user_profile_id)\n    // }\n    renderForm(field) {\n    if (this.props.modal === field) {\n      return () => {\n        this.props.closeModal();\n      }\n    }\n    return () => this.props.openModal(field)\n  }\n    handleNoFavors(){\n     \n              if (!this.props.favors) return (\n              <>\n              {/* <ProfileNavContainer /> */}\n              <div className=\"prof-nofavors\"> We currently have no record of any favors by you.\n                Click the add button to list any good deeds you have done lately </div>\n              </>\n    )}\n  handleNoTakenFavors() {\n    \n    if (!this.props.favors) return (\n      <>\n        {/* <ProfileNavContainer /> */}\n        <div className=\"prof-nofavors\"> We currently have no record of any favors that you are working on for other users.\n       </div>\n      </>\n    )\n  }\n  handleButtonName(favor) {\n    if (favor.favor_status === \"Doing\") {\n      return \"This is Taken by you, \" + favor.favor_by_username\n      // return \"This is Taken by you, \" + favor.favor_by_username + \". Click here to mark complete.\"\n    } else if (favor.favor_status === \"Request\") {\n      return \"Click to Accept Favor\"\n    } else {\n      return \"Debug this.\"\n    }\n  }\n    handleTime(time){\n    let currentDate = new Date(time);\n    let hours = currentDate.getHours();\n    let minutes = currentDate.getMinutes();\n    let seconds = currentDate.getSeconds();\n    hours = (hours < 10) ? `0${hours}` : hours;\n    minutes = (minutes < 10) ? `0${minutes}` : minutes;\n    seconds = (seconds < 10) ? `0${seconds}` : seconds;\n    return (\n      <div className=\"date\">\n        <span> Date: {currentDate.toDateString()} </span>\n        <span className=\"time-str\"> Time: {hours} :{minutes} :{seconds} </span>\n      </div>\n    )\n    }\n    // .filter(favor => favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status !== \"Done\")\n  handleFavors() {\n    if (this.props.favors) {\n      return (\n        <div className=\"small-prof-favors\">\n          {this.props.favors\n            .filter(favor => favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status !== \"Done\")\n            .map((favor, idx) => {\n              if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\n                return <div className=\"favor-item\" >\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  {/*NOTE: We may want to add a \"this favor is being fulfilled by *username* here\" */}\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Request\") {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p className=\"currently-fulfilling\">This favor has not been taken yet</p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\n                </div>\n              } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p id=\"currently-fulfilling\">This favor has been accepted by <Link className=\"showLinksCurrently\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to log favor as complete.</button>\n                </div>\n              } else if (favor.favor_by_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p id=\"currently-fulfilling\">You are currently fulfilling this favor for {favor.favor_for_username}</p>\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>\n                    Click here to undo accepting this favor.\n                  </button>\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              }\n              else if (favor.favor_by_username) {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\">  {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p id=\"currently-fulfilling\">This favor has been accepted by <Link className=\"showLinks\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              } else {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\">  {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  \n                  {/* <p>This favor has been accepted by {favor.favor_by_username}</p> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to accept favor</button>\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                  {/* <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button> */}\n                </div>\n\n              }\n            }\n            )\n          }\n        </div>\n      )\n    }\n  }\n      // .filter(favor => favor.favor_by_user_id === this.props.currentUser.id && favor.favor_status !== \"Done\")\n  handleTakenFavors() {\n    if (this.props.favors) {\n      return (\n        <div className=\"small-prof-favors\">\n          {this.props.favors\n            .filter(favor => favor.favor_by_user_id === this.props.currentUser.id && favor.favor_status !== \"Done\")\n            .map((favor, idx) => {\n              if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\n                return <div className=\"favor-item\" >\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className= \"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  {/*NOTE: We may want to add a \"this favor is being fulfilled by *username* here\" */}\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Request\") {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p className=\"currently-fulfilling\">This favor has not been taken yet</p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\n                </div>\n              } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p id=\"currently-fulfilling\">This favor has been accepted by <Link className=\"showLinksCurrently\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to log favor as complete.</button>\n                </div>\n              } else if (favor.favor_by_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p id=\"currently-fulfilling\">You are currently fulfilling this favor</p>\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>\n                    Click here to undo accepting this favor.\n                  </button>\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              }\n              else if (favor.favor_by_username) {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\">  {favor.favor_description}</p>\n                  <p id=\"currently-fulfilling\">This favor has been accepted by <Link className=\"showLinks\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              } else {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\">  {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  \n                  {/* <p>This favor has been accepted by {favor.favor_by_username}</p> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to accept favor</button>\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                  {/* <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button> */}\n                </div>\n\n              }\n            }\n            )\n          }\n        </div>\n      )\n    }\n  }\n    render() {\n      // const this_user_favors = this.listOfRequest();\n        // const noFavors = this.handleNoFavors();\n        // const hasFavors = this.handleFavors();\n        const favors = (this.props.favors ? this.handleFavors() : this.handleNoFavors());\n        const taken_favors = (this.props.favors ? this.handleTakenFavors() : this.handleNoTakenFavors());\n      // if (!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0)) {\n      //   return (\n      //     <h1>You are not logged in</h1>\n      //   )\n      // }\n\n      if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\n\n          return (\n            <>\n              <NavBarNoLogoContainer />\n            <div className=\"profile-view\">\n              \n           \n\n            <div className=\"prof-favors\">\n              <h1 className=\"profile-name-title\">  Welcome {this.props.currentUser.username}!  </h1>\n              {/* <h3 className=\"prof-fav-hd2\"> These are the good deeds you have requested from others  </h3> <br /> */}\n                \n                <div className=\"favor-lst\">\n                    \n                    <h2 className=\"prof-fav-hd\"> <FontAwesomeIcon icon={faLifeRing} />  Requested Favors</h2>\n                    <button className=\"favor-btn\" onClick={this.renderForm('favor')}>\n                      <img className=\"add-favor\" src=\"https://cdn2.iconfinder.com/data/icons/vibrancie-health/30/health_002-medical-cross-hospital-first-aid-doctor-512.png\" /> Add Favor</button>\n                    {favors}\n                </div>\n                  <h2 className=\"prof-fav-hd-taken\"> <FontAwesomeIcon icon={faHandsHelping} />  Taken Favors</h2>\n                  <div className=\"favor-lst\">\n                    {taken_favors}\n                  </div>\n                  <div className=\"small-prof-favors\">\n                {/* {this.handleFavors()}\n                {this.handleNoFavors()} */}\n              </div>\n              </div>\n               <div>\n                        {/* <img className=\"banner\" src=\"https://i.ibb.co/MSmtpdb/Stay.jpg\" alt=\"covid help\"/> */}\n              </div>\n              {/* {this.state.favors.map(favor => (\n                <FavorItem key={favor.id} title={favor.title} />\n              ))} */}\n            </div>\n            </>\n          );\n        } else {\n\n            return (\n              <>\n                <ProfileNavContainer />\n                <div className=\"profile-view\">\n                  {/* <div  className=\"banners\">\n                     <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3>\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" />\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" />\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" />\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/LzLgWcc/connected-1.png\" />https://i.ibb.co/1JDb3PM/connected-2.png\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/1JDb3PM/connected-2.png\" />\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/gt2Lfs5/ccmessage-1.png\" /> \n                       <img className=\"support-banner\" src=\"https://i.ibb.co/6mFTFMS/ccmessage-2.png\" />\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/LpRyT28/staysafe.png\" />\n\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/KXzV90D/connected-3.png\" />\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" />\n              </div> */}\n                  <div className=\"prof-favors\">\n                    <h1 className=\"favor-title\">  Welcome {this.props.currentUser.username}!  </h1>\n                    <div className=\"two-lists\">\n                    {/* <h3 className=\"prof-fav-hd2\"> These are the good deeds you have requested from others  </h3> <br /> */}\n                    <div className=\"favor-lst-requests\">\n                      <div className=\"favor-request-boxes\">\n                          <h2 className=\"prof-fav-hd\"> <FontAwesomeIcon icon={faLifeRing} />  Requested Favors</h2>\n                          <div className=\"favor-button-and-text\" onClick={this.renderForm('favor')}>\n                          <button className=\"favor-btn\" onClick={this.renderForm('favor')}>\n                              <img className=\"add-favor\" src=\"https://cdn2.iconfinder.com/data/icons/vibrancie-health/30/health_002-medical-cross-hospital-first-aid-doctor-512.png\" /> \n                          </button>\n                          <p id=\"add-favor-text\">{\"Ask Favor\"}</p>\n                        </div>\n                      </div>\n                      {favors}\n                    </div>\n                    \n                    <div className=\"favor-lst-taken\">\n                        <h2 className=\"prof-fav-hd-taken\"> <FontAwesomeIcon icon={faHandsHelping} />  Taken Favors</h2>\n                        <div className=\"favor-button-and-text\" onClick={this.renderForm('favor')}>\n                          <div className=\"add-favor-ghost\"></div>\n                          \n  \n                        </div>\n            \n                      {taken_favors}\n                    </div>\n                  </div>\n\n                  </div>\n                  <div>\n                    {/* <img className=\"banner\" src=\"https://i.ibb.co/MSmtpdb/Stay.jpg\" alt=\"covid help\"/> */}\n                  </div>\n                  {/* {this.state.favors.map(favor => (\n                    <FavorItem key={favor.id} title={favor.title} />\n                  ))} */}\n                </div>\n              </>\n            );\n\n        }\n      } \n}\nexport default Profile;","/mnt/c/New App Academy/MERN_FS/frontend/src/session/signup_form.jsx",["231","232"],"// src/components/session/signup_form.js\n\nimport React from 'react';\nimport {Link, withRouter } from 'react-router-dom';\n\nimport './session.css';\n\nconst faker = require('faker');\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      username: '',\n      password: '',\n      password2: '',\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.renderErrors = this.renderErrors.bind(this);\n    this.demoSignUp = this.demoSignUp.bind(this);\n    this.clearedErrors = false;\n  }\n\n  // componentWillReceiveProps(nextProps) {\n  //   if (nextProps.signedIn === true) {\n  //     this.props.history.push('/login');\n  //   }\n\n  //   this.setState({errors: nextProps.errors})\n  // }\n\n  update(field) {\n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    // console.log(this.state.password);\n    // console.log(this.state.password);\n\n    let user = {\n      email: this.state.email,\n      username: this.state.username,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    let loginUser = {\n\n      email: this.state.email,\n      password: this.state.password\n\n    }\n\n    this.props.signupUser(user);\n  }\n\n\n  demoSignUp(e) {\n    e.preventDefault();\n    let passw = faker.internet.password();\n    let user = {\n      email: faker.internet.email(),\n      username: faker.internet.userName(),\n      password: passw,\n      password2: passw\n    }\n\n    this.props.signupUser(user);\n  }\n\n  componentWillUnmount(){\n\n   this.props.clearSessionErrors();\n  }\n\n\n  renderErrors() {\n    return(\n      <ul>\n        {Object.keys(this.props.errors).map((error, i) => (\n          <li key={`error-${i}`}>\n            {this.props.errors[error]}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"login-form-container\">\n         \n        <form className=\"login-form-box\" onSubmit={this.handleSubmit}>\n          <center>Welcome to the Covid Connection! </center>\n          <br/>\n\n             <center><img className=\"logo-img\"  src=\"https://i.ibb.co/5MynHJQ/Clogo3.png\"/></center>\n          \n          \n           <br/>\n           <center> Please  Sign Up or {this.props.other} </center>\n        <center id=\"demo-sign\"> Use <Link onClick={this.demoSignUp}>Demo</Link> </center>\n\n          <div onClick={this.props.closeModal} className=\"close-x\">X</div>\n                          \n                          {this.renderErrors()}\n          <div className=\"login-form\">\n            <br/>\n              <input type=\"text\"\n                className=\"form-input\"\n                value={this.state.email}\n                onChange={this.update('email')}\n                placeholder=\"Enter Email\"\n              />\n            <br/>\n              <input type=\"text\"\n                className=\"form-input\"\n                value={this.state.username}\n                onChange={this.update('username')}\n                placeholder=\"Enter Username\"\n              />\n            <br/>\n              <input type=\"password\"\n               className=\"form-input\"\n               value={this.state.password}\n                onChange={this.update('password')}\n                placeholder=\"Enter Password\"\n              />\n            <br/>\n              <input type=\"password\"\n                className=\"form-input\"\n                value={this.state.password2}\n                onChange={this.update('password2')}\n                placeholder=\"Confirm Password\"\n              />\n            <br/>\n            <input                 \n           className=\"submit-btn\"\n             type=\"submit\" value=\"Submit\" />\n           \n          </div>\n\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SignupForm);","/mnt/c/New App Academy/MERN_FS/frontend/src/components/create_favor/favor_create.jsx",["233"],"import React from 'react';\r\n\r\nclass FavorCreate extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            favor_title: '',\r\n            favor_description: '',\r\n            favor_lat: 0,\r\n            favor_lng: 0,\r\n            favor_status: '',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleDropInput = this.handleDropInput.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition( position => {\r\n        this.setState( { favor_lat: position.coords.latitude })\r\n        this.setState( { favor_lng: position.coords.longitude})\r\n    })\r\n  }\r\n\r\n\r\n   componentWillReceiveProps(newState) {\r\n      this.setState({  favor_title: newState.favor_title,\r\n            favor_description: newState.favor_description,\r\n            favor_lat: newState.favor_lat,\r\n            favor_lng: newState.favor_lng,\r\n            favor_status: newState.favor_status, });\r\n    }\r\n   \r\n    handleInput(field) {\r\n        return e=> {\r\n            this.setState( { [field]: e.currentTarget.value })\r\n        }\r\n    }\r\n\r\n    handleDropInput(e) {\r\n         \r\n     this.setState({ \"favor_status\": e.currentTarget.value })\r\n     \r\n    }\r\n\r\n    handleSubmit(e) {\r\n\r\n        \r\n        e.preventDefault();\r\n        const favor = Object.assign({}, this.state)\r\n       \r\n        this.props.createFavor(favor).then(this.props.closeModal()).then(window.location.reload());\r\n        // this.props.history.push('/')\r\n\r\n        this.props.fetchFavors();\r\n        \r\n    }\r\n\r\n    render() {\r\n        const display = (\r\n            <div className=\"favor-create-form\">\r\n                \r\n                <form id={\"favor-form\"}>\r\n                    <center><h1 className=\"form-head\" id={\"favor-form-title\"}> Create a Favor </h1></center>\r\n\r\n                    <br/>\r\n                       <center><img className=\"logo-img\"  src=\"https://i.ibb.co/5MynHJQ/Clogo3.png\"/></center>\r\n\r\n                     {/* <center><img className=\"logo-img\"  src=\"https://i.ibb.co/1mHJgBD/C.png\"/></center> */}\r\n                     <div onClick={this.props.closeModal} className=\"close-x\">X</div>\r\n\r\n                    <div className=\"favor-form-div\">\r\n                    <h2 className=\"form-head\"> Title: </h2>\r\n                    <label>\r\n                        <input id={\"input-form\"} type='text' placeholder=\"Title\" value={this.state.favor_title} onChange={this.handleInput('favor_title')} />\r\n                    </label>\r\n                    {/* <h2 className=\"form-head\"> Status:</h2>\r\n                    <select value={this.state.favor_status} onChange={this.handleDropInput} >\r\n                        <option value=\"Request\" >Request</option>\r\n                        <option value= \"Done\" >Done</option> \r\n                          \r\n                    </select> */}\r\n                    {/* <label>\r\n                        <input id={\"input-form\"} type='text' placeholder=\"Request\"  />\r\n                    </label> */}\r\n                    <h2 className=\"form-head\"> Description: </h2>\r\n                    <label>\r\n                        <textarea id={\"text-form\"} type='text' placeholder=\"Description\" value={this.state.favor_description} onChange={this.handleInput('favor_description')} />\r\n                    </label>\r\n                    <br/>\r\n                    <button id={\"favor-form-button\"}  disabled={!this.state.favor_title} onClick={this.handleSubmit}>Create Favor</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    return( \r\n        <div>\r\n            {display}\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default FavorCreate;","/mnt/c/New App Academy/MERN_FS/frontend/src/components/about/hospitals_near.jsx",["234","235","236","237","238"],"import React from 'react';\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow, addListener} from 'google-maps-react';\r\nconst mapStyles = {\r\n  width: '80%',\r\n  height: '80%',\r\n  margin: '75px'\r\n}\r\nclass HospitalNear extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            lat: 0, \r\n            lng: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n          navigator.geolocation.getCurrentPosition( position => {\r\n        this.setState( { lat: position.coords.latitude })\r\n        this.setState( { lng: position.coords.longitude})\r\n    })\r\n    }\r\n\r\n    render() {\r\n        const locat = { lat: this.state.lat, lng: this.state.lng}\r\n        const locationString = `${this.state.lat},${this.state.lng}`\r\n        const apiRequest= `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${locationString}&radius=2000&type=hospital&key=AIzaSyAZpaEFWsQyJOahKBVfBZ1g3mpemxo1VQo`\r\n        const map = ( <Map\r\n            google = {this.props.google}\r\n            zoom={8}\r\n            style={mapStyles}\r\n            initialCenter= {locat}\r\n            className=\"map-container\"\r\n            ></Map>)\r\n\r\n       \r\n        \r\n        return(\r\n            <div>\r\n                {map}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default HospitalNear;","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/splash.jsx",["239","240","241","242","243","244","245","246","247","248","249"],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/newsfeed/newsfeed.jsx",["250","251","252","253"],"import React from 'react';\r\nimport {NavLink, Link} from 'react-router-dom';\r\nimport './newsfeed.css'\r\nimport ProfileNavContainer from '../profiles/profile_nav_container';\r\nimport NavBarNoLogoContainer from '../../session/navbar_no_logo_container';\r\nimport { faVirus } from '@fortawesome/free-solid-svg-icons';\r\nclass NewsFeed extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { myFavors: false, favorRequests: false, userSearch: false, forUser: ''}\r\n        this.userShow = this.userShow.bind(this);\r\n        this.requestShow = this.requestShow.bind(this);\r\n        // this.handleNav = this.handleNav.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchFavors();\r\n    }\r\n    requestShow() {\r\n        if (!this.state.favorRequests) {\r\n            this.setState( { favorRequests: true})\r\n        } else {\r\n            this.setState( { favorRequests: false})\r\n        }\r\n    }\r\n      userShow() {\r\n        if ( !this.state.myFavors ) {\r\n            this.setState( { myFavors: true})\r\n        } else {\r\n            this.setState( {myFavors: false })\r\n        }\r\n    }\r\n    updateName() {\r\n        return e=> {\r\n            this.setState( { forUser: e.currentTarget.value })\r\n        }\r\n    }\r\n    handleButtonName(favor) {\r\n        if (favor.favor_status === \"Doing\") {\r\n            return \"This is Taken by \" + favor.favor_by_username\r\n        } else if (favor.favor_status === \"Request\") {\r\n            return \"Click to Accept Favor\"\r\n        } else {\r\n            return \"Debug this.\"\r\n        }\r\n    }\r\n\r\n    handleTime(time) {\r\n        let currentDate = new Date(time);\r\n        let hours = currentDate.getHours();\r\n        let minutes = currentDate.getMinutes();\r\n        let seconds = currentDate.getSeconds();\r\n        hours = (hours < 10) ? `0${hours}` : hours;\r\n        minutes = (minutes < 10) ? `0${minutes}` : minutes;\r\n        seconds = (seconds < 10) ? `0${seconds}` : seconds;\r\n        return (\r\n            <div className=\"date\">\r\n                <span> Date: {currentDate.toDateString()} </span>\r\n                <span className=\"time-str\"> Time: {hours} :{minutes} :{seconds} </span>\r\n            </div>\r\n        )\r\n    }\r\n    render() {\r\n        let favor_text = this.state.myFavors? \"View All Favors\" : \"View Your Favors\"\r\n        let request_text = this.state.favorRequests?   \"View All Posts\" : \"View Requests\"\r\n        let favors = (this.props.favors.data) || [];\r\n        favors = ( this.state.myFavors? favors.filter( favor => this.props.currentUser.id === favor.favor_for_user_id) : favors)\r\n        favors = ( this.state.favorRequests? favors.filter( favor => favor.status === \"Doing\") : favors )\r\n        favors = ( this.state.userSearch? favors.filter( favor => favor.favor_for_username === this.state.forUser) : favors)\r\n        favors = favors.filter(favor => favor.favor_status !== \"Done\")\r\n       \r\n        favors = favors.map( (favor, idx)=> {\r\n            if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\r\n                return <div className=\"favor-item\" >\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                    <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                    <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                    {/*NOTE: We may want to add a \"this favor is being fulfilled by *username* here\" */}\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n            } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Request\") {\r\n                return <div className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                    <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                    <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                    <p className=\"currently-fulfilling\">This favor has not been taken yet</p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\r\n                </div>\r\n            } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\r\n                return <div className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                    <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                    <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                    <p id=\"currently-fulfilling\">Your favor is currently being fulfilled by <Link className=\"showLinksCurrently\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to log favor as complete.</button>\r\n                </div>\r\n            } else if (favor.favor_by_user_id === this.props.currentUser.id) {\r\n                return <div className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                    <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                    <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                    <p id=\"currently-fulfilling\">You are currently fulfilling this favor for <Link className=\"showLinksCurrently\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>\r\n                        Click here to undo accepting this favor.\r\n                  </button>\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n            }\r\n            else if (favor.favor_by_username) {\r\n                return <div className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                    <p className=\"favor-description\">  {favor.favor_description}</p>\r\n                    <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                    <p id=\"currently-fulfilling\">This favor has been accepted by <Link className=\"showLinksCurrently\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n            } else {\r\n                return <div className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                    <p className=\"favor-description\">  {favor.favor_description}</p>\r\n                    <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n\r\n                    {/* <p>This favor has been accepted by {favor.favor_by_username}</p> */}\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to accept favor</button>\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    {/* <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button> */}\r\n                </div>\r\n\r\n            }\r\n        })\r\n        if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\r\n        return(\r\n            <>\r\n            <div id=\"no-logo\">\r\n\r\n                 <NavBarNoLogoContainer />\r\n\r\n            </div>\r\n            \r\n            <div className=\"profile-view\">\r\n                \r\n                \r\n                    <div className=\"news-banners\">\r\n                        {/* <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --\r\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/LzLgWcc/connected-1.png\" />https://i.ibb.co/1JDb3PM/connected-2.png */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/1JDb3PM/connected-2.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/gt2Lfs5/ccmessage-1.png\" />  */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/6mFTFMS/ccmessage-2.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/LpRyT28/staysafe.png\" /> */}\r\n\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/KXzV90D/connected-3.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" /> */}\r\n                    </div>\r\n                <h1 id=\"newsfeed-title\"> Newsfeed </h1>\r\n                <button className=\"map-button nav-btns-child\" onClick={this.userShow}> {favor_text} </button>\r\n                <button className=\"map-button nav-btns-child-login\" onClick={this.requestShow}> {request_text} </button>\r\n                <input type=\"text\" className=\"input-search  user-search-bar\" placeholder='Search for a User' onChange={this.updateName}></input>\r\n                {favors}\r\n            </div>\r\n            </>\r\n        ) \r\n    } else {\r\n            return (\r\n                <div className=\"newsfeed-whole\">\r\n                    <ProfileNavContainer />\r\n\r\n                    <div className=\"news-banners\">\r\n                        {/* <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --\r\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/LzLgWcc/connected-1.png\" />https://i.ibb.co/1JDb3PM/connected-2.png */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/1JDb3PM/connected-2.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/gt2Lfs5/ccmessage-1.png\" />  */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/6mFTFMS/ccmessage-2.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/LpRyT28/staysafe.png\" /> */}\r\n\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/KXzV90D/connected-3.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" /> */}\r\n                    </div>\r\n                    <h1 id=\"newsfeed-title\"> Newsfeed </h1>\r\n                    <button className=\"map-button nav-btns-child\" onClick={this.userShow}> {favor_text} </button>\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={this.requestShow}> {request_text} </button>\r\n                    <input type=\"text\" className=\"input-search  user-search-bar\" placeholder='Search for a User' onChange={this.updateName}></input>\r\n                    {favors}\r\n                </div>\r\n            ) \r\n\r\n    }\r\n    }\r\n}\r\nexport default NewsFeed;\r\n\r\n\r\n     <div className=\"news-banners\">\r\n                           <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --      \r\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3>   \r\n\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" />\r\n\r\n                      {/* <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" /> */}\r\n\r\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" />\r\n\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" />\r\n\r\n                </div>\r\n\r\n    // <button onClick={this.userShow} className=\"map-button nav-btns-child\" > {favor_text} </button>\r\n    //                 <button onClick={this.requestShow} className=\"map-button nav-btns-child-login\"> {request_text} </button>\r\n    //                 <input type=\"text\"placeholder=\"Search a Username\" className=\"user-search-bar\" value={this.state.forUser} onChange={this.updateName()}></input>","/mnt/c/New App Academy/MERN_FS/frontend/src/utils/favors_api_util.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/profile_show/profile_show.jsx",["254","255","256","257","258"],"import React from 'react';\r\nimport ProfileNavContainer from '../profiles/profile_nav_container';\r\nimport {NavLink, Link} from 'react-router-dom';\r\n// import FavorItem from '../favors/favor_item';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faLifeRing, faHandsHelping } from '@fortawesome/free-solid-svg-icons';\r\nimport FavorsReducer from '../../reducers/favors_reducer';\r\n\r\nclass ProfileShow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = this.props.favors;\r\n        this.handleFavors = this.handleFavors.bind(this);\r\n        this.handleNoFavors = this.handleNoFavors.bind(this);\r\n        this.renderForm = this.renderForm.bind(this);\r\n    }\r\n    \r\n      componentDidMount() {\r\n      this.props.fetchFavors();\r\n      this.state = this.props.favors;\r\n      this.props.closeModal();\r\n      this.props.fetchUsers();\r\n      this.props.getUser(this.props.user_profile_id);\r\n      // this.props.fetchFavorsForUser({ user_id: this.props.user_profile_id });\r\n    }\r\n    componentWillReceiveProps(newState) {\r\n      this.setState({ favors: newState.favors });\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.closeModal();\r\n    }\r\n    // listOfRequest() {\r\n    //   return this.props.favors[0].filter(favor => favor.favor_for_user_id === this.props.user_profile_id)\r\n    // }\r\n    renderForm(field) {\r\n    if (this.props.modal === field) {\r\n      return () => {\r\n        this.props.closeModal();\r\n      }\r\n    }\r\n    return () => this.props.openModal(field)\r\n  }\r\n    handleNoFavors(){\r\n     \r\n              if (!this.props.favors) return (\r\n              <>\r\n              {/* <ProfileNavContainer /> */}\r\n              <div className=\"prof-nofavors\"> We currently have no record of any favors by you.\r\n                Click the add button to list any good deeds you have done lately </div>\r\n              </>\r\n    )}\r\n  handleNoTakenFavors() {\r\n    \r\n    if (!this.props.favors) return (\r\n      <>\r\n        {/* <ProfileNavContainer /> */}\r\n        <div className=\"prof-nofavors\"> We currently have no record of any favors that you are working on for other users.\r\n       </div>\r\n      </>\r\n    )\r\n  }\r\n    handleButtonName(favor){\r\n      if (favor.favor_status === \"Doing\") {\r\n        return \"Accepted, \" + favor.favor_by_username + \". Click to undo accepting the favor\"\r\n      } else {\r\n        return \"Click to Accept Favor\"\r\n      }\r\n    }\r\n    handleTime(time){\r\n    let currentDate = new Date(time);\r\n    let hours = currentDate.getHours();\r\n    let minutes = currentDate.getMinutes();\r\n    let seconds = currentDate.getSeconds();\r\n    hours = (hours < 10) ? `0${hours}` : hours;\r\n    minutes = (minutes < 10) ? `0${minutes}` : minutes;\r\n    seconds = (seconds < 10) ? `0${seconds}` : seconds;\r\n    return (\r\n      <div className=\"date\">\r\n        <span> Date: {currentDate.toDateString()} </span>\r\n        <span className=\"time-str\"> Time: {hours} :{minutes} :{seconds} </span>\r\n      </div>\r\n    )\r\n    }\r\n  handleFavors() {\r\n    if (this.props.favors) {\r\n      return (\r\n        <div className=\"small-prof-favors\">\r\n          {this.props.favors\r\n            .filter(favor => favor.favor_for_user_id === this.props.user_profile_id && favor.favor_status !== \"Done\")\r\n            .map((favor, idx) => {\r\n              if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\r\n                return <div className=\"favor-item\" >\r\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                  {/*NOTE: We may want to add a \"this favor is being fulfilled by *username* here\" */}\r\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n              } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Request\") {\r\n                return <div className=\"favor-item\">\r\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                  <p className=\"currently-fulfilling\">This favor has not been taken yet</p>\r\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\r\n                </div>\r\n              } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\r\n                return <div className=\"favor-item\">\r\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                  <p id=\"currently-fulfilling\">Your favor is currently being fulfilled by {favor.favor_by_username}</p>\r\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to log favor as complete.</button>\r\n                </div>\r\n              } else if (favor.favor_by_user_id === this.props.currentUser.id) {\r\n                return <div className=\"favor-item\">\r\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                  <p id=\"currently-fulfilling\">You are currently fulfilling this favor</p>\r\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>\r\n                    Click here to undo accepting this favor.\r\n                  </button>\r\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n              }\r\n              else if (favor.favor_by_username) {\r\n                return <div className=\"favor-item\">\r\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                  <p className=\"favor-description\">  {favor.favor_description}</p>\r\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                  <p id=\"currently-fulfilling\">This favor has been accepted by <Link className=\"showLinksCurrently\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\r\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n              } else {\r\n                return <div className=\"favor-item\">\r\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                  <p className=\"favor-description\">  {favor.favor_description}</p>\r\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to accept favor</button>\r\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                  {/* <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button> */}\r\n                </div>\r\n\r\n              }\r\n            }\r\n            )\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  handleTakenFavors() {\r\n    if (this.props.favors) {\r\n      return (\r\n        <div className=\"small-prof-favors\">\r\n          {this.props.favors\r\n            .filter(favor => favor.favor_by_user_id === this.props.user_profile_id && favor.favor_status !== \"Done\")\r\n            .map((favor, idx) => {\r\n              if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\r\n                return <div className=\"favor-item\" >\r\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                  {/*NOTE: We may want to add a \"this favor is being fulfilled by *username* here\" */}\r\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n              } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Request\") {\r\n                return <div className=\"favor-item\">\r\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                  <p className=\"currently-fulfilling\">This favor has not been taken yet</p>\r\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\r\n                </div>\r\n              } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\r\n                return <div className=\"favor-item\">\r\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                  <p id=\"currently-fulfilling\">Your favor is currently being fulfilled by {favor.favor_by_username}</p>\r\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to log favor as complete.</button>\r\n                </div>\r\n              } else if (favor.favor_by_user_id === this.props.currentUser.id) {\r\n                return <div className=\"favor-item\">\r\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                  <p id=\"currently-fulfilling\">You are currently fulfilling this favor</p>\r\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>\r\n                    Click here to undo accepting this favor.\r\n                  </button>\r\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n              }\r\n              else if (favor.favor_by_username) {\r\n                return <div className=\"favor-item\">\r\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                  <p className=\"favor-description\">  {favor.favor_description}</p>\r\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                  <p id=\"currently-fulfilling\">This favor has been accepted by <Link className=\"showLinksCurrently\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\r\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n              } else {\r\n                return <div className=\"favor-item\">\r\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                  <p className=\"favor-description\">  {favor.favor_description}</p>\r\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to accept favor</button>\r\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                  {/* <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button> */}\r\n                </div>\r\n\r\n              }\r\n            }\r\n            )\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  // <h1 className=\"favor-header\">  {this_user.username}  </h1>\r\n  render() {\r\n    // const this_user_favors = this.listOfRequest();\r\n    // const noFavors = this.handleNoFavors();\r\n    // const hasFavors = this.handleFavors();\r\n    const favors = (this.props.favors ? this.handleFavors() : this.handleNoFavors());\r\n    const taken_favors = (this.props.favors ? this.handleTakenFavors() : this.handleNoTakenFavors());\r\n    // if (!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0)) {\r\n    //   return (\r\n    //     <h1>You are not logged in</h1>\r\n    //   )\r\n    // }\r\n    let this_user = \"\";\r\n\r\n    if (this.props.users) {\r\n      this_user = this.props.users.find(user => user._id === this.props.user_profile_id);\r\n    }\r\n\r\n      return (\r\n        <>\r\n          <ProfileNavContainer />\r\n          <div className=\"profile-view\">\r\n            {/* <div  className=\"banners\">\r\n                     <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --\r\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3>\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" />\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" />\r\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" />\r\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/LzLgWcc/connected-1.png\" />https://i.ibb.co/1JDb3PM/connected-2.png\r\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/1JDb3PM/connected-2.png\" />\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/gt2Lfs5/ccmessage-1.png\" /> \r\n                       <img className=\"support-banner\" src=\"https://i.ibb.co/6mFTFMS/ccmessage-2.png\" />\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/LpRyT28/staysafe.png\" />\r\n\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/KXzV90D/connected-3.png\" />\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" />\r\n              </div> */}\r\n            <div className=\"prof-favors\">\r\n              <h1 className=\"favor-header\">  {this_user.username}  </h1>\r\n              <div className=\"two-lists\">\r\n                {/* <h3 className=\"prof-fav-hd2\"> These are the good deeds you have requested from others  </h3> <br /> */}\r\n                <div className=\"favor-lst-requests\">\r\n                  <div className=\"favor-request-boxes\">\r\n                    <h2 className=\"prof-fav-hd\"> <FontAwesomeIcon icon={faLifeRing} />  Requested Favors</h2>\r\n                    <div className=\"favor-button-and-text\" onClick={this.renderForm('favor')}>\r\n                      <button className=\"favor-btn\" onClick={this.renderForm('favor')}>\r\n                        <img className=\"add-favor\" src=\"https://cdn2.iconfinder.com/data/icons/vibrancie-health/30/health_002-medical-cross-hospital-first-aid-doctor-512.png\" />\r\n                      </button>\r\n                      <p id=\"add-favor-text\">{\"Ask Favor\"}</p>\r\n                    </div>\r\n                  </div>\r\n                  {favors}\r\n                </div>\r\n\r\n                <div className=\"favor-lst-taken\">\r\n                  <h2 className=\"prof-fav-hd-taken\"> <FontAwesomeIcon icon={faHandsHelping} />  Taken Favors</h2>\r\n                  <div className=\"favor-button-and-text\" onClick={this.renderForm('favor')}>\r\n                    <div className=\"add-favor-ghost\"></div>\r\n\r\n\r\n                  </div>\r\n\r\n                  {taken_favors}\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div>\r\n              {/* <img className=\"banner\" src=\"https://i.ibb.co/MSmtpdb/Stay.jpg\" alt=\"covid help\"/> */}\r\n            </div>\r\n            {/* {this.state.favors.map(favor => (\r\n                    <FavorItem key={favor.id} title={favor.title} />\r\n                  ))} */}\r\n          </div>\r\n        </>\r\n      );\r\n\r\n    }\r\n  \r\n}\r\nexport default ProfileShow;\r\n","/mnt/c/New App Academy/MERN_FS/frontend/src/session/navbar_container.js",["259"],"\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/session_actions';\nimport {openModal, closeModal} from '../actions/modal_actions';\n\nimport NavBar from './navbar';\nimport NavBarNoLogo from './navbar_no_logo'\nimport './navbar.css'\n\nconst mapStateToProps = state => ({\n  loggedIn: state.session.isAuthenticated,\n  currentUser: state.session.user\n});\n\nconst mapDispatchToProps = dispatch => {\n\n  return {\n\n    sign: (<button className=\"nav-btns-child\" onClick={() => dispatch(openModal('signup'))}>\n          Sign Up\n        </button>\n    ),\n    log: (<button className=\"nav-btns-child-login\"  onClick={() => dispatch(openModal('login'))}>\n          Log In \n        </button>\n    ),\n    logout: () => dispatch(logout()),\n    closeModal: () => dispatch(closeModal())\n\n\n\n\n  }\n\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/map.jsx",["260","261","262"],"import { Map, GoogleApiWrapper, Marker, InfoWindow, addListener} from 'google-maps-react';\r\nimport MarkerClusterer from '@googlemaps/markerclustererplus';\r\nimport React from 'react';\r\n\r\n\r\nconst mapStyles = {\r\n  width: '80%',\r\n  height: '80%',\r\n  'margin-left' : '10%',\r\n  'margin-right' : '5%',\r\n  'border' : '2px solid black'\r\n}\r\nexport class MapBox extends React.Component {\r\n\r\n\r\n  render() {\r\n\r\n    \r\n    \r\n    let favors = this.props.favors.data || []\r\n   \r\n    if ( this.props.userShow ) {\r\n        favors = favors.filter( favor => this.props.currentUser.id === favor.favor_for_user_id )\r\n    }\r\n    if (this.props.requestShow ) {\r\n      favors = favors.filter( favor => favor.status === true)\r\n    }\r\n    favors = ( this.props.userSearch ? favors.filter( favor =>  {\r\n            const length = this.props.forUser.length;\r\n            if ( favor.favor_for_username) {\r\n            return favor.favor_for_username.slice(0, length)  === this.props.forUser\r\n            } else {\r\n               return false \r\n            }\r\n        }) : favors)\r\n    const test_markers = favors.map( (favor,idx) => {\r\n      const lat = favor.favor_lat \r\n      const lng = favor.favor_lng \r\n      const location = { lat: lat, lng: lng } \r\n      const marker = < Marker position={ location } title={`${favor.favor_title} \r\n    ${favor.favor_description} `|| \"favor\"} key={idx} />\r\n      return marker\r\n      \r\n    })\r\n    \r\n    \r\n    const map =    (<Map \r\n        google = {this.props.google}\r\n        zoom= {8}\r\n        style={mapStyles}\r\n        initialCenter = {{lat: 39.419140, lng: -76.452240}}\r\n        className=\"map-container\"\r\n      > \r\n      {test_markers} \r\n      </Map>)\r\n   \r\n    return (\r\n      <div>\r\n       {map}\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyAZpaEFWsQyJOahKBVfBZ1g3mpemxo1VQo'\r\n})(MapBox);\r\n","/mnt/c/New App Academy/MERN_FS/frontend/src/session/navbar.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile_nav.jsx",["263","264","265","266","267","268"],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profilenav2.jsx",["269","270","271","272","273"],"import React from 'react';\nimport {withRouter, Link} from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faCircle, faPlus, faBell, faNewspaper, faUser, faBars} from '@fortawesome/free-solid-svg-icons';\n\nimport './profile.scss';\n\n\n\nclass ProfileNav2 extends React.Component{\nconstructor(props){\nsuper(props);\n\nthis.state ={\n\n        notes: false,\n        info: false,\n        add: false,\n        favors: false\n        \n}\n\n\nthis.addMenu = this.addMenu.bind(this);\nthis.showNotesMenu = this.showNotesMenu.bind(this);\nthis.showDropdown = this.showDropdown.bind(this);\nthis.showUserInfo = this.showUserInfo.bind(this);\nthis.renderForm = this.renderForm.bind(this);\nthis.favorMenu = this.favorMenu.bind(this);\nthis.logoutUser = this.logoutUser.bind(this);\n\n\n}\n\n\n\nshowDropdown(field) {\n\n    \n        return e => {\n            e.preventDefault();\n            e.stopPropagation();\n            this.setState({\n\n                notes: false,\n                info: false,\n                add: false,\n                favors: false\n\n            })\n            this.setState({[field]: !this.state[field]}, () => {\n            if (this.state[field] === true) { \n                document.addEventListener('click', this.showDropdown);\n             } else {\n                document.removeEventListener(\"click\", this.showDropdown) \n\n            }\n            });\n        }\n    }\n\n\n\n\n\n\n\ncomponentDidMount() {\n        this.props.closeModal();\n        this.props.fetchFavors();\n    }\n\ncomponentWillUnmount() {\n        this.props.closeModal();\n    }\n    \n\naddMenu(){\n\n\nreturn(\n\n<section className=\"add-menu-items\" >\n <h2 className=\"author-menu\">  Create  <span className=\"menu-x\" onClick={this.showDropdown(\"add\")}>  X </span> </h2>\n    <div className=\"add-menu-list\">\n        \n        <span className=\"add-menu-item\" onClick={this.renderForm('favor')}>\n        <span><img className=\"logo-bm\"  src=\"https://i.ibb.co/ZWSmV2V/doublec-2.png\"/>Create Favor    \n        <p className=\"add-menu-desc\" > A member of CC can either request a favor when in need or keep record of something they \n        have done as a good deed. </p></span></span>\n\n    </div>\n    </section>\n\n)\n\n} \n\nfavorMenu(){\n\n if(this.props.favors.length === 0) return  null;\n      \n     \n   const favors =  this.props.favors\n                   .filter(favor => favor.favor_for_user_id === this.props.currentUser.id)\n                    .map(favor => {\n            \n            return ( <span> {favor.favor_title} <br /></span> );\n        })\n\n      return (\n\n            <section className=\"favor-menu-items\" >\n          <h2 className=\"author-menu\">  Favors  <span className=\"menu-x\" onClick={this.showDropdown(\"favors\")}>  X </span> </h2>\n         <div className=\"favor-menu-list\">\n            <div className=\"add-menu-item\">\n            <span className=\"favor-menu-list\">  {favors} </span>\n\n            </div>\n        </div>\n         </section>   \n      )\n    \n    }\n\n\nlogoutUser(e) {\n      e.preventDefault();\n      this.props.logout();\n  }\n\nshowUserInfo(){\n\n\nreturn(\n\n<section className=\"info-menu\" >\n <h2 className=\"author-menu\">  Account Info  <span className=\"menu-x\" onClick={this.showDropdown(\"info\")}>  X </span> </h2>\n<ul className=\"profile-menu-list\" >\n    <li> User Profile </li>\n<li> Name: {this.props.currentUser.username}</li>\n\n <li> Email: {this.props.currentUser.email} </li>\n  <li className=\"logout-menu\" onClick={this.logoutUser}>LogOut</li>\n\n</ul>\n</section> \n\n\n)\n\n}\n\n\n\n// handleFavors(){\n\n//     if(this.props.favors){\n      \n     \n//       return (\n//       <div>\n//          {this.props.favors\n//           .filter(favor => favor.favor_for_user_id === this.props.currentUser.id)\n//           .map(favor =>   <p  className=\"favor-list\">{favor.favor_description}</p>)\n//         }\n//     </div> \n//       )}\n\n\n//       }\n    \n\n\nrenderForm(field) {\n    if (this.props.modal === field) {\n      return () => {\n        this.props.closeModal();\n      }\n    }\n    return () => this.props.openModal(field)\n  }\n\n\nshowNotesMenu(){\n\nreturn (\n\n    <ul className=\"notes-list\">\n        <li> No notifications at this time! </li>\n        <img className=\"logo-img\"  src=\"https://i.ibb.co/ZWSmV2V/doublec-2.png\"/>\n\n    </ul>\n)\n\n}\n\n\nrender(){\n\nreturn (\n\n    <section className=\"navcontainer content\">\n\n       \n   \n    <header className=\"icon-container\">\n\n    \n\n\n        \n           <Link className=\"icon-link\" to={\"/\"}> <i className=\"fas fa-home icon icon-fill\"> <FontAwesomeIcon  icon={faHome} /> </i></Link>\n            \n     \n       \n    \n         <Link className=\"icon-link\" to={\"/newsfeed\"}>  <i class=\"fas fa-newspaper icon icon-fill\"><FontAwesomeIcon  icon={faNewspaper} /> </i> </Link>                \n       \n  \n\n      \n\n    \n           \n           <Link className=\"icon-link\" to={\"/profile\"}> <i class=\"fas fa-user icon icon-fill\"> <FontAwesomeIcon  icon={faUser} /></i> </Link>                 \n          \n\n\n    \n\n      \n     <i class=\"fas fa-bars icon icon-fill\"  onClick={this.showDropdown(\"info\")}> <FontAwesomeIcon  icon={faBars} /> </i> \n\n            {this.state.info ? this.showUserInfo() : null}\n\n   \n\n      <i class=\"fas fa-plus icon icon-fill\" onClick={this.showDropdown(\"add\")}>  <FontAwesomeIcon className=\"fai\" icon={faPlus} /> </i>\n                        {this.state.add ? this.addMenu() : null}\n\n\n\n\n{/* \n        <div className=\"mid\">     \n            <div onClick={this.showDropdown(\"favors\")}>\n                <span className=\"favor-button\"> Favors </span>\n            </div>\n                \n\n                    \n\n                {this.state.favors ? this.favorMenu() : null}\n\n    </div> */}\n\n\n\n\n\n\n\n    </header>\n\n \n\n    </section>\n\n   \n\n\n\n\n\n);\n\n}\n\n}\n\n\n\n\n\n\n\nexport default withRouter(ProfileNav2);","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/profile_nav_container.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/profilenav2.jsx",["274","275","276","277","278","279","280"],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":11,"column":8,"nodeType":"287","messageId":"288","endLine":11,"endColumn":13},{"ruleId":"285","severity":1,"message":"289","line":1,"column":10,"nodeType":"287","messageId":"288","endLine":1,"endColumn":27},{"ruleId":"285","severity":1,"message":"289","line":1,"column":10,"nodeType":"287","messageId":"288","endLine":1,"endColumn":27},{"ruleId":"290","severity":1,"message":"291","line":11,"column":1,"nodeType":"292","endLine":33,"endColumn":2},{"ruleId":"293","severity":1,"message":"294","line":22,"column":5,"nodeType":"295","endLine":22,"endColumn":75},{"ruleId":"293","severity":1,"message":"294","line":23,"column":5,"nodeType":"295","endLine":23,"endColumn":76},{"ruleId":"293","severity":1,"message":"294","line":24,"column":5,"nodeType":"295","endLine":24,"endColumn":75},{"ruleId":"293","severity":1,"message":"294","line":25,"column":5,"nodeType":"295","endLine":25,"endColumn":75},{"ruleId":"293","severity":1,"message":"294","line":26,"column":5,"nodeType":"295","endLine":26,"endColumn":75},{"ruleId":"293","severity":1,"message":"294","line":27,"column":5,"nodeType":"295","endLine":27,"endColumn":75},{"ruleId":"285","severity":1,"message":"296","line":2,"column":8,"nodeType":"287","messageId":"288","endLine":2,"endColumn":13},{"ruleId":"297","severity":1,"message":"298","line":21,"column":5,"nodeType":"299","messageId":"300","endLine":21,"endColumn":16},{"ruleId":"285","severity":1,"message":"301","line":2,"column":8,"nodeType":"287","messageId":"288","endLine":2,"endColumn":21},{"ruleId":"285","severity":1,"message":"302","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":25},{"ruleId":"285","severity":1,"message":"303","line":4,"column":10,"nodeType":"287","messageId":"288","endLine":4,"endColumn":22},{"ruleId":"285","severity":1,"message":"304","line":5,"column":10,"nodeType":"287","messageId":"288","endLine":5,"endColumn":22},{"ruleId":"285","severity":1,"message":"305","line":6,"column":10,"nodeType":"287","messageId":"288","endLine":6,"endColumn":17},{"ruleId":"306","severity":1,"message":"307","line":92,"column":10,"nodeType":"308","messageId":"309","endLine":96,"endColumn":43},{"ruleId":"293","severity":1,"message":"294","line":75,"column":21,"nodeType":"295","endLine":75,"endColumn":91},{"ruleId":"285","severity":1,"message":"305","line":3,"column":9,"nodeType":"287","messageId":"288","endLine":3,"endColumn":16},{"ruleId":"285","severity":1,"message":"310","line":5,"column":10,"nodeType":"287","messageId":"288","endLine":5,"endColumn":16},{"ruleId":"285","severity":1,"message":"311","line":6,"column":8,"nodeType":"287","messageId":"288","endLine":6,"endColumn":21},{"ruleId":"285","severity":1,"message":"312","line":7,"column":8,"nodeType":"287","messageId":"288","endLine":7,"endColumn":23},{"ruleId":"313","severity":1,"message":"314","line":25,"column":7,"nodeType":"315","endLine":25,"endColumn":11},{"ruleId":"293","severity":1,"message":"294","line":302,"column":23,"nodeType":"295","endLine":302,"endColumn":176},{"ruleId":"293","severity":1,"message":"294","line":353,"column":31,"nodeType":"295","endLine":353,"endColumn":184},{"ruleId":"285","severity":1,"message":"316","line":53,"column":9,"nodeType":"287","messageId":"288","endLine":53,"endColumn":18},{"ruleId":"293","severity":1,"message":"294","line":103,"column":22,"nodeType":"295","endLine":103,"endColumn":92},{"ruleId":"293","severity":1,"message":"294","line":67,"column":32,"nodeType":"295","endLine":67,"endColumn":102},{"ruleId":"285","severity":1,"message":"317","line":2,"column":15,"nodeType":"287","messageId":"288","endLine":2,"endColumn":31},{"ruleId":"285","severity":1,"message":"318","line":2,"column":33,"nodeType":"287","messageId":"288","endLine":2,"endColumn":39},{"ruleId":"285","severity":1,"message":"319","line":2,"column":41,"nodeType":"287","messageId":"288","endLine":2,"endColumn":51},{"ruleId":"285","severity":1,"message":"320","line":2,"column":53,"nodeType":"287","messageId":"288","endLine":2,"endColumn":64},{"ruleId":"285","severity":1,"message":"321","line":27,"column":15,"nodeType":"287","messageId":"288","endLine":27,"endColumn":25},{"ruleId":"285","severity":1,"message":"322","line":2,"column":8,"nodeType":"287","messageId":"288","endLine":2,"endColumn":20},{"ruleId":"285","severity":1,"message":"312","line":3,"column":8,"nodeType":"287","messageId":"288","endLine":3,"endColumn":23},{"ruleId":"285","severity":1,"message":"323","line":7,"column":8,"nodeType":"287","messageId":"288","endLine":7,"endColumn":22},{"ruleId":"285","severity":1,"message":"324","line":8,"column":8,"nodeType":"287","messageId":"288","endLine":8,"endColumn":14},{"ruleId":"285","severity":1,"message":"325","line":51,"column":15,"nodeType":"287","messageId":"288","endLine":51,"endColumn":26},{"ruleId":"285","severity":1,"message":"326","line":52,"column":15,"nodeType":"287","messageId":"288","endLine":52,"endColumn":27},{"ruleId":"293","severity":1,"message":"294","line":71,"column":26,"nodeType":"295","endLine":71,"endColumn":111},{"ruleId":"293","severity":1,"message":"294","line":80,"column":26,"nodeType":"295","endLine":80,"endColumn":113},{"ruleId":"306","severity":1,"message":"307","line":146,"column":2,"nodeType":"308","messageId":"309","endLine":155,"endColumn":27},{"ruleId":"306","severity":1,"message":"307","line":156,"column":17,"nodeType":"308","messageId":"309","endLine":165,"endColumn":27},{"ruleId":"306","severity":1,"message":"307","line":168,"column":21,"nodeType":"308","messageId":"309","endLine":189,"endColumn":23},{"ruleId":"285","severity":1,"message":"327","line":6,"column":10,"nodeType":"287","messageId":"288","endLine":6,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":213,"column":23,"nodeType":"295","endLine":213,"endColumn":102},{"ruleId":"293","severity":1,"message":"294","line":217,"column":22,"nodeType":"295","endLine":217,"endColumn":101},{"ruleId":"293","severity":1,"message":"294","line":219,"column":23,"nodeType":"295","endLine":219,"endColumn":103},{"ruleId":"285","severity":1,"message":"305","line":3,"column":9,"nodeType":"287","messageId":"288","endLine":3,"endColumn":16},{"ruleId":"285","severity":1,"message":"310","line":6,"column":10,"nodeType":"287","messageId":"288","endLine":6,"endColumn":16},{"ruleId":"285","severity":1,"message":"311","line":7,"column":8,"nodeType":"287","messageId":"288","endLine":7,"endColumn":21},{"ruleId":"313","severity":1,"message":"314","line":21,"column":7,"nodeType":"315","endLine":21,"endColumn":11},{"ruleId":"293","severity":1,"message":"294","line":289,"column":25,"nodeType":"295","endLine":289,"endColumn":178},{"ruleId":"285","severity":1,"message":"328","line":7,"column":8,"nodeType":"287","messageId":"288","endLine":7,"endColumn":20},{"ruleId":"285","severity":1,"message":"319","line":1,"column":41,"nodeType":"287","messageId":"288","endLine":1,"endColumn":51},{"ruleId":"285","severity":1,"message":"320","line":1,"column":53,"nodeType":"287","messageId":"288","endLine":1,"endColumn":64},{"ruleId":"285","severity":1,"message":"329","line":2,"column":8,"nodeType":"287","messageId":"288","endLine":2,"endColumn":23},{"ruleId":"285","severity":1,"message":"330","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":90,"column":15,"nodeType":"295","endLine":90,"endColumn":87},{"ruleId":"293","severity":1,"message":"294","line":193,"column":9,"nodeType":"295","endLine":193,"endColumn":82},{"ruleId":"293","severity":1,"message":"294","line":212,"column":35,"nodeType":"295","endLine":212,"endColumn":107},{"ruleId":"293","severity":1,"message":"294","line":246,"column":22,"nodeType":"295","endLine":246,"endColumn":94},{"ruleId":"331","severity":1,"message":"332","line":265,"column":39,"nodeType":"333","endLine":265,"endColumn":64},{"ruleId":"285","severity":1,"message":"330","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":17},{"ruleId":"285","severity":1,"message":"334","line":5,"column":18,"nodeType":"287","messageId":"288","endLine":5,"endColumn":26},{"ruleId":"285","severity":1,"message":"335","line":5,"column":36,"nodeType":"287","messageId":"288","endLine":5,"endColumn":42},{"ruleId":"293","severity":1,"message":"294","line":89,"column":15,"nodeType":"295","endLine":89,"endColumn":87},{"ruleId":"293","severity":1,"message":"294","line":192,"column":9,"nodeType":"295","endLine":192,"endColumn":82},{"ruleId":"285","severity":1,"message":"330","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":17},{"ruleId":"285","severity":1,"message":"334","line":5,"column":18,"nodeType":"287","messageId":"288","endLine":5,"endColumn":26},{"ruleId":"285","severity":1,"message":"336","line":5,"column":28,"nodeType":"287","messageId":"288","endLine":5,"endColumn":34},{"ruleId":"285","severity":1,"message":"335","line":5,"column":36,"nodeType":"287","messageId":"288","endLine":5,"endColumn":42},{"ruleId":"285","severity":1,"message":"337","line":5,"column":65,"nodeType":"287","messageId":"288","endLine":5,"endColumn":71},{"ruleId":"293","severity":1,"message":"294","line":89,"column":15,"nodeType":"295","endLine":89,"endColumn":87},{"ruleId":"293","severity":1,"message":"294","line":192,"column":9,"nodeType":"295","endLine":192,"endColumn":82},"no-native-reassign",["338"],"no-negated-in-lhs",["339"],"no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","'ReactReduxContext' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","no-dupe-keys","Duplicate key 'fetchFavors'.","ObjectExpression","unexpected","'HospitalsNear' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCodeBranch' is defined but never used.","'faLinkedinIn' is defined but never used.","'NavLink' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'faUser' is defined but never used.","'FavorsReducer' is defined but never used.","'NavBarContainer' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","'loginUser' is assigned a value but never used.","'GoogleApiWrapper' is defined but never used.","'Marker' is defined but never used.","'InfoWindow' is defined but never used.","'addListener' is defined but never used.","'apiRequest' is assigned a value but never used.","'MapContainer' is defined but never used.","'AboutContainer' is defined but never used.","'NavBar' is defined but never used.","'button_text' is assigned a value but never used.","'request_text' is assigned a value but never used.","'faVirus' is defined but never used.","'NavBarNoLogo' is defined but never used.","'MarkerClusterer' is defined but never used.","'library' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'faCircle' is defined but never used.","'faBell' is defined but never used.","'faPlus' is defined but never used.","'faBars' is defined but never used.","no-global-assign","no-unsafe-negation"]