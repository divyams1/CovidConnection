[{"/Users/appacademystudent/cfinal/frontend/src/index.js":"1","/Users/appacademystudent/cfinal/frontend/src/root.js":"2","/Users/appacademystudent/cfinal/frontend/src/store/store.js":"3","/Users/appacademystudent/cfinal/frontend/src/utils/session_api_util.js":"4","/Users/appacademystudent/cfinal/frontend/src/actions/session_actions.js":"5","/Users/appacademystudent/cfinal/frontend/src/start.js":"6","/Users/appacademystudent/cfinal/frontend/src/actions/modal_actions.js":"7","/Users/appacademystudent/cfinal/frontend/src/reducers/root_reducer.js":"8","/Users/appacademystudent/cfinal/frontend/src/utils/route_util.js":"9","/Users/appacademystudent/cfinal/frontend/src/session/login_form_container.js":"10","/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile_container.js":"11","/Users/appacademystudent/cfinal/frontend/src/reducers/entities_reducer.js":"12","/Users/appacademystudent/cfinal/frontend/src/reducers/session_api_reducer.js":"13","/Users/appacademystudent/cfinal/frontend/src/reducers/ui_reducer.js":"14","/Users/appacademystudent/cfinal/frontend/src/reducers/errors_reducer.js":"15","/Users/appacademystudent/cfinal/frontend/src/modal.jsx":"16","/Users/appacademystudent/cfinal/frontend/src/session/signup_form_container.jsx":"17","/Users/appacademystudent/cfinal/frontend/src/components/splash/splash_container.jsx":"18","/Users/appacademystudent/cfinal/frontend/src/components/about/about.jsx":"19","/Users/appacademystudent/cfinal/frontend/src/components/about/about_container.jsx":"20","/Users/appacademystudent/cfinal/frontend/src/components/create_favor/favor_create_container.jsx":"21","/Users/appacademystudent/cfinal/frontend/src/components/newsfeed/newsfeed_container.jsx":"22","/Users/appacademystudent/cfinal/frontend/src/components/covid_help/covid_help.jsx":"23","/Users/appacademystudent/cfinal/frontend/src/components/profile_show/profile_show_container.jsx":"24","/Users/appacademystudent/cfinal/frontend/src/actions/favor_actions.js":"25","/Users/appacademystudent/cfinal/frontend/src/reducers/favors_reducer.js":"26","/Users/appacademystudent/cfinal/frontend/src/reducers/users_reducer.js":"27","/Users/appacademystudent/cfinal/frontend/src/reducers/modals_reducer.js":"28","/Users/appacademystudent/cfinal/frontend/src/reducers/session_errors_reducer.js":"29","/Users/appacademystudent/cfinal/frontend/src/session/login_form.jsx":"30","/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile_nav_container.js":"31","/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile.jsx":"32","/Users/appacademystudent/cfinal/frontend/src/session/signup_form.jsx":"33","/Users/appacademystudent/cfinal/frontend/src/components/splash/splash.jsx":"34","/Users/appacademystudent/cfinal/frontend/src/components/about/hospitals_near.jsx":"35","/Users/appacademystudent/cfinal/frontend/src/components/create_favor/favor_create.jsx":"36","/Users/appacademystudent/cfinal/frontend/src/components/profile_show/profile_show.jsx":"37","/Users/appacademystudent/cfinal/frontend/src/components/newsfeed/newsfeed.jsx":"38","/Users/appacademystudent/cfinal/frontend/src/utils/favors_api_util.js":"39","/Users/appacademystudent/cfinal/frontend/src/session/navbar_container.js":"40","/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile_nav.jsx":"41","/Users/appacademystudent/cfinal/frontend/src/components/splash/map.jsx":"42","/Users/appacademystudent/cfinal/frontend/src/session/navbar.jsx":"43"},{"size":1062,"mtime":1610056013224,"results":"44","hashOfConfig":"45"},{"size":294,"mtime":1610056013230,"results":"46","hashOfConfig":"45"},{"size":353,"mtime":1610056013234,"results":"47","hashOfConfig":"45"},{"size":627,"mtime":1610132297917,"results":"48","hashOfConfig":"45"},{"size":2907,"mtime":1610132297907,"results":"49","hashOfConfig":"45"},{"size":1711,"mtime":1610056013234,"results":"50","hashOfConfig":"45"},{"size":265,"mtime":1610056013206,"results":"51","hashOfConfig":"45"},{"size":462,"mtime":1610056013227,"results":"52","hashOfConfig":"45"},{"size":801,"mtime":1610056013235,"results":"53","hashOfConfig":"45"},{"size":913,"mtime":1610056013231,"results":"54","hashOfConfig":"45"},{"size":993,"mtime":1610056013217,"results":"55","hashOfConfig":"45"},{"size":315,"mtime":1610056013226,"results":"56","hashOfConfig":"45"},{"size":684,"mtime":1610056013229,"results":"57","hashOfConfig":"45"},{"size":187,"mtime":1610056013229,"results":"58","hashOfConfig":"45"},{"size":220,"mtime":1610056013226,"results":"59","hashOfConfig":"45"},{"size":1171,"mtime":1610056013225,"results":"60","hashOfConfig":"45"},{"size":966,"mtime":1610056013233,"results":"61","hashOfConfig":"45"},{"size":446,"mtime":1610056013224,"results":"62","hashOfConfig":"45"},{"size":4700,"mtime":1610086169217,"results":"63","hashOfConfig":"45"},{"size":207,"mtime":1610056013208,"results":"64","hashOfConfig":"45"},{"size":692,"mtime":1610056013213,"results":"65","hashOfConfig":"45"},{"size":976,"mtime":1610056013215,"results":"66","hashOfConfig":"45"},{"size":800,"mtime":1610056013212,"results":"67","hashOfConfig":"45"},{"size":1243,"mtime":1610132297912,"results":"68","hashOfConfig":"45"},{"size":1785,"mtime":1610056013206,"results":"69","hashOfConfig":"45"},{"size":1700,"mtime":1610056013226,"results":"70","hashOfConfig":"45"},{"size":662,"mtime":1610132297915,"results":"71","hashOfConfig":"45"},{"size":348,"mtime":1610056013227,"results":"72","hashOfConfig":"45"},{"size":512,"mtime":1610056013229,"results":"73","hashOfConfig":"45"},{"size":2426,"mtime":1610089736543,"results":"74","hashOfConfig":"45"},{"size":957,"mtime":1610056013219,"results":"75","hashOfConfig":"45"},{"size":12148,"mtime":1610132297914,"results":"76","hashOfConfig":"45"},{"size":3803,"mtime":1610089704117,"results":"77","hashOfConfig":"45"},{"size":3990,"mtime":1610056013223,"results":"78","hashOfConfig":"45"},{"size":1319,"mtime":1610056013211,"results":"79","hashOfConfig":"45"},{"size":3248,"mtime":1610056013213,"results":"80","hashOfConfig":"45"},{"size":11889,"mtime":1610132297911,"results":"81","hashOfConfig":"45"},{"size":8462,"mtime":1610132297910,"results":"82","hashOfConfig":"45"},{"size":533,"mtime":1610056013234,"results":"83","hashOfConfig":"45"},{"size":825,"mtime":1610056013232,"results":"84","hashOfConfig":"45"},{"size":5685,"mtime":1610087023254,"results":"85","hashOfConfig":"45"},{"size":1859,"mtime":1610056013221,"results":"86","hashOfConfig":"45"},{"size":1731,"mtime":1610056013231,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vxu16o",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"98"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/appacademystudent/cfinal/frontend/src/index.js",[],"/Users/appacademystudent/cfinal/frontend/src/root.js",[],"/Users/appacademystudent/cfinal/frontend/src/store/store.js",[],"/Users/appacademystudent/cfinal/frontend/src/utils/session_api_util.js",[],"/Users/appacademystudent/cfinal/frontend/src/actions/session_actions.js",[],["178","179"],"/Users/appacademystudent/cfinal/frontend/src/start.js",["180"],"/Users/appacademystudent/cfinal/frontend/src/actions/modal_actions.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/root_reducer.js",["181"],"/Users/appacademystudent/cfinal/frontend/src/utils/route_util.js",[],"/Users/appacademystudent/cfinal/frontend/src/session/login_form_container.js",[],"/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile_container.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/entities_reducer.js",["182"],"/Users/appacademystudent/cfinal/frontend/src/reducers/session_api_reducer.js",["183"],"/Users/appacademystudent/cfinal/frontend/src/reducers/ui_reducer.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/errors_reducer.js",[],"/Users/appacademystudent/cfinal/frontend/src/modal.jsx",[],"/Users/appacademystudent/cfinal/frontend/src/session/signup_form_container.jsx",[],"/Users/appacademystudent/cfinal/frontend/src/components/splash/splash_container.jsx",["184"],"/Users/appacademystudent/cfinal/frontend/src/components/about/about.jsx",["185","186","187","188","189","190"],"/Users/appacademystudent/cfinal/frontend/src/components/about/about_container.jsx",[],"/Users/appacademystudent/cfinal/frontend/src/components/create_favor/favor_create_container.jsx",[],"/Users/appacademystudent/cfinal/frontend/src/components/newsfeed/newsfeed_container.jsx",[],"/Users/appacademystudent/cfinal/frontend/src/components/covid_help/covid_help.jsx",["191","192","193","194","195","196"],"/Users/appacademystudent/cfinal/frontend/src/components/profile_show/profile_show_container.jsx",[],"/Users/appacademystudent/cfinal/frontend/src/actions/favor_actions.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/favors_reducer.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/users_reducer.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/modals_reducer.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/session_errors_reducer.js",[],"/Users/appacademystudent/cfinal/frontend/src/session/login_form.jsx",["197"],"/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile_nav_container.js",[],"/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile.jsx",["198","199","200","201","202","203","204"],"import React from 'react';\nimport ProfileNavContainer from './profile_nav_container';\nimport {NavLink, Link} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser} from '@fortawesome/free-solid-svg-icons';\nimport FavorsReducer from '../../reducers/favors_reducer';\n// import FavorItem from '../favors/favor_item';\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.props.favors;\n        this.handleFavors = this.handleFavors.bind(this);\n        this.handleNoFavors = this.handleNoFavors.bind(this);\n        this.renderForm = this.renderForm.bind(this);\n        this.handleTime = this.handleTime.bind(this);\n    }\n    componentDidMount() {\n      console.log(this.props.currentUser.id)\n      this.props.fetchFavors();\n      this.state = this.props.favors;\n      this.props.closeModal();\n      // this.props.fetchFavorsForUser({ user_id: this.props.user_profile_id });\n    }\n    componentWillReceiveProps(newState) {\n      this.setState({ favors: newState.favors });\n    }\n    componentWillUnmount() {\n        this.props.closeModal();\n    }\n    // listOfRequest() {\n    //   return this.props.favors[0].filter(favor => favor.favor_for_user_id === this.props.user_profile_id)\n    // }\n    renderForm(field) {\n    if (this.props.modal === field) {\n      return () => {\n        this.props.closeModal();\n      }\n    }\n    return () => this.props.openModal(field)\n  }\n    handleNoFavors(){\n     \n              if (!this.props.favors) return (\n              <>\n              {/* <ProfileNavContainer /> */}\n              <div className=\"prof-nofavors\"> We currently have no record of any favors by you.\n                Click the add button to list any good deeds you have done lately </div>\n              </>\n    )}\n  handleNoTakenFavors() {\n    \n    if (!this.props.favors) return (\n      <>\n        {/* <ProfileNavContainer /> */}\n        <div className=\"prof-nofavors\"> We currently have no record of any favors that you are working on for other users.\n       </div>\n      </>\n    )\n  }\n    handleButtonName(favor){\n      if (favor.favor_status === \"Doing\") {\n        return \"Accepted Favor, Click to Undo\"\n      } else {\n        return \"Click to Accept Favor\"\n      }\n    }\n    handleTime(time){\n    let currentDate = new Date(time);\n    let hours = currentDate.getHours();\n    let minutes = currentDate.getMinutes();\n    let seconds = currentDate.getSeconds();\n    hours = (hours < 10) ? `0${hours}` : hours;\n    minutes = (minutes < 10) ? `0${minutes}` : minutes;\n    seconds = (seconds < 10) ? `0${seconds}` : seconds;\n    return (\n      <div className=\"date\">\n        <span> Date: {currentDate.toDateString()} </span>\n        <span className=\"time-str\"> Time: {hours} :{minutes} :{seconds} </span>\n      </div>\n    )\n    }\n    handleFavors(){\n    if(this.props.favors){\n      return (\n      <div className=\"prof-favors\">\n         {this.props.favors\n          .filter(favor => favor.favor_for_user_id === this.props.currentUser.id)\n          .map( (favor, idx) => {\n            if (!this.props.currentUser.id) {\n              return <div className=\"favor-item\" >\n                 <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                <p key={idx} className=\"favor-list\">  {favor.favor_description}</p>\n                <p> {this.handleTime(favor.date)} </p>\n                {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n              </div>\n            } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Request\") {\n              return <div className=\"favor-item\">\n                 <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n              <p key={idx} className=\"favor-list\">  {favor.favor_description}</p>\n              <p> {this.handleTime(favor.date)} </p>\n              <p className=\"favor-list\">This favor has not been taken yet</p>\n              {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */ }\n              <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\n          </div>\n            } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\n              return <div className=\"favor-item\">\n                 <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                <p key={idx}  className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                <p id=\"taken-favor\">This favor has been taken by {favor.favor_by_username}</p>\n                {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\n              </div>\n            }\n            else if (favor.favor_for_user_id === this.props.currentUser.id) {\n              return <div className=\"favor-item\">\n                 <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\n              </div>\n            }\n            else if (favor.favor_by_user_id === this.props.currentUser.id) {\n              return <div>\n                 <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                <p>For {favor.favor_for_username}</p>\n                <button className=\"map-button nav-btns-child-login\" ionClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\n                {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n              </div>\n            }\n            else {\n              return <div>\n                 <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                <p>This favor has been accepted by {favor.favor_by_username}</p>\n                {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n              </div>\n            }\n          }\n          )\n        }\n    </div>\n      )}\n      }\n  handleTakenFavors() {\n    if (this.props.favors) {\n      return (\n        <div className=\"prof-favors\">\n          {this.props.favors\n            .filter(favor => favor.favor_by_user_id === this.props.currentUser.id)\n            .map((favor, idx) => {\n              if (!this.props.currentUser.id) {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              } else if (favor.favor_for_user_id === this.props.currentUser.id) {\n                return <div className=\"favor-item\">\n                   <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\n                </div>\n              } else if (favor.favor_by_user_id === this.props.currentUser.id) {\n              return <div className=\"favor-item\">\n               <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n              <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n              <p>You are currently fulfilling this favor for {favor.favor_for_username}</p>\n              <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\n              {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n          </div>\n            }\n              else {\n                return <div>\n                   <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              }\n            }\n            )\n          }\n        </div>\n      )\n    }\n  }\n    render() {\n      // const this_user_favors = this.listOfRequest();\n        // const noFavors = this.handleNoFavors();\n        // const hasFavors = this.handleFavors();\n        const favors = (this.props.favors ? this.handleFavors() : this.handleNoFavors());\n        const taken_favors = (this.props.favors ? this.handleTakenFavors() : this.handleNoTakenFavors());\n          return (\n            <>\n            <ProfileNavContainer />\n            <div className=\"profile-view\">\n            <div  className=\"banners\">\n                     <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3>\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" />\n                      {/* <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" /> */}\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" />\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" />\n              </div>\n            <div className=\"prof-favors\">\n              <h1 className=\"favor-title\">  Welcome {this.props.currentUser.username}!  </h1>\n              <h3 className=\"prof-fav-hd2\"> These are the good deeds you have done for others  </h3> <br />\n                <h2 className=\"prof-fav-hd\"> <FontAwesomeIcon icon={faUser} />  Requested Favors</h2>\n                <center> <button className=\"favor-btn\" onClick={this.renderForm('favor')}>\n                <img className=\"add-favor\" src=\"https://i.ibb.co/Bz1RZS5/cross.png\" /> Add Favor</button></center>\n                <div className=\"favor-lst\">\n                      {favors}\n                </div>\n                  <h2 className=\"prof-fav-hd\"> <FontAwesomeIcon icon={faUser} />  Taken Favors</h2>\n                  <div className=\"favor-lst\">\n                    {taken_favors}\n                  </div>\n              <div className=\"prof-favors\">\n                {/* {this.handleFavors()}\n                {this.handleNoFavors()} */}\n              </div>\n              </div>\n               <div>\n                        {/* <img className=\"banner\" src=\"https://i.ibb.co/MSmtpdb/Stay.jpg\" alt=\"covid help\"/> */}\n              </div>\n              {/* {this.state.favors.map(favor => (\n                <FavorItem key={favor.id} title={favor.title} />\n              ))} */}\n            </div>\n            </>\n          );\n        }\n}\nexport default Profile;","/Users/appacademystudent/cfinal/frontend/src/session/signup_form.jsx",["205","206"],"/Users/appacademystudent/cfinal/frontend/src/components/splash/splash.jsx",["207","208"],"/Users/appacademystudent/cfinal/frontend/src/components/about/hospitals_near.jsx",["209","210","211","212","213"],"/Users/appacademystudent/cfinal/frontend/src/components/create_favor/favor_create.jsx",["214"],"/Users/appacademystudent/cfinal/frontend/src/components/profile_show/profile_show.jsx",["215","216","217","218","219"],"import React from 'react';\r\nimport ProfileNavContainer from '../profiles/profile_nav_container';\r\nimport {NavLink, Link} from 'react-router-dom';\r\n// import FavorItem from '../favors/favor_item';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser} from '@fortawesome/free-solid-svg-icons';\r\nimport FavorsReducer from '../../reducers/favors_reducer';\r\n\r\nclass ProfileShow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = this.props.favors;\r\n        this.handleFavors = this.handleFavors.bind(this);\r\n        this.handleNoFavors = this.handleNoFavors.bind(this);\r\n        this.renderForm = this.renderForm.bind(this);\r\n    }\r\n    \r\n      componentDidMount() {\r\n      this.props.fetchFavors();\r\n      this.state = this.props.favors;\r\n      this.props.closeModal();\r\n      this.props.fetchUsers();\r\n      this.props.getUser(this.props.user_profile_id);\r\n      // this.props.fetchFavorsForUser({ user_id: this.props.user_profile_id });\r\n    }\r\n    componentWillReceiveProps(newState) {\r\n      this.setState({ favors: newState.favors });\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.closeModal();\r\n    }\r\n    // listOfRequest() {\r\n    //   return this.props.favors[0].filter(favor => favor.favor_for_user_id === this.props.user_profile_id)\r\n    // }\r\n    renderForm(field) {\r\n    if (this.props.modal === field) {\r\n      return () => {\r\n        this.props.closeModal();\r\n      }\r\n    }\r\n    return () => this.props.openModal(field)\r\n  }\r\n    handleNoFavors(){\r\n     \r\n              if (!this.props.favors) return (\r\n              <>\r\n              {/* <ProfileNavContainer /> */}\r\n              <div className=\"prof-nofavors\"> We currently have no record of any favors by you.\r\n                Click the add button to list any good deeds you have done lately </div>\r\n              </>\r\n    )}\r\n  handleNoTakenFavors() {\r\n    \r\n    if (!this.props.favors) return (\r\n      <>\r\n        {/* <ProfileNavContainer /> */}\r\n        <div className=\"prof-nofavors\"> We currently have no record of any favors that you are working on for other users.\r\n       </div>\r\n      </>\r\n    )\r\n  }\r\n    handleButtonName(favor){\r\n      if (favor.favor_status === \"Doing\") {\r\n        return \"Accepted, \" + favor.favor_by_username + \". Click to undo accepting the favor\"\r\n      } else {\r\n        return \"Click to Accept Favor\"\r\n      }\r\n    }\r\n    handleTime(time){\r\n    let currentDate = new Date(time);\r\n    let hours = currentDate.getHours();\r\n    let minutes = currentDate.getMinutes();\r\n    let seconds = currentDate.getSeconds();\r\n    hours = (hours < 10) ? `0${hours}` : hours;\r\n    minutes = (minutes < 10) ? `0${minutes}` : minutes;\r\n    seconds = (seconds < 10) ? `0${seconds}` : seconds;\r\n    return (\r\n      <div className=\"date\">\r\n        <span> Date: {currentDate.toDateString()} </span>\r\n        <span className=\"time-str\"> Time: {hours} :{minutes} :{seconds} </span>\r\n      </div>\r\n    )\r\n    }\r\n    handleFavors(){\r\n    if(this.props.favors){\r\n      return (\r\n      <div className=\"prof-favors\">\r\n         {this.props.favors\r\n          .filter(favor => favor.favor_for_user_id === this.props.match.params.user_id)\r\n          .map( (favor, idx)=> {\r\n            if (!this.props.currentUser) {\r\n                return <div id={idx} className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p> {favor.favor_description} </p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    <br></br>\r\n                   \r\n                </div>\r\n            } else if (favor.favor_for_user_id === this.props.currentUser.id) {\r\n                return <div id={idx} className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p> {favor.favor_description} </p>\r\n                    <p> {this.handleTime(favor.date)} </p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\r\n                    <br></br>\r\n                 \r\n                </div>\r\n            } else if (favor.favor_by_user_id !== null && favor.favor_for_user_id !== this.props.currentUser.id && favor.favor_by_user_id !== this.props.currentUser.id) {\r\n                return <div id={idx} className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p> {favor.favor_description} </p>\r\n                    <p> {this.handleTime(favor.date)} </p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    <p>`This has been accepted by {favor.favor_by_username}.`</p>\r\n                    <br></br>\r\n                 \r\n                </div>\r\n            } else if (favor.favor_by_user_id !== null && favor.favor_for_user_id !== this.props.currentUser.id && favor.favor_by_user_id === this.props.currentUser.id) {\r\n                return <div id={idx} className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p> {favor.favor_description} </p>\r\n                    <p> {this.handleTime(favor.date)} </p>\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Accepted Favor, Click to Undo</button>\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    <br></br>\r\n                   \r\n                </div>\r\n            }\r\n            else {\r\n                return <div id={idx} className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p> {favor.favor_description} </p>\r\n                    <p> {this.handleTime(favor.date)} </p>\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    <br></br>\r\n                 \r\n                </div>\r\n            }\r\n        })\r\n        }\r\n    </div>\r\n      )}\r\n      }\r\n  handleTakenFavors() {\r\n    if (this.props.favors) {\r\n      return (\r\n        <div className=\"prof-favors\">\r\n          {this.props.favors\r\n            .filter(favor => favor.favor_by_user_id === this.props.match.params.user_id)\r\n            .map((favor, idx) => {\r\n              if (!this.props.currentUser) {\r\n                return <div className=\"favor-item\">\r\n                  <p key={idx} > {favor.favor_description}</p>\r\n                  <p>  {this.handleTime(favor.date)}</p>\r\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n              } else if (favor.favor_for_user_id === this.props.match.params.user_id) {\r\n                return <div className=\"favor-item\">\r\n                  <p key={idx} className=\"favor-list\">  {favor.favor_description}</p>\r\n                  <p>  {this.handleTime(favor.date)} </p>\r\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>delete</button>\r\n                </div  >\r\n              } else if (favor.favor_by_user_id === this.props.match.params.user_id) {\r\n              return <div className=\"favor-item\">\r\n              <p key={idx} className=\"favor-list\">  {favor.favor_description}</p>\r\n              <p>  {this.handleTime(favor.date)} </p>\r\n              <p>You are currently fulfilling this favor for {favor.favor_for_username}</p>\r\n              <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\r\n              {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n          </div>\r\n            }\r\n              else {\r\n                return <div className=\"favor-item\">\r\n                  <p key={idx} > {favor.favor_description}</p>\r\n                  <p>  {this.handleTime(favor.date)} </p>\r\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\r\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n              }\r\n            }\r\n            )\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n    render() {\r\n      debugger\r\n      // const this_user_favors = this.listOfRequest();\r\n        // const noFavors = this.handleNoFavors();\r\n        // const hasFavors = this.handleFavors();\r\n        const favors = (this.props.favors ? this.handleFavors() : this.handleNoFavors());\r\n        const taken_favors = (this.props.favors ? this.handleTakenFavors() : this.handleNoTakenFavors());\r\n        \r\n        let this_user = \"\";\r\n\r\n        if (this.props.users) {\r\n          this_user = this.props.users.find(user => user._id === this.props.user_profile_id);\r\n        }\r\n\r\n      \r\n        \r\n        \r\n        debugger\r\n          return (\r\n            <>\r\n            <ProfileNavContainer />\r\n            <div className=\"profile-view\">\r\n            <div  className=\"banners\">\r\n                     <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --\r\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3>\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" />\r\n                      {/* <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" /> */}\r\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" />\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" />\r\n              </div>\r\n            <div className=\"prof-favors\">\r\n              <h1 className=\"favor-header\">  {this_user.username}  </h1>\r\n              <h3 className=\"prof-fav-hd2\"> These are the good deeds you have done for others  </h3> <br />\r\n                <h2 className=\"prof-fav-hd\"> <FontAwesomeIcon icon={faUser} />  Requested Favors</h2>\r\n                <center> </center>\r\n                <div className=\"favor-lst\">\r\n                      {favors}\r\n                </div>\r\n                  <h2 className=\"prof-fav-hd\"> <FontAwesomeIcon icon={faUser} />  Taken Favors</h2>\r\n                  <div className=\"favor-lst\">\r\n                    {taken_favors}\r\n                  </div>\r\n              <div className=\"prof-favors\">\r\n                {/* {this.handleFavors()}\r\n                {this.handleNoFavors()} */}\r\n              </div>\r\n              </div>\r\n               <div>\r\n                        {/* <img className=\"banner\" src=\"https://i.ibb.co/MSmtpdb/Stay.jpg\" alt=\"covid help\"/> */}\r\n              </div>\r\n              {/* {this.state.favors.map(favor => (\r\n                <FavorItem key={favor.id} title={favor.title} />\r\n              ))} */}\r\n            </div>\r\n            </>\r\n          );\r\n        }\r\n}\r\nexport default ProfileShow;\r\n","/Users/appacademystudent/cfinal/frontend/src/components/newsfeed/newsfeed.jsx",["220"],"import React from 'react';\r\nimport {NavLink, Link} from 'react-router-dom';\r\nimport './newsfeed.css'\r\nimport ProfileNavContainer from '../profiles/profile_nav_container';\r\nclass NewsFeed extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { myFavors: false, favorRequests: false, userSearch: false, forUser: ''}\r\n        this.userShow = this.userShow.bind(this);\r\n        this.requestShow = this.requestShow.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchFavors();\r\n    }\r\n    requestShow() {\r\n        if (!this.state.favorRequests) {\r\n            this.setState( { favorRequests: true})\r\n        } else {\r\n            this.setState( { favorRequests: false})\r\n        }\r\n    }\r\n      userShow() {\r\n        if ( !this.state.myFavors ) {\r\n            this.setState( { myFavors: true})\r\n        } else {\r\n            this.setState( {myFavors: false })\r\n        }\r\n    }\r\n    updateName() {\r\n        return e=> {\r\n            this.setState( { forUser: e.currentTarget.value })\r\n        }\r\n    }\r\n    handleButtonName(favor) {\r\n        if (favor.favor_status === \"Doing\") {\r\n            return \"This is Taken by \" + favor.favor_by_username\r\n        } else {\r\n            return \"Click to Accept Favor\"\r\n        }\r\n    }\r\n    render() {\r\n        let favor_text = this.state.myFavors? \"View All Favors\" : \"View Your Favors\"\r\n        let request_text = this.state.favorRequests?   \"View All Posts\" : \"View Requests\"\r\n        let favors = (this.props.favors.data) || [];\r\n        favors = ( this.state.myFavors? favors.filter( favor => this.props.currentUser.id === favor.favor_for_user_id) : favors)\r\n        favors = ( this.state.favorRequests? favors.filter( favor => favor.status === \"Doing\") : favors )\r\n        favors = ( this.state.userSearch? favors.filter( favor => favor.favor_for_username === this.state.forUser) : favors)\r\n        debugger\r\n        favors = favors.map( (favor, idx)=> {\r\n            if (!this.props.currentUser) {\r\n                return <div id={idx}  className=\"favor-item2\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p className=\"favor-newsfeed\"> {favor.favor_description} </p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    <br></br>\r\n                    <p>Favor for:  <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>             \r\n                    </div>\r\n            } else if (favor.favor_for_user_id === this.props.currentUser.id) {\r\n                return <div id={idx}  className=\"favor-item2\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p className=\"favor-newsfeed\"> {favor.favor_description} </p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\r\n                    <br></br>\r\n                    <p>Favor for:  <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                </div>\r\n            } else if (favor.favor_by_user_id !== null && favor.favor_for_user_id !== this.props.currentUser.id && favor.favor_by_user_id !== this.props.currentUser.id) {\r\n                return <div id={idx}  className=\"favor-item2\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p className=\"favor-newsfeed\"> {favor.favor_description} </p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    <p>{this.handleButtonName(favor)}</p>\r\n                    <br></br>\r\n                    <p>Favor for:  <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>      \r\n                    </div>\r\n            } else if (favor.favor_by_user_id !== null && favor.favor_for_user_id !== this.props.currentUser.id && favor.favor_by_user_id === this.props.currentUser.id) {\r\n                return <div id={idx}  className=\"favor-item2\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p className=\"favor-newsfeed\"> {favor.favor_description} </p>\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Accepted Favor, Click to Undo</button>\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    <br></br>\r\n                    <p>Favor for:  <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>               \r\n                    </div>\r\n            }\r\n            else {\r\n                return <div id={idx}  className=\"favor-item2\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p className=\"favor-newsfeed\"> {favor.favor_description} </p>\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    <br></br>\r\n                    \r\n                        <p>Favor for:  <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                               \r\n                    </div>\r\n            }\r\n        })\r\n        return(\r\n            <div className=\"newsfeed-whole\">\r\n                <ProfileNavContainer />\r\n                \r\n                <div className=\"news-banners\">\r\n                           <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --      \r\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3>   \r\n\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" />\r\n\r\n                      {/* <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" /> */}\r\n\r\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" />\r\n\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" />\r\n\r\n                </div>\r\n                <h1 id=\"newsfeed-title\"> Newsfeed </h1>\r\n                <button className=\"map-button nav-btns-child\" onClick={this.userShow}> {favor_text} </button>\r\n                <button className=\"map-button nav-btns-child-login\" onClick={this.requestShow}> {request_text} </button>\r\n                <input type=\"text\" className=\"input-search  user-search-bar\"  onChange={this.updateName}></input>\r\n                {favors}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default NewsFeed;\r\n\r\n\r\n     <div className=\"news-banners\">\r\n                           <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --      \r\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3>   \r\n\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" />\r\n\r\n                      {/* <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" /> */}\r\n\r\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" />\r\n\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" />\r\n\r\n                </div>\r\n\r\n    // <button onClick={this.userShow} className=\"map-button nav-btns-child\" > {favor_text} </button>\r\n    //                 <button onClick={this.requestShow} className=\"map-button nav-btns-child-login\"> {request_text} </button>\r\n    //                 <input type=\"text\"placeholder=\"Search a Username\" className=\"user-search-bar\" value={this.state.forUser} onChange={this.updateName()}></input>","/Users/appacademystudent/cfinal/frontend/src/utils/favors_api_util.js",[],"/Users/appacademystudent/cfinal/frontend/src/session/navbar_container.js",[],"/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile_nav.jsx",["221","222","223","224","225"],"/Users/appacademystudent/cfinal/frontend/src/components/splash/map.jsx",["226","227","228"],"/Users/appacademystudent/cfinal/frontend/src/session/navbar.jsx",["229"],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":11,"column":8,"nodeType":"236","messageId":"237","endLine":11,"endColumn":13},{"ruleId":"234","severity":1,"message":"238","line":1,"column":10,"nodeType":"236","messageId":"237","endLine":1,"endColumn":27},{"ruleId":"234","severity":1,"message":"238","line":1,"column":10,"nodeType":"236","messageId":"237","endLine":1,"endColumn":27},{"ruleId":"239","severity":1,"message":"240","line":11,"column":1,"nodeType":"241","endLine":33,"endColumn":2},{"ruleId":"234","severity":1,"message":"242","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":13},{"ruleId":"234","severity":1,"message":"243","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":21},{"ruleId":"234","severity":1,"message":"244","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":25},{"ruleId":"234","severity":1,"message":"245","line":4,"column":10,"nodeType":"236","messageId":"237","endLine":4,"endColumn":22},{"ruleId":"234","severity":1,"message":"246","line":5,"column":10,"nodeType":"236","messageId":"237","endLine":5,"endColumn":22},{"ruleId":"234","severity":1,"message":"247","line":6,"column":10,"nodeType":"236","messageId":"237","endLine":6,"endColumn":17},{"ruleId":"248","severity":1,"message":"249","line":92,"column":10,"nodeType":"250","messageId":"251","endLine":96,"endColumn":43},{"ruleId":"252","severity":1,"message":"253","line":22,"column":5,"nodeType":"254","endLine":22,"endColumn":75},{"ruleId":"252","severity":1,"message":"253","line":23,"column":5,"nodeType":"254","endLine":23,"endColumn":76},{"ruleId":"252","severity":1,"message":"253","line":24,"column":5,"nodeType":"254","endLine":24,"endColumn":75},{"ruleId":"252","severity":1,"message":"253","line":25,"column":5,"nodeType":"254","endLine":25,"endColumn":75},{"ruleId":"252","severity":1,"message":"253","line":26,"column":5,"nodeType":"254","endLine":26,"endColumn":75},{"ruleId":"252","severity":1,"message":"253","line":27,"column":5,"nodeType":"254","endLine":27,"endColumn":75},{"ruleId":"252","severity":1,"message":"253","line":75,"column":21,"nodeType":"254","endLine":75,"endColumn":91},{"ruleId":"234","severity":1,"message":"255","line":3,"column":18,"nodeType":"236","messageId":"237","endLine":3,"endColumn":22},{"ruleId":"234","severity":1,"message":"256","line":6,"column":8,"nodeType":"236","messageId":"237","endLine":6,"endColumn":21},{"ruleId":"257","severity":1,"message":"258","line":20,"column":7,"nodeType":"259","endLine":20,"endColumn":11},{"ruleId":"252","severity":1,"message":"253","line":193,"column":23,"nodeType":"254","endLine":193,"endColumn":102},{"ruleId":"252","severity":1,"message":"253","line":195,"column":22,"nodeType":"254","endLine":195,"endColumn":101},{"ruleId":"252","severity":1,"message":"253","line":196,"column":23,"nodeType":"254","endLine":196,"endColumn":103},{"ruleId":"252","severity":1,"message":"253","line":203,"column":17,"nodeType":"254","endLine":203,"endColumn":87},{"ruleId":"234","severity":1,"message":"260","line":53,"column":9,"nodeType":"236","messageId":"237","endLine":53,"endColumn":18},{"ruleId":"252","severity":1,"message":"253","line":103,"column":22,"nodeType":"254","endLine":103,"endColumn":92},{"ruleId":"234","severity":1,"message":"255","line":6,"column":9,"nodeType":"236","messageId":"237","endLine":6,"endColumn":13},{"ruleId":"234","severity":1,"message":"261","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":22},{"ruleId":"234","severity":1,"message":"262","line":2,"column":15,"nodeType":"236","messageId":"237","endLine":2,"endColumn":31},{"ruleId":"234","severity":1,"message":"263","line":2,"column":33,"nodeType":"236","messageId":"237","endLine":2,"endColumn":39},{"ruleId":"234","severity":1,"message":"264","line":2,"column":41,"nodeType":"236","messageId":"237","endLine":2,"endColumn":51},{"ruleId":"234","severity":1,"message":"265","line":2,"column":53,"nodeType":"236","messageId":"237","endLine":2,"endColumn":64},{"ruleId":"234","severity":1,"message":"266","line":27,"column":15,"nodeType":"236","messageId":"237","endLine":27,"endColumn":25},{"ruleId":"252","severity":1,"message":"253","line":55,"column":30,"nodeType":"254","endLine":55,"endColumn":95},{"ruleId":"234","severity":1,"message":"256","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":21},{"ruleId":"257","severity":1,"message":"258","line":21,"column":7,"nodeType":"259","endLine":21,"endColumn":11},{"ruleId":"252","severity":1,"message":"253","line":198,"column":23,"nodeType":"254","endLine":198,"endColumn":102},{"ruleId":"252","severity":1,"message":"253","line":200,"column":22,"nodeType":"254","endLine":200,"endColumn":101},{"ruleId":"252","severity":1,"message":"253","line":201,"column":23,"nodeType":"254","endLine":201,"endColumn":103},{"ruleId":"234","severity":1,"message":"247","line":2,"column":9,"nodeType":"236","messageId":"237","endLine":2,"endColumn":16},{"ruleId":"234","severity":1,"message":"267","line":3,"column":10,"nodeType":"236","messageId":"237","endLine":3,"endColumn":17},{"ruleId":"252","severity":1,"message":"253","line":167,"column":9,"nodeType":"254","endLine":167,"endColumn":82},{"ruleId":"252","severity":1,"message":"253","line":186,"column":35,"nodeType":"254","endLine":186,"endColumn":107},{"ruleId":"252","severity":1,"message":"253","line":219,"column":22,"nodeType":"254","endLine":219,"endColumn":94},{"ruleId":"268","severity":1,"message":"269","line":238,"column":39,"nodeType":"270","endLine":238,"endColumn":64},{"ruleId":"234","severity":1,"message":"264","line":1,"column":41,"nodeType":"236","messageId":"237","endLine":1,"endColumn":51},{"ruleId":"234","severity":1,"message":"265","line":1,"column":53,"nodeType":"236","messageId":"237","endLine":1,"endColumn":64},{"ruleId":"234","severity":1,"message":"271","line":2,"column":8,"nodeType":"236","messageId":"237","endLine":2,"endColumn":23},{"ruleId":"252","severity":1,"message":"253","line":54,"column":13,"nodeType":"254","endLine":54,"endColumn":86},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","'ReactReduxContext' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'React' is defined but never used.","'HospitalsNear' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCodeBranch' is defined but never used.","'faLinkedinIn' is defined but never used.","'NavLink' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'FavorsReducer' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","'loginUser' is assigned a value but never used.","'AboutContainer' is defined but never used.","'GoogleApiWrapper' is defined but never used.","'Marker' is defined but never used.","'InfoWindow' is defined but never used.","'addListener' is defined but never used.","'apiRequest' is assigned a value but never used.","'library' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'MarkerClusterer' is defined but never used.","no-global-assign","no-unsafe-negation"]