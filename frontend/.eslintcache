[{"/Users/appacademystudent/cfinal/frontend/src/index.js":"1","/Users/appacademystudent/cfinal/frontend/src/root.js":"2","/Users/appacademystudent/cfinal/frontend/src/store/store.js":"3","/Users/appacademystudent/cfinal/frontend/src/utils/session_api_util.js":"4","/Users/appacademystudent/cfinal/frontend/src/actions/session_actions.js":"5","/Users/appacademystudent/cfinal/frontend/src/start.js":"6","/Users/appacademystudent/cfinal/frontend/src/actions/modal_actions.js":"7","/Users/appacademystudent/cfinal/frontend/src/reducers/root_reducer.js":"8","/Users/appacademystudent/cfinal/frontend/src/utils/route_util.js":"9","/Users/appacademystudent/cfinal/frontend/src/session/login_form_container.js":"10","/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile_container.js":"11","/Users/appacademystudent/cfinal/frontend/src/reducers/entities_reducer.js":"12","/Users/appacademystudent/cfinal/frontend/src/reducers/session_api_reducer.js":"13","/Users/appacademystudent/cfinal/frontend/src/reducers/ui_reducer.js":"14","/Users/appacademystudent/cfinal/frontend/src/reducers/errors_reducer.js":"15","/Users/appacademystudent/cfinal/frontend/src/modal.jsx":"16","/Users/appacademystudent/cfinal/frontend/src/session/signup_form_container.jsx":"17","/Users/appacademystudent/cfinal/frontend/src/components/splash/splash_container.jsx":"18","/Users/appacademystudent/cfinal/frontend/src/components/about/about.jsx":"19","/Users/appacademystudent/cfinal/frontend/src/components/about/about_container.jsx":"20","/Users/appacademystudent/cfinal/frontend/src/components/create_favor/favor_create_container.jsx":"21","/Users/appacademystudent/cfinal/frontend/src/components/newsfeed/newsfeed_container.jsx":"22","/Users/appacademystudent/cfinal/frontend/src/components/covid_help/covid_help.jsx":"23","/Users/appacademystudent/cfinal/frontend/src/components/profile_show/profile_show_container.jsx":"24","/Users/appacademystudent/cfinal/frontend/src/actions/favor_actions.js":"25","/Users/appacademystudent/cfinal/frontend/src/reducers/favors_reducer.js":"26","/Users/appacademystudent/cfinal/frontend/src/reducers/users_reducer.js":"27","/Users/appacademystudent/cfinal/frontend/src/reducers/modals_reducer.js":"28","/Users/appacademystudent/cfinal/frontend/src/reducers/session_errors_reducer.js":"29","/Users/appacademystudent/cfinal/frontend/src/session/login_form.jsx":"30","/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile_nav_container.js":"31","/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile.jsx":"32","/Users/appacademystudent/cfinal/frontend/src/session/signup_form.jsx":"33","/Users/appacademystudent/cfinal/frontend/src/components/splash/splash.jsx":"34","/Users/appacademystudent/cfinal/frontend/src/components/about/hospitals_near.jsx":"35","/Users/appacademystudent/cfinal/frontend/src/components/create_favor/favor_create.jsx":"36","/Users/appacademystudent/cfinal/frontend/src/components/profile_show/profile_show.jsx":"37","/Users/appacademystudent/cfinal/frontend/src/components/newsfeed/newsfeed.jsx":"38","/Users/appacademystudent/cfinal/frontend/src/utils/favors_api_util.js":"39","/Users/appacademystudent/cfinal/frontend/src/session/navbar_container.js":"40","/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile_nav.jsx":"41","/Users/appacademystudent/cfinal/frontend/src/components/splash/map.jsx":"42","/Users/appacademystudent/cfinal/frontend/src/session/navbar.jsx":"43","/Users/appacademystudent/cfinal/frontend/src/components/profiles/profilenav2.jsx":"44"},{"size":1062,"mtime":1610056013224,"results":"45","hashOfConfig":"46"},{"size":294,"mtime":1610056013230,"results":"47","hashOfConfig":"46"},{"size":353,"mtime":1610056013234,"results":"48","hashOfConfig":"46"},{"size":611,"mtime":1610211625069,"results":"49","hashOfConfig":"46"},{"size":2907,"mtime":1610132297907,"results":"50","hashOfConfig":"46"},{"size":1711,"mtime":1610056013234,"results":"51","hashOfConfig":"46"},{"size":265,"mtime":1610056013206,"results":"52","hashOfConfig":"46"},{"size":462,"mtime":1610056013227,"results":"53","hashOfConfig":"46"},{"size":801,"mtime":1610056013235,"results":"54","hashOfConfig":"46"},{"size":913,"mtime":1610056013231,"results":"55","hashOfConfig":"46"},{"size":993,"mtime":1610056013217,"results":"56","hashOfConfig":"46"},{"size":315,"mtime":1610056013226,"results":"57","hashOfConfig":"46"},{"size":684,"mtime":1610056013229,"results":"58","hashOfConfig":"46"},{"size":187,"mtime":1610056013229,"results":"59","hashOfConfig":"46"},{"size":220,"mtime":1610056013226,"results":"60","hashOfConfig":"46"},{"size":1171,"mtime":1610056013225,"results":"61","hashOfConfig":"46"},{"size":966,"mtime":1610056013233,"results":"62","hashOfConfig":"46"},{"size":446,"mtime":1610056013224,"results":"63","hashOfConfig":"46"},{"size":4700,"mtime":1610086169217,"results":"64","hashOfConfig":"46"},{"size":207,"mtime":1610056013208,"results":"65","hashOfConfig":"46"},{"size":692,"mtime":1610056013213,"results":"66","hashOfConfig":"46"},{"size":976,"mtime":1610056013215,"results":"67","hashOfConfig":"46"},{"size":800,"mtime":1610056013212,"results":"68","hashOfConfig":"46"},{"size":1243,"mtime":1610132297912,"results":"69","hashOfConfig":"46"},{"size":1763,"mtime":1610211573937,"results":"70","hashOfConfig":"46"},{"size":1650,"mtime":1610211644348,"results":"71","hashOfConfig":"46"},{"size":620,"mtime":1610211583735,"results":"72","hashOfConfig":"46"},{"size":348,"mtime":1610056013227,"results":"73","hashOfConfig":"46"},{"size":512,"mtime":1610056013229,"results":"74","hashOfConfig":"46"},{"size":2599,"mtime":1610819588351,"results":"75","hashOfConfig":"46"},{"size":959,"mtime":1610514677027,"results":"76","hashOfConfig":"46"},{"size":12011,"mtime":1610516470647,"results":"77","hashOfConfig":"46"},{"size":4044,"mtime":1610820597048,"results":"78","hashOfConfig":"46"},{"size":3990,"mtime":1610056013223,"results":"79","hashOfConfig":"46"},{"size":1319,"mtime":1610056013211,"results":"80","hashOfConfig":"46"},{"size":4011,"mtime":1610820697238,"results":"81","hashOfConfig":"46"},{"size":12305,"mtime":1610211738987,"results":"82","hashOfConfig":"46"},{"size":8614,"mtime":1610739728353,"results":"83","hashOfConfig":"46"},{"size":525,"mtime":1610211631651,"results":"84","hashOfConfig":"46"},{"size":825,"mtime":1610056013232,"results":"85","hashOfConfig":"46"},{"size":6775,"mtime":1610385073684,"results":"86","hashOfConfig":"87"},{"size":1859,"mtime":1610056013221,"results":"88","hashOfConfig":"46"},{"size":1754,"mtime":1610377479940,"results":"89","hashOfConfig":"46"},{"size":6591,"mtime":1610847578811,"results":"90","hashOfConfig":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"1auopwe",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"93"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"93"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"93"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"93"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"93"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"93"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"93"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"93"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"93"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vxu16o",{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"93"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"93"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/appacademystudent/cfinal/frontend/src/index.js",[],["194","195"],"/Users/appacademystudent/cfinal/frontend/src/root.js",[],"/Users/appacademystudent/cfinal/frontend/src/store/store.js",[],"/Users/appacademystudent/cfinal/frontend/src/utils/session_api_util.js",[],"/Users/appacademystudent/cfinal/frontend/src/actions/session_actions.js",[],"/Users/appacademystudent/cfinal/frontend/src/start.js",["196"],"import React from 'react';\nimport { AuthRoute, ProtectedRoute } from './utils/route_util';\nimport { Switch } from 'react-router-dom';\nimport LoginFormContainer from './session/login_form_container';\nimport SignupFormContainer from './session/signup_form_container';\nimport ProfileContainer from './components/profiles/profile_container';\nimport Modal from './modal';\nimport SplashContainer from './components/splash/splash_container';\nimport { Route } from 'react-router-dom';\nimport FavorCreateContainer from './components/create_favor/favor_create_container';\nimport About from './components/about/about'\nimport AboutContainer from './components/about/about_container';\nimport CovidHelp from './components/covid_help/covid_help';\nimport NewsFeedContainer from './components/newsfeed/newsfeed_container';\nimport ProfileShowContainer from './components/profile_show/profile_show_container';\n\n\nconst App = () => (\n  <div>\n     <Modal />\n    \n    <Switch>\n      <Route exact path=\"/\" component={SplashContainer} /> \n      <Route exact path=\"/about\" component={AboutContainer} />\n      <Route exact path=\"/newsfeed\" component={NewsFeedContainer} />\n      <ProtectedRoute exact path='/add' component = {FavorCreateContainer} />\n      <AuthRoute exact path=\"/login\" component={LoginFormContainer} />\n      <AuthRoute exact path=\"/signup\" component={SignupFormContainer} />\n      <Route exact path=\"/covid\"  component={CovidHelp} />\n      <ProtectedRoute exact path=\"/:user_id\" component={ProfileContainer} /> \n      <ProtectedRoute exact path=\"profile\" component={ProfileContainer} /> \n      <Route exact path=\"/user/:user_id\" component={ProfileShowContainer} />\n    \n    </Switch>\n  </div>\n);\n\nexport default App;\n\n","/Users/appacademystudent/cfinal/frontend/src/actions/modal_actions.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/root_reducer.js",["197"],"import { ReactReduxContext } from \"react-redux\";\nimport {combineReducers} from 'redux';\nimport entitiesReducer from \"./entities_reducer\";\nimport sessionReducer from './session_api_reducer';\nimport errorsReducer from './errors_reducer';\n\nimport uiReducer from \"./ui_reducer\";\n\n\nconst RootReducer = combineReducers({\n    entities: entitiesReducer,\n    session: sessionReducer,\n        ui: uiReducer,\n    errors: errorsReducer\n\n\n\n})\n\n\n\n\n\nexport default RootReducer;","/Users/appacademystudent/cfinal/frontend/src/utils/route_util.js",[],"/Users/appacademystudent/cfinal/frontend/src/session/login_form_container.js",[],"/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile_container.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/entities_reducer.js",["198"],"import { ReactReduxContext } from \"react-redux\";\nimport { combineReducers } from 'redux';\nimport usersReducer from './users_reducer';\nimport favorsReducer from './favors_reducer';\n\n\nconst entitiesReducer = combineReducers({\n    users: usersReducer,\n    favors: favorsReducer\n\n})\n\n\n\n\n\nexport default entitiesReducer;","/Users/appacademystudent/cfinal/frontend/src/reducers/session_api_reducer.js",["199"],"\nimport { RECEIVE_CURRENT_USER, \n         RECEIVE_USER_LOGOUT, \n         RECEIVE_USER_SIGN_IN } from '../actions/session_actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      \n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: undefined\n      };\n    case RECEIVE_USER_SIGN_IN:\n      return {\n        ...state,\n        isSignedIn: true\n      }\n    default:\n      return state;\n  }\n}\n\n","/Users/appacademystudent/cfinal/frontend/src/reducers/ui_reducer.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/errors_reducer.js",[],"/Users/appacademystudent/cfinal/frontend/src/modal.jsx",[],"/Users/appacademystudent/cfinal/frontend/src/session/signup_form_container.jsx",[],"/Users/appacademystudent/cfinal/frontend/src/components/splash/splash_container.jsx",["200"],"import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport { fetchFavors } from '../../actions/favor_actions';\r\nimport Splash from './splash';\r\n\r\n\r\nconst mSTP = state => {\r\n    return {\r\n        favors: state.entities.favors,\r\n        currentUser: state.session.user \r\n    }\r\n}\r\n\r\nconst mDTP = dispatch => {\r\n    return {\r\n        fetchFavors: () => dispatch(fetchFavors())\r\n    }\r\n}\r\n\r\nexport default connect(mSTP, mDTP)(Splash);","/Users/appacademystudent/cfinal/frontend/src/components/about/about.jsx",["201","202","203","204","205","206"],"import React from 'react';\r\nimport HospitalsNear from './hospitals_near'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCodeBranch} from '@fortawesome/free-solid-svg-icons'\r\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons'\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './about.css'\r\n\r\nclass About extends React.Component {\r\n\r\n    render() {\r\n        const git = <img alt=\"icon\" src=\"https://git-scm.com/images/logos/downloads/Git-Icon-1788C.png\" height={30} width={30}></img>;\r\n        const link = <img alt=\"icon\" src=\"https://pngmind.com/wp-content/uploads/2019/08/Linkedin-Logo-Png-Transparent-Background.png\" width={30} height = {30} ></img>\r\n        return(\r\n            <div className=\"about\">\r\n                    <div className=\"about-header\">\r\n                        <h1> About Us </h1>\r\n                        <h2> View more of our projects or contact us!</h2>\r\n                    </div>\r\n                    <div className=\"about-people\">\r\n                        <div className=\"person-div\">\r\n                            <h2> Divyam Satyarthi </h2>\r\n                            <div className=\"links\">\r\n                                <div className=\"link-text-image\">\r\n                                    <a href=\"https://github.com/divyams1\">\r\n                                        {git}\r\n                                        <p> Github </p>\r\n                                    </a>\r\n                                </div>\r\n                                <div className=\"link-text-image\">\r\n                                    <a href=\"https://www.linkedin.com/in/divyam-satyarthi-b6628513b/\">\r\n                                    {link}\r\n                                    <p> LinkedIn</p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <h4> Email: divyamsat@gmail.com </h4>\r\n                            <h4> Phone: 443-838-7815</h4>\r\n                        </div>\r\n\r\n                        <div className=\"person-div\">\r\n                            <h2> Aaron Robinson </h2>\r\n                            <div className=\"links\">\r\n                                <div className=\"link-text-image\">\r\n                                    <a href=\"https://github.com/indierusky\"> \r\n                                        {git}\r\n                                        <p> Github </p>\r\n                                    </a>\r\n                                </div>\r\n                                <div className=\"link-text-image\">\r\n                                     <a href=\"https://www.linkedin.com/in/aaron-robinson-258a77201/\"> \r\n                                         {link}\r\n                                         <p> LinkedIn </p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <h4> Email: aaronjrobinson@hotmail.com </h4>\r\n                            <h4> Phone: 347-664-0151</h4>\r\n                            \r\n                        </div>\r\n\r\n                        <div className=\"person-div\">\r\n                            <h2> Anthony Collichio </h2>\r\n                            <div className=\"links\">\r\n                                    <div className=\"link-text-image\">\r\n                                <a  href=\"https://github.com/collich55\">\r\n                                            {git}\r\n                                            <p> Github</p>\r\n                                            </a>\r\n                                    </div>\r\n                                    <div className=\"link-text-image\">\r\n                                <a  href=\"https://www.linkedin.com/in/anthony-collichio-451b11103/\"> \r\n                                            {link}\r\n                                            <p> LinkedIn </p>\r\n                                        </a>\r\n                                    </div>\r\n                            </div>\r\n                            <h4> Email: collich55@gmail.com  </h4>\r\n                            <h4> Phone: 585-794-3850  </h4>\r\n                        </div>\r\n                    </div>\r\n                    <Link id=\"back-link\" to={'/'}>Back</Link>\r\n                </div>\r\n\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default About;\r\n\r\n         {/* <div className=\"link-text-image\">\r\n\r\n                                    <img className=\"link-image\" src=\"https://images.spot.im/v1/production/xfghicjlsq78tkpf9xxe\" />\r\n                                    <p> Angel List </p>\r\n                                </div> */}","/Users/appacademystudent/cfinal/frontend/src/components/about/about_container.jsx",[],"/Users/appacademystudent/cfinal/frontend/src/components/create_favor/favor_create_container.jsx",[],"/Users/appacademystudent/cfinal/frontend/src/components/newsfeed/newsfeed_container.jsx",[],"/Users/appacademystudent/cfinal/frontend/src/components/covid_help/covid_help.jsx",["207","208","209","210","211","212"],"import React from 'react';\nimport ProfileNavContainer from '../profiles/profile_nav_container';\n\nimport '../profiles/profile.css';\n\n\nclass CovidHelp  extends React.Component {\n\n\n\n\n\n\nrender() {\n\nreturn (\n\n<>\n<ProfileNavContainer />\n<div className=\"banners\">\n\n    <img className=\"support-banner\" src=\"https://i.ibb.co/SQLXj3y/1.png\"/>\n    <img className=\"support-banner\" src=\" https://i.ibb.co/fDdmsYj/2.png\"/>\n    <img className=\"support-banner\" src=\"https://i.ibb.co/r4g1jGw/3.png\"/>\n    <img className=\"support-banner\" src=\"https://i.ibb.co/fk1Rkdd/4.png\"/>\n    <img className=\"support-banner\" src=\"https://i.ibb.co/gFCy8ny/5.png\"/>\n    <img className=\"support-banner\" src=\"https://i.ibb.co/ZxttcGY/6.png\"/>\n                          \n</div>\n</>\n\n\n\n\n\n)\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n}\n\n\nexport default CovidHelp;\n","/Users/appacademystudent/cfinal/frontend/src/components/profile_show/profile_show_container.jsx",[],"/Users/appacademystudent/cfinal/frontend/src/actions/favor_actions.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/favors_reducer.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/users_reducer.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/modals_reducer.js",[],"/Users/appacademystudent/cfinal/frontend/src/reducers/session_errors_reducer.js",[],"/Users/appacademystudent/cfinal/frontend/src/session/login_form.jsx",["213","214"],"/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile_nav_container.js",[],"/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile.jsx",["215","216","217","218","219"],"import React from 'react';\nimport ProfileNavContainer from './profile_nav_container';\nimport {NavLink, Link} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser} from '@fortawesome/free-solid-svg-icons';\nimport FavorsReducer from '../../reducers/favors_reducer';\n// import FavorItem from '../favors/favor_item';\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.props.favors;\n        this.handleFavors = this.handleFavors.bind(this);\n        this.handleNoFavors = this.handleNoFavors.bind(this);\n        this.renderForm = this.renderForm.bind(this);\n        this.handleTime = this.handleTime.bind(this);\n    }\n    componentDidMount() {\n      console.log(this.props.currentUser.id)\n      this.props.fetchFavors();\n      this.state = this.props.favors;\n      this.props.closeModal();\n      // this.props.fetchFavorsForUser({ user_id: this.props.user_profile_id });\n    }\n    componentWillReceiveProps(newState) {\n      this.setState({ favors: newState.favors });\n    }\n\n\n    componentDidUpdate(prevProps) {\n\n \n   \n\n\n        if (this.props.favors !== prevProps.favors) {\n\n        \n\n            const newFavors = this.props.favors;\n            this.setState({ favors: newFavors })\n        }\n\n\n}\n\n\n    componentWillUnmount() {\n        this.props.closeModal();\n    }\n    // listOfRequest() {\n    //   return this.props.favors[0].filter(favor => favor.favor_for_user_id === this.props.user_profile_id)\n    // }\n    renderForm(field) {\n    if (this.props.modal === field) {\n      return () => {\n        this.props.closeModal();\n      }\n    }\n    return () => this.props.openModal(field)\n  }\n    handleNoFavors(){\n     \n              if (!this.props.favors) return (\n              <>\n              {/* <ProfileNavContainer /> */}\n              <div className=\"prof-nofavors\"> We currently have no record of any favors by you.\n                Click the add button to list any good deeds you have done lately </div>\n              </>\n    )}\n  handleNoTakenFavors() {\n    \n    if (!this.props.favors) return (\n      <>\n        {/* <ProfileNavContainer /> */}\n        <div className=\"prof-nofavors\"> We currently have no record of any favors that you are working on for other users.\n       </div>\n      </>\n    )\n  }\n    handleButtonName(favor){\n      if (favor.favor_status === \"Doing\") {\n        return \"Accepted Favor, Click to Undo\"\n      } else {\n        return \"Click to Accept Favor\"\n      }\n    }\n    handleTime(time){\n    let currentDate = new Date(time);\n    let hours = currentDate.getHours();\n    let minutes = currentDate.getMinutes();\n    let seconds = currentDate.getSeconds();\n    hours = (hours < 10) ? `0${hours}` : hours;\n    minutes = (minutes < 10) ? `0${minutes}` : minutes;\n    seconds = (seconds < 10) ? `0${seconds}` : seconds;\n    return (\n      <div className=\"date\">\n        <span> Date: {currentDate.toDateString()} </span>\n        <span className=\"time-str\"> Time: {hours} :{minutes} :{seconds} </span>\n      </div>\n    )\n    }\n    handleFavors(){\n    if(this.props.favors){\n      return (\n      <div className=\"prof-favors\">\n         {this.props.favors\n          .filter(favor => favor.favor_for_user_id === this.props.currentUser.id)\n          .map( (favor, idx) => {\n            if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\n              return <div className=\"favor-item\" >\n                 <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                <p key={idx} className=\"favor-list\">  {favor.favor_description}</p>\n                <p> {this.handleTime(favor.date)} </p>\n                {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n              </div>\n            } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Request\") {\n              return <div className=\"favor-item\">\n                 <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n              <p key={idx} className=\"favor-list\">  {favor.favor_description}</p>\n              <p> {this.handleTime(favor.date)} </p>\n              <p className=\"favor-list\">This favor has not been taken yet</p>\n              {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */ }\n              <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\n          </div>\n            } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\n              return <div className=\"favor-item\">\n                 <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                <p key={idx}  className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                <p id=\"taken-favor\">This favor has been taken by {favor.favor_by_username}</p>\n                {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\n              </div>\n            }\n            else if (favor.favor_for_user_id === this.props.currentUser.id) {\n              return <div className=\"favor-item\">\n                 <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\n              </div>\n            }\n            else if (favor.favor_by_user_id === this.props.currentUser.id) {\n              return <div>\n                 <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                <p>For {favor.favor_for_username}</p>\n                <button className=\"map-button nav-btns-child-login\" ionClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\n                {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n              </div>\n            }\n            else {\n              return <div>\n                 <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                <p>This favor has been accepted by {favor.favor_by_username}</p>\n                {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n              </div>\n            }\n          }\n          )\n        }\n    </div>\n      )}\n      }\n  handleTakenFavors() {\n    if (this.props.favors) {\n      return (\n        <div className=\"prof-favors\">\n          {this.props.favors\n            .filter(favor => favor.favor_by_user_id === this.props.currentUser.id)\n            .map((favor, idx) => {\n              if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              } else if (favor.favor_for_user_id === this.props.currentUser.id) {\n                return <div className=\"favor-item\">\n                   <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\n                </div>\n              } else if (favor.favor_by_user_id === this.props.currentUser.id) {\n              return <div className=\"favor-item\">\n               <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n              <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n              <p>You are currently fulfilling this favor for {favor.favor_for_username}</p>\n              <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\n              {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n          </div>\n            }\n              else {\n                return <div>\n                   <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} {favor.favor_description}</p>\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              }\n            }\n            )\n          }\n        </div>\n      )\n    }\n  }\n    render() {\n      // const this_user_favors = this.listOfRequest();\n        // const noFavors = this.handleNoFavors();\n        // const hasFavors = this.handleFavors();\n        const favors = (this.props.favors ? this.handleFavors() : this.handleNoFavors());\n        const taken_favors = (this.props.favors ? this.handleTakenFavors() : this.handleNoTakenFavors());\n      // if (!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0)) {\n      //   return (\n      //     <h1>You are not logged in</h1>\n      //   )\n      // }\n          return (\n            <>\n            <ProfileNavContainer />\n            <div className=\"profile-view\">\n              \n           \n\n            <div className=\"prof-favors\">\n              <h1 className=\"favor-title\">  Welcome {this.props.currentUser.username}!  </h1>\n              <h3 className=\"prof-fav-hd2\"> These are the good deeds you have requested from others  </h3> <br />\n                <h2 className=\"prof-fav-hd\"> <FontAwesomeIcon icon={faUser} />  Requested Favors</h2>\n                <center> <button className=\"favor-btn\" onClick={this.renderForm('favor')}>\n                <img className=\"add-favor\" src=\"https://i.ibb.co/Bz1RZS5/cross.png\" /> Add Favor</button></center>\n                <div className=\"favor-lst\">\n                      {favors}\n                </div>\n                  <h2 className=\"prof-fav-hd\"> <FontAwesomeIcon icon={faUser} />  Taken Favors</h2>\n                  <div className=\"favor-lst\">\n                    {taken_favors}\n                  </div>\n              <div className=\"prof-favors\">\n                {/* {this.handleFavors()}\n                {this.handleNoFavors()} */}\n              </div>\n              </div>\n               <div>\n                        {/* <img className=\"banner\" src=\"https://i.ibb.co/MSmtpdb/Stay.jpg\" alt=\"covid help\"/> */}\n              </div>\n              {/* {this.state.favors.map(favor => (\n                <FavorItem key={favor.id} title={favor.title} />\n              ))} */}\n            </div>\n            </>\n          );\n        }\n}\nexport default Profile;","/Users/appacademystudent/cfinal/frontend/src/session/signup_form.jsx",["220","221","222"],"/Users/appacademystudent/cfinal/frontend/src/components/splash/splash.jsx",["223","224"],"import React from 'react';\r\nimport MapContainer from './map';\r\nimport NavBarContainer from '../../session/navbar_container';\r\nimport './about.css'\r\nimport '../../App.css'\r\nimport {Link} from 'react-router-dom'\r\nimport AboutContainer from '../about/about_container'\r\n\r\nclass Splash extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { userShow:  false , requestShow: false, userSearch: false, forUser: '' }\r\n        this.userShow = this.userShow.bind(this);\r\n        this.requestShow = this.requestShow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchFavors();\r\n    }\r\n       updateName() {\r\n        return e=> {\r\n            \r\n            \r\n            if ( e.currentTarget.value === \"\") {\r\n                this.setState( {userSearch: false })\r\n            } else {\r\n                this.setState( {userSearch: true })\r\n            }\r\n            this.setState( { 'forUser' : e.currentTarget.value })\r\n            \r\n        }\r\n\r\n    }\r\n    userShow() {\r\n        if ( !this.state.userShow ) {\r\n            this.setState( { userShow: true})\r\n        } else {\r\n            this.setState( {userShow: false })\r\n        }\r\n    }\r\n\r\n    requestShow() {\r\n        if ( !this.state.requestShow) {\r\n            this.setState( {requestShow: true })\r\n        } else {\r\n            this.setState( {requestShow: false})\r\n        }\r\n    }\r\n    render() {\r\n        const button_text = ( this.state.userShow ? \"View All Favors\" : \"View Your Favors\" )\r\n        const request_text =  ( this.state.requestShow? \"View Favor Requests\" : \"View Completed Favors\")\r\n        return (\r\n            <>\r\n        \r\n            <NavBarContainer />\r\n            <div>\r\n                <div className=\"covid-connection-header\">\r\n                    <h1 className=\"covid-big-text\"> COVID Connection  </h1>\r\n                    <h2 className=\"covid-md-text\"> During troubling times like these, we all need to help each other. COVID Connection is a way to do this!</h2>\r\n                    <ul className=\"covid-small-text\"> \r\n                        <li className=\"covid-small-text\"> Connect with other users </li>\r\n                        <li className=\"covid-small-text\" > Make posts asking for help or just to say how you are! </li>\r\n                        <li className=\"covid-small-text\"> Find other users posts and give them a helping hand. </li>\r\n                        <li className=\"covid-small-text\"> Use the map below to find users near you!</li>\r\n                    </ul>\r\n                    <br className=\"text-map-div\">\r\n                    </br>\r\n                    \r\n                    <h1 className=\"map-header\" > Favor Map </h1>\r\n                    <p className=\"covid-md-text\"> Search for favors using the map, or use the buttons below to search for specific favors!</p>\r\n                    <div className=\"map-search\">\r\n                    <button className=\"map-button nav-btns-child\" onClick={this.userShow}> {button_text} </button>\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={this.requestShow}> {request_text} </button>\r\n                    <input type=\"text\" placeholder=\"Search a Username\" className=\"input-search  user-search-bar\" value={this.state.forUser} onChange={this.updateName()}></input>\r\n                    </div>\r\n                </div>\r\n                <div className=\"map-container-div\">\r\n              \r\n                    <div className=\"map-div\">\r\n                        <MapContainer className=\"map-container\" fetchFavors={this.props.fetchFavors} favors={this.props.favors} userShow={this.state.userShow} requestShow={this.state.requestShow} currentUser={this.props.currentUser} userSearch={this.state.userSearch} forUser={this.state.forUser}/>\r\n                    </div>\r\n                </div>\r\n                   <div className=\"background-div\">\r\n\r\n                    </div>\r\n            </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Splash;","/Users/appacademystudent/cfinal/frontend/src/components/about/hospitals_near.jsx",["225","226","227","228","229"],"import React from 'react';\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow, addListener} from 'google-maps-react';\r\nconst mapStyles = {\r\n  width: '80%',\r\n  height: '80%',\r\n  margin: '75px'\r\n}\r\nclass HospitalNear extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            lat: 0, \r\n            lng: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n          navigator.geolocation.getCurrentPosition( position => {\r\n        this.setState( { lat: position.coords.latitude })\r\n        this.setState( { lng: position.coords.longitude})\r\n    })\r\n    }\r\n\r\n    render() {\r\n        const locat = { lat: this.state.lat, lng: this.state.lng}\r\n        const locationString = `${this.state.lat},${this.state.lng}`\r\n        const apiRequest= `https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=${locationString}&radius=2000&type=hospital&key=AIzaSyAZpaEFWsQyJOahKBVfBZ1g3mpemxo1VQo`\r\n        const map = ( <Map\r\n            google = {this.props.google}\r\n            zoom={8}\r\n            style={mapStyles}\r\n            initialCenter= {locat}\r\n            className=\"map-container\"\r\n            ></Map>)\r\n\r\n       \r\n        \r\n        return(\r\n            <div>\r\n                {map}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default HospitalNear;","/Users/appacademystudent/cfinal/frontend/src/components/create_favor/favor_create.jsx",["230"],"/Users/appacademystudent/cfinal/frontend/src/components/profile_show/profile_show.jsx",["231","232","233","234","235"],"import React from 'react';\r\nimport ProfileNavContainer from '../profiles/profile_nav_container';\r\nimport {NavLink, Link} from 'react-router-dom';\r\n// import FavorItem from '../favors/favor_item';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser} from '@fortawesome/free-solid-svg-icons';\r\nimport FavorsReducer from '../../reducers/favors_reducer';\r\n\r\nclass ProfileShow extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = this.props.favors;\r\n        this.handleFavors = this.handleFavors.bind(this);\r\n        this.handleNoFavors = this.handleNoFavors.bind(this);\r\n        this.renderForm = this.renderForm.bind(this);\r\n    }\r\n    \r\n      componentDidMount() {\r\n      this.props.fetchFavors();\r\n      this.state = this.props.favors;\r\n      this.props.closeModal();\r\n      this.props.fetchUsers();\r\n      this.props.getUser(this.props.user_profile_id);\r\n      // this.props.fetchFavorsForUser({ user_id: this.props.user_profile_id });\r\n    }\r\n    componentWillReceiveProps(newState) {\r\n      this.setState({ favors: newState.favors });\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.closeModal();\r\n    }\r\n    // listOfRequest() {\r\n    //   return this.props.favors[0].filter(favor => favor.favor_for_user_id === this.props.user_profile_id)\r\n    // }\r\n    renderForm(field) {\r\n    if (this.props.modal === field) {\r\n      return () => {\r\n        this.props.closeModal();\r\n      }\r\n    }\r\n    return () => this.props.openModal(field)\r\n  }\r\n    handleNoFavors(){\r\n     \r\n              if (!this.props.favors) return (\r\n              <>\r\n              {/* <ProfileNavContainer /> */}\r\n              <div className=\"prof-nofavors\"> We currently have no record of any favors by you.\r\n                Click the add button to list any good deeds you have done lately </div>\r\n              </>\r\n    )}\r\n  handleNoTakenFavors() {\r\n    \r\n    if (!this.props.favors) return (\r\n      <>\r\n        {/* <ProfileNavContainer /> */}\r\n        <div className=\"prof-nofavors\"> We currently have no record of any favors that you are working on for other users.\r\n       </div>\r\n      </>\r\n    )\r\n  }\r\n    handleButtonName(favor){\r\n      if (favor.favor_status === \"Doing\") {\r\n        return \"Accepted, \" + favor.favor_by_username + \". Click to undo accepting the favor\"\r\n      } else {\r\n        return \"Click to Accept Favor\"\r\n      }\r\n    }\r\n    handleTime(time){\r\n    let currentDate = new Date(time);\r\n    let hours = currentDate.getHours();\r\n    let minutes = currentDate.getMinutes();\r\n    let seconds = currentDate.getSeconds();\r\n    hours = (hours < 10) ? `0${hours}` : hours;\r\n    minutes = (minutes < 10) ? `0${minutes}` : minutes;\r\n    seconds = (seconds < 10) ? `0${seconds}` : seconds;\r\n    return (\r\n      <div className=\"date\">\r\n        <span> Date: {currentDate.toDateString()} </span>\r\n        <span className=\"time-str\"> Time: {hours} :{minutes} :{seconds} </span>\r\n      </div>\r\n    )\r\n    }\r\n    handleFavors(){\r\n    if(this.props.favors){\r\n      return (\r\n      <div className=\"prof-favors\">\r\n         {this.props.favors\r\n          .filter(favor => favor.favor_for_user_id === this.props.match.params.user_id)\r\n          .map( (favor, idx)=> {\r\n            if (!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0)) {\r\n              return <div id={idx} className=\"favor-item2\">\r\n                <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                <p className=\"favor-newsfeed\"> {favor.favor_description} </p>\r\n                {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n\r\n                <p className=\"newspage-links\">Favor for:  <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n              </div>\r\n            } else if (favor.favor_for_user_id === this.props.currentUser.id) {\r\n                return <div id={idx} className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p> {favor.favor_description} </p>\r\n                    <p> {this.handleTime(favor.date)} </p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\r\n                    <br></br>\r\n                 \r\n                </div>\r\n            } else if (favor.favor_by_user_id !== null && favor.favor_for_user_id !== this.props.currentUser.id && favor.favor_by_user_id !== this.props.currentUser.id) {\r\n                return <div id={idx} className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p> {favor.favor_description} </p>\r\n                    <p> {this.handleTime(favor.date)} </p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    <p>`This has been accepted by {favor.favor_by_username}.`</p>\r\n                    <br></br>\r\n                 \r\n                </div>\r\n            } else if (favor.favor_by_user_id !== null && favor.favor_for_user_id !== this.props.currentUser.id && favor.favor_by_user_id === this.props.currentUser.id) {\r\n                return <div id={idx} className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p> {favor.favor_description} </p>\r\n                    <p> {this.handleTime(favor.date)} </p>\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Accepted Favor, Click to Undo</button>\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    <br></br>\r\n                   \r\n                </div>\r\n            }\r\n            else {\r\n                return <div id={idx} className=\"favor-item\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p> {favor.favor_description} </p>\r\n                    <p> {this.handleTime(favor.date)} </p>\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    <br></br>\r\n                 \r\n                </div>\r\n            }\r\n        })\r\n        }\r\n    </div>\r\n      )}\r\n      }\r\n  handleTakenFavors() {\r\n    if (this.props.favors) {\r\n      return (\r\n        <div className=\"prof-favors\">\r\n          {this.props.favors\r\n            .filter(favor => favor.favor_by_user_id === this.props.match.params.user_id)\r\n            .map((favor, idx) => {\r\n              if (!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0)) {\r\n                return <div id={idx} className=\"favor-item2\">\r\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                  <p className=\"favor-newsfeed\"> {favor.favor_description} </p>\r\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n\r\n                  <p className=\"newspage-links\">Favor for:  <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                </div>\r\n              } else if (favor.favor_for_user_id === this.props.match.params.user_id) {\r\n                return <div className=\"favor-item\">\r\n                  <p key={idx} className=\"favor-list\">  {favor.favor_description}</p>\r\n                  <p>  {this.handleTime(favor.date)} </p>\r\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>delete</button>\r\n                </div  >\r\n              } else if (favor.favor_by_user_id === this.props.match.params.user_id) {\r\n              return <div className=\"favor-item\">\r\n              <p key={idx} className=\"favor-list\">  {favor.favor_description}</p>\r\n              <p>  {this.handleTime(favor.date)} </p>\r\n              <p>You are currently fulfilling this favor for {favor.favor_for_username}</p>\r\n              <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\r\n              {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n          </div>\r\n            }\r\n              else {\r\n                return <div className=\"favor-item\">\r\n                  <p key={idx} > {favor.favor_description}</p>\r\n                  <p>  {this.handleTime(favor.date)} </p>\r\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\r\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n              }\r\n            }\r\n            )\r\n          }\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n    render() {\r\n      // const this_user_favors = this.listOfRequest();\r\n        // const noFavors = this.handleNoFavors();\r\n        // const hasFavors = this.handleFavors();\r\n        const favors = (this.props.favors ? this.handleFavors() : this.handleNoFavors());\r\n        const taken_favors = (this.props.favors ? this.handleTakenFavors() : this.handleNoTakenFavors());\r\n        \r\n        let this_user = \"\";\r\n\r\n        if (this.props.users) {\r\n          this_user = this.props.users.find(user => user._id === this.props.user_profile_id);\r\n        }\r\n\r\n      \r\n        \r\n        \r\n          return (\r\n            <>\r\n            <ProfileNavContainer />\r\n            <div className=\"profile-view\">\r\n            <div  className=\"banners\">\r\n                     <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --\r\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3>\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" />\r\n                      {/* <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" /> */}\r\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" />\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" />\r\n              </div>\r\n            <div className=\"prof-favors\">\r\n              <h1 className=\"favor-header\">  {this_user.username}  </h1>\r\n              <h3 className=\"prof-fav-hd2\"> These are the good deeds you have done for others  </h3> <br />\r\n                <h2 className=\"prof-fav-hd\"> <FontAwesomeIcon icon={faUser} />  Requested Favors</h2>\r\n                <center> </center>\r\n                <div className=\"favor-lst\">\r\n                      {favors}\r\n                </div>\r\n                  <h2 className=\"prof-fav-hd\"> <FontAwesomeIcon icon={faUser} />  Taken Favors</h2>\r\n                  <div className=\"favor-lst\">\r\n                    {taken_favors}\r\n                  </div>\r\n              <div className=\"prof-favors\">\r\n                {/* {this.handleFavors()}\r\n                {this.handleNoFavors()} */}\r\n              </div>\r\n              </div>\r\n               <div>\r\n                        {/* <img className=\"banner\" src=\"https://i.ibb.co/MSmtpdb/Stay.jpg\" alt=\"covid help\"/> */}\r\n              </div>\r\n              {/* {this.state.favors.map(favor => (\r\n                <FavorItem key={favor.id} title={favor.title} />\r\n              ))} */}\r\n            </div>\r\n            </>\r\n          );\r\n        }\r\n}\r\nexport default ProfileShow;\r\n","/Users/appacademystudent/cfinal/frontend/src/components/newsfeed/newsfeed.jsx",["236","237","238","239","240","241"],"import React from 'react';\r\nimport {NavLink, Link} from 'react-router-dom';\r\nimport './newsfeed.css'\r\nimport ProfileNavContainer from '../profiles/profile_nav_container';\r\nclass NewsFeed extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { myFavors: false, favorRequests: false, userSearch: false, forUser: ''}\r\n        this.userShow = this.userShow.bind(this);\r\n        this.requestShow = this.requestShow.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchFavors();\r\n    }\r\n    requestShow() {\r\n        if (!this.state.favorRequests) {\r\n            this.setState( { favorRequests: true})\r\n        } else {\r\n            this.setState( { favorRequests: false})\r\n        }\r\n    }\r\n      userShow() {\r\n        if ( !this.state.myFavors ) {\r\n            this.setState( { myFavors: true})\r\n        } else {\r\n            this.setState( {myFavors: false })\r\n        }\r\n    }\r\n    updateName() {\r\n        return e=> {\r\n            this.setState( { forUser: e.currentTarget.value })\r\n        }\r\n    }\r\n    handleButtonName(favor) {\r\n        if (favor.favor_status === \"Doing\") {\r\n            return \"This is Taken by \" + favor.favor_by_username\r\n        } else {\r\n            return \"Click to Accept Favor\"\r\n        }\r\n    }\r\n    render() {\r\n        let favor_text = this.state.myFavors? \"View All Favors\" : \"View Your Favors\"\r\n        let request_text = this.state.favorRequests?   \"View All Posts\" : \"View Requests\"\r\n        let favors = (this.props.favors.data) || [];\r\n        favors = ( this.state.myFavors? favors.filter( favor => this.props.currentUser.id === favor.favor_for_user_id) : favors)\r\n        favors = ( this.state.favorRequests? favors.filter( favor => favor.status === \"Doing\") : favors )\r\n        favors = ( this.state.userSearch? favors.filter( favor => favor.favor_for_username === this.state.forUser) : favors)\r\n       \r\n        favors = favors.map( (favor, idx)=> {\r\n            if (!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0)) {\r\n                return <div id={idx}  className=\"favor-item2\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p className=\"favor-newsfeed\"> {favor.favor_description} </p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                   \r\n                    <p className=\"newspage-links\">Favor for:  <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>             \r\n                    </div>\r\n            } else if (favor.favor_for_user_id === this.props.currentUser.id) {\r\n                return <div id={idx}  className=\"favor-item2\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p className=\"favor-newsfeed\"> {favor.favor_description} </p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\r\n                    \r\n                    <p className=\"newspage-links\" >Favor for:  <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                </div>\r\n            } else if (favor.favor_by_user_id !== null && favor.favor_for_user_id !== this.props.currentUser.id && favor.favor_by_user_id !== this.props.currentUser.id) {\r\n                return <div id={idx}  className=\"favor-item2\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p className=\"favor-newsfeed\"> {favor.favor_description} </p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    <p>{this.handleButtonName(favor)}</p>\r\n                   \r\n                    <p className=\"newspage-links\">Favor for:  <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>      \r\n                    </div>\r\n            } else if (favor.favor_by_user_id !== null && favor.favor_for_user_id !== this.props.currentUser.id && favor.favor_by_user_id === this.props.currentUser.id) {\r\n                return <div id={idx}  className=\"favor-item2\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p className=\"favor-newsfeed\"> {favor.favor_description} </p>\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Accepted Favor, Click to Undo</button>\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    <p className=\"newspage-links\" >Favor for:  <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>               \r\n                    </div>\r\n            }\r\n            else {\r\n                return <div id={idx}  className=\"favor-item2\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p className=\"favor-newsfeed\"> {favor.favor_description} </p>\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button>\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}     \r\n                        <p className=\"newspage-links\">Favor for:  <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                               \r\n                    </div>\r\n            }\r\n        })\r\n        return(\r\n            <>\r\n             <ProfileNavContainer />\r\n            <div className=\"newsfeed-whole\">\r\n               \r\n                 <div className=\"news-banners\">\r\n                           <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --      \r\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3>   \r\n\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" />\r\n\r\n                      {/* <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" /> */}\r\n\r\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" />\r\n\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" />\r\n\r\n                </div>\r\n               \r\n                <h1 id=\"newsfeed-title\"> Newsfeed </h1>\r\n                <button className=\"map-button nav-btns-child\" onClick={this.userShow}> {favor_text} </button>\r\n                <button className=\"map-button nav-btns-child-login\" onClick={this.requestShow}> {request_text} </button>\r\n                <input type=\"text\" className=\"input-search  user-search-bar\" placeholder='Search for a User' onChange={this.updateName}></input>\r\n                {favors}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default NewsFeed;\r\n\r\n\r\n     <div className=\"news-banners\">\r\n                           <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --      \r\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3>   \r\n\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" />\r\n\r\n                      {/* <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" /> */}\r\n\r\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" />\r\n\r\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" />\r\n\r\n                </div>\r\n\r\n    // <button onClick={this.userShow} className=\"map-button nav-btns-child\" > {favor_text} </button>\r\n    //                 <button onClick={this.requestShow} className=\"map-button nav-btns-child-login\"> {request_text} </button>\r\n    //                 <input type=\"text\"placeholder=\"Search a Username\" className=\"user-search-bar\" value={this.state.forUser} onChange={this.updateName()}></input>","/Users/appacademystudent/cfinal/frontend/src/utils/favors_api_util.js",[],"/Users/appacademystudent/cfinal/frontend/src/session/navbar_container.js",[],"/Users/appacademystudent/cfinal/frontend/src/components/profiles/profile_nav.jsx",["242","243","244","245","246","247"],"/Users/appacademystudent/cfinal/frontend/src/components/splash/map.jsx",["248","249","250"],"import { Map, GoogleApiWrapper, Marker, InfoWindow, addListener} from 'google-maps-react';\r\nimport MarkerClusterer from '@googlemaps/markerclustererplus';\r\nimport React from 'react';\r\n\r\n\r\nconst mapStyles = {\r\n  width: '80%',\r\n  height: '80%',\r\n  'margin-left' : '10%',\r\n  'margin-right' : '5%',\r\n  'border' : '2px solid black'\r\n}\r\nexport class MapBox extends React.Component {\r\n\r\n\r\n  render() {\r\n\r\n    \r\n    \r\n    let favors = this.props.favors.data || []\r\n   \r\n    if ( this.props.userShow ) {\r\n        favors = favors.filter( favor => this.props.currentUser.id === favor.favor_for_user_id )\r\n    }\r\n    if (this.props.requestShow ) {\r\n      favors = favors.filter( favor => favor.status === true)\r\n    }\r\n    favors = ( this.props.userSearch ? favors.filter( favor =>  {\r\n            const length = this.props.forUser.length;\r\n            if ( favor.favor_for_username) {\r\n            return favor.favor_for_username.slice(0, length)  === this.props.forUser\r\n            } else {\r\n               return false \r\n            }\r\n        }) : favors)\r\n    const test_markers = favors.map( (favor,idx) => {\r\n      const lat = favor.favor_lat \r\n      const lng = favor.favor_lng \r\n      const location = { lat: lat, lng: lng } \r\n      const marker = < Marker position={ location } title={`${favor.favor_title} \r\n    ${favor.favor_description} `|| \"favor\"} key={idx} />\r\n      return marker\r\n      \r\n    })\r\n    \r\n    \r\n    const map =    (<Map \r\n        google = {this.props.google}\r\n        zoom= {8}\r\n        style={mapStyles}\r\n        initialCenter = {{lat: 39.419140, lng: -76.452240}}\r\n        className=\"map-container\"\r\n      > \r\n      {test_markers} \r\n      </Map>)\r\n   \r\n    return (\r\n      <div>\r\n       {map}\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyAZpaEFWsQyJOahKBVfBZ1g3mpemxo1VQo'\r\n})(MapBox);\r\n","/Users/appacademystudent/cfinal/frontend/src/session/navbar.jsx",["251"],"// src/components/nav/navbar.js\n\nimport React from 'react';\nimport { Link } from 'react-router-dom'\nimport './navbar.css'\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.logoutUser = this.logoutUser.bind(this);\n    this.getLinks = this.getLinks.bind(this);\n  }\n\n  logoutUser(e) {\n      e.preventDefault();\n      this.props.logout();\n  }\n\n  // Selectively render links dependent on whether the user is logged in\n  getLinks() {\n      if (this.props.loggedIn) {\n        return (\n            <div className=\"nav-btns\">\n                <button className=\"nav-btns-child\"><Link to={'/profile'}>View Profile</Link></button>\n                <button className=\"nav-btns-child-login\" onClick={this.logoutUser}>Logout</button>\n            </div>\n        );\n      } else {\n        return (\n            <div className=\"nav-btns\">\n                {/* <Link to={'/signup'}>Signup</Link>\n                <Link to={'/login'}>Login</Link> */}\n                {this.props.sign}\n                   \n                   <br/>\n\n                {this.props.log} \n                 \n            </div>\n        );\n      }\n  }\n\n  render() {\n      const logAbout = ( \n        <div>\n         <button id = \"news\" className=\"nav-btns-child login-links\"><Link to={'/newsfeed'}>Newsfeed</Link></button>\n         <button id = \"abt\" className=\"nav-btns-child-login login-links\"><Link to={'/about'}>About</Link></button> \n         </div>\n  )\n      return (\n        <div className=\"nav-bar-top\">\n          <div className=\"nav-bar-left\">\n            <img className=\"logo-header\"  src=\"https://i.ibb.co/5MynHJQ/Clogo3.png\"/>\n            { logAbout }\n          </div>\n            { this.getLinks() }\n        </div>\n      );\n  }\n}\n\nexport default NavBar;","/Users/appacademystudent/cfinal/frontend/src/components/profiles/profilenav2.jsx",["252","253","254","255","256"],{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":11,"column":8,"nodeType":"263","messageId":"264","endLine":11,"endColumn":13},{"ruleId":"261","severity":1,"message":"265","line":1,"column":10,"nodeType":"263","messageId":"264","endLine":1,"endColumn":27},{"ruleId":"261","severity":1,"message":"265","line":1,"column":10,"nodeType":"263","messageId":"264","endLine":1,"endColumn":27},{"ruleId":"266","severity":1,"message":"267","line":11,"column":1,"nodeType":"268","endLine":33,"endColumn":2},{"ruleId":"261","severity":1,"message":"269","line":2,"column":8,"nodeType":"263","messageId":"264","endLine":2,"endColumn":13},{"ruleId":"261","severity":1,"message":"270","line":2,"column":8,"nodeType":"263","messageId":"264","endLine":2,"endColumn":21},{"ruleId":"261","severity":1,"message":"271","line":3,"column":10,"nodeType":"263","messageId":"264","endLine":3,"endColumn":25},{"ruleId":"261","severity":1,"message":"272","line":4,"column":10,"nodeType":"263","messageId":"264","endLine":4,"endColumn":22},{"ruleId":"261","severity":1,"message":"273","line":5,"column":10,"nodeType":"263","messageId":"264","endLine":5,"endColumn":22},{"ruleId":"261","severity":1,"message":"274","line":6,"column":10,"nodeType":"263","messageId":"264","endLine":6,"endColumn":17},{"ruleId":"275","severity":1,"message":"276","line":92,"column":10,"nodeType":"277","messageId":"278","endLine":96,"endColumn":43},{"ruleId":"279","severity":1,"message":"280","line":22,"column":5,"nodeType":"281","endLine":22,"endColumn":75},{"ruleId":"279","severity":1,"message":"280","line":23,"column":5,"nodeType":"281","endLine":23,"endColumn":76},{"ruleId":"279","severity":1,"message":"280","line":24,"column":5,"nodeType":"281","endLine":24,"endColumn":75},{"ruleId":"279","severity":1,"message":"280","line":25,"column":5,"nodeType":"281","endLine":25,"endColumn":75},{"ruleId":"279","severity":1,"message":"280","line":26,"column":5,"nodeType":"281","endLine":26,"endColumn":75},{"ruleId":"279","severity":1,"message":"280","line":27,"column":5,"nodeType":"281","endLine":27,"endColumn":75},{"ruleId":"261","severity":1,"message":"282","line":5,"column":16,"nodeType":"263","messageId":"264","endLine":5,"endColumn":26},{"ruleId":"279","severity":1,"message":"280","line":77,"column":21,"nodeType":"281","endLine":77,"endColumn":91},{"ruleId":"261","severity":1,"message":"274","line":3,"column":9,"nodeType":"263","messageId":"264","endLine":3,"endColumn":16},{"ruleId":"261","severity":1,"message":"283","line":3,"column":18,"nodeType":"263","messageId":"264","endLine":3,"endColumn":22},{"ruleId":"261","severity":1,"message":"284","line":6,"column":8,"nodeType":"263","messageId":"264","endLine":6,"endColumn":21},{"ruleId":"285","severity":1,"message":"286","line":20,"column":7,"nodeType":"287","endLine":20,"endColumn":11},{"ruleId":"279","severity":1,"message":"280","line":235,"column":17,"nodeType":"281","endLine":235,"endColumn":87},{"ruleId":"261","severity":1,"message":"282","line":6,"column":16,"nodeType":"263","messageId":"264","endLine":6,"endColumn":26},{"ruleId":"261","severity":1,"message":"288","line":58,"column":9,"nodeType":"263","messageId":"264","endLine":58,"endColumn":18},{"ruleId":"279","severity":1,"message":"280","line":108,"column":22,"nodeType":"281","endLine":108,"endColumn":92},{"ruleId":"261","severity":1,"message":"283","line":6,"column":9,"nodeType":"263","messageId":"264","endLine":6,"endColumn":13},{"ruleId":"261","severity":1,"message":"289","line":7,"column":8,"nodeType":"263","messageId":"264","endLine":7,"endColumn":22},{"ruleId":"261","severity":1,"message":"290","line":2,"column":15,"nodeType":"263","messageId":"264","endLine":2,"endColumn":31},{"ruleId":"261","severity":1,"message":"291","line":2,"column":33,"nodeType":"263","messageId":"264","endLine":2,"endColumn":39},{"ruleId":"261","severity":1,"message":"292","line":2,"column":41,"nodeType":"263","messageId":"264","endLine":2,"endColumn":51},{"ruleId":"261","severity":1,"message":"293","line":2,"column":53,"nodeType":"263","messageId":"264","endLine":2,"endColumn":64},{"ruleId":"261","severity":1,"message":"294","line":27,"column":15,"nodeType":"263","messageId":"264","endLine":27,"endColumn":25},{"ruleId":"279","severity":1,"message":"280","line":68,"column":32,"nodeType":"281","endLine":68,"endColumn":102},{"ruleId":"261","severity":1,"message":"284","line":7,"column":8,"nodeType":"263","messageId":"264","endLine":7,"endColumn":21},{"ruleId":"285","severity":1,"message":"286","line":21,"column":7,"nodeType":"287","endLine":21,"endColumn":11},{"ruleId":"279","severity":1,"message":"280","line":219,"column":23,"nodeType":"281","endLine":219,"endColumn":102},{"ruleId":"279","severity":1,"message":"280","line":221,"column":22,"nodeType":"281","endLine":221,"endColumn":101},{"ruleId":"279","severity":1,"message":"280","line":222,"column":23,"nodeType":"281","endLine":222,"endColumn":103},{"ruleId":"279","severity":1,"message":"280","line":107,"column":23,"nodeType":"281","endLine":107,"endColumn":102},{"ruleId":"279","severity":1,"message":"280","line":111,"column":22,"nodeType":"281","endLine":111,"endColumn":101},{"ruleId":"279","severity":1,"message":"280","line":113,"column":23,"nodeType":"281","endLine":113,"endColumn":103},{"ruleId":"279","severity":1,"message":"280","line":134,"column":23,"nodeType":"281","endLine":134,"endColumn":102},{"ruleId":"279","severity":1,"message":"280","line":138,"column":22,"nodeType":"281","endLine":138,"endColumn":101},{"ruleId":"279","severity":1,"message":"280","line":140,"column":23,"nodeType":"281","endLine":140,"endColumn":103},{"ruleId":"261","severity":1,"message":"295","line":3,"column":10,"nodeType":"263","messageId":"264","endLine":3,"endColumn":17},{"ruleId":"279","severity":1,"message":"280","line":90,"column":15,"nodeType":"281","endLine":90,"endColumn":87},{"ruleId":"279","severity":1,"message":"280","line":193,"column":9,"nodeType":"281","endLine":193,"endColumn":82},{"ruleId":"279","severity":1,"message":"280","line":212,"column":35,"nodeType":"281","endLine":212,"endColumn":107},{"ruleId":"279","severity":1,"message":"280","line":245,"column":22,"nodeType":"281","endLine":245,"endColumn":94},{"ruleId":"296","severity":1,"message":"297","line":264,"column":39,"nodeType":"298","endLine":264,"endColumn":64},{"ruleId":"261","severity":1,"message":"292","line":1,"column":41,"nodeType":"263","messageId":"264","endLine":1,"endColumn":51},{"ruleId":"261","severity":1,"message":"293","line":1,"column":53,"nodeType":"263","messageId":"264","endLine":1,"endColumn":64},{"ruleId":"261","severity":1,"message":"299","line":2,"column":8,"nodeType":"263","messageId":"264","endLine":2,"endColumn":23},{"ruleId":"279","severity":1,"message":"280","line":54,"column":13,"nodeType":"281","endLine":54,"endColumn":86},{"ruleId":"261","severity":1,"message":"295","line":3,"column":10,"nodeType":"263","messageId":"264","endLine":3,"endColumn":17},{"ruleId":"261","severity":1,"message":"300","line":5,"column":18,"nodeType":"263","messageId":"264","endLine":5,"endColumn":26},{"ruleId":"261","severity":1,"message":"301","line":5,"column":36,"nodeType":"263","messageId":"264","endLine":5,"endColumn":42},{"ruleId":"261","severity":1,"message":"282","line":8,"column":16,"nodeType":"263","messageId":"264","endLine":8,"endColumn":26},{"ruleId":"279","severity":1,"message":"280","line":211,"column":9,"nodeType":"281","endLine":211,"endColumn":82},"no-native-reassign",["302"],"no-negated-in-lhs",["303"],"no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","'ReactReduxContext' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'React' is defined but never used.","'HospitalsNear' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCodeBranch' is defined but never used.","'faLinkedinIn' is defined but never used.","'NavLink' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InlineIcon' is defined but never used.","'Link' is defined but never used.","'FavorsReducer' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","'loginUser' is assigned a value but never used.","'AboutContainer' is defined but never used.","'GoogleApiWrapper' is defined but never used.","'Marker' is defined but never used.","'InfoWindow' is defined but never used.","'addListener' is defined but never used.","'apiRequest' is assigned a value but never used.","'library' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'MarkerClusterer' is defined but never used.","'faCircle' is defined but never used.","'faBell' is defined but never used.","no-global-assign","no-unsafe-negation"]