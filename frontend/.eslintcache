[{"/mnt/c/New App Academy/MERN_FS/frontend/src/index.js":"1","/mnt/c/New App Academy/MERN_FS/frontend/src/root.js":"2","/mnt/c/New App Academy/MERN_FS/frontend/src/store/store.js":"3","/mnt/c/New App Academy/MERN_FS/frontend/src/actions/session_actions.js":"4","/mnt/c/New App Academy/MERN_FS/frontend/src/utils/session_api_util.js":"5","/mnt/c/New App Academy/MERN_FS/frontend/src/start.js":"6","/mnt/c/New App Academy/MERN_FS/frontend/src/actions/modal_actions.js":"7","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/root_reducer.js":"8","/mnt/c/New App Academy/MERN_FS/frontend/src/utils/route_util.js":"9","/mnt/c/New App Academy/MERN_FS/frontend/src/session/login_form_container.js":"10","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/session_api_reducer.js":"11","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/entities_reducer.js":"12","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/errors_reducer.js":"13","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/ui_reducer.js":"14","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile_container.js":"15","/mnt/c/New App Academy/MERN_FS/frontend/src/modal.jsx":"16","/mnt/c/New App Academy/MERN_FS/frontend/src/session/signup_form_container.jsx":"17","/mnt/c/New App Academy/MERN_FS/frontend/src/components/about/about_container.jsx":"18","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/splash_container.jsx":"19","/mnt/c/New App Academy/MERN_FS/frontend/src/components/create_favor/favor_create_container.jsx":"20","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/whole_map_container.jsx":"21","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profile_show/profile_show_container.jsx":"22","/mnt/c/New App Academy/MERN_FS/frontend/src/components/newsfeed/newsfeed_container.jsx":"23","/mnt/c/New App Academy/MERN_FS/frontend/src/components/covid_help/covid_help.jsx":"24","/mnt/c/New App Academy/MERN_FS/frontend/src/components/about/about.jsx":"25","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/favors_reducer.js":"26","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/users_reducer.js":"27","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/modals_reducer.js":"28","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/session_errors_reducer.js":"29","/mnt/c/New App Academy/MERN_FS/frontend/src/actions/favor_actions.js":"30","/mnt/c/New App Academy/MERN_FS/frontend/src/session/login_form.jsx":"31","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile_nav_container.js":"32","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/profile_nav_container.js":"33","/mnt/c/New App Academy/MERN_FS/frontend/src/session/signup_form.jsx":"34","/mnt/c/New App Academy/MERN_FS/frontend/src/components/create_favor/favor_create.jsx":"35","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/whole_map.jsx":"36","/mnt/c/New App Academy/MERN_FS/frontend/src/components/about/hospitals_near.jsx":"37","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/splash.jsx":"38","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile.jsx":"39","/mnt/c/New App Academy/MERN_FS/frontend/src/components/newsfeed/newsfeed.jsx":"40","/mnt/c/New App Academy/MERN_FS/frontend/src/utils/favors_api_util.js":"41","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profile_show/profile_show.jsx":"42","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/profilenav2.jsx":"43","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profilenav2.jsx":"44","/mnt/c/New App Academy/MERN_FS/frontend/src/session/navbar_container.js":"45","/mnt/c/New App Academy/MERN_FS/frontend/src/session/navbar_no_logo_container.js":"46","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/map.jsx":"47","/mnt/c/New App Academy/MERN_FS/frontend/src/session/navbar.jsx":"48","/mnt/c/New App Academy/MERN_FS/frontend/src/session/navbar_no_logo.jsx":"49","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/new_splash_container.jsx":"50","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/new_splash.jsx":"51"},{"size":1062,"mtime":1611082932165,"results":"52","hashOfConfig":"53"},{"size":294,"mtime":1611082932233,"results":"54","hashOfConfig":"53"},{"size":474,"mtime":1611243742568,"results":"55","hashOfConfig":"53"},{"size":3306,"mtime":1611104426264,"results":"56","hashOfConfig":"53"},{"size":611,"mtime":1611082932331,"results":"57","hashOfConfig":"53"},{"size":1849,"mtime":1611157648567,"results":"58","hashOfConfig":"53"},{"size":265,"mtime":1611082931853,"results":"59","hashOfConfig":"53"},{"size":462,"mtime":1611082932201,"results":"60","hashOfConfig":"53"},{"size":801,"mtime":1611082932330,"results":"61","hashOfConfig":"53"},{"size":913,"mtime":1611082932255,"results":"62","hashOfConfig":"53"},{"size":677,"mtime":1611586287615,"results":"63","hashOfConfig":"53"},{"size":315,"mtime":1611082932186,"results":"64","hashOfConfig":"53"},{"size":220,"mtime":1611082932187,"results":"65","hashOfConfig":"53"},{"size":187,"mtime":1611082932221,"results":"66","hashOfConfig":"53"},{"size":993,"mtime":1611082932030,"results":"67","hashOfConfig":"53"},{"size":1171,"mtime":1611082932178,"results":"68","hashOfConfig":"53"},{"size":966,"mtime":1611082932305,"results":"69","hashOfConfig":"53"},{"size":207,"mtime":1611082931873,"results":"70","hashOfConfig":"53"},{"size":1222,"mtime":1613501103609,"results":"71","hashOfConfig":"53"},{"size":692,"mtime":1611082931912,"results":"72","hashOfConfig":"53"},{"size":496,"mtime":1611157493636,"results":"73","hashOfConfig":"53"},{"size":1243,"mtime":1611082931974,"results":"74","hashOfConfig":"53"},{"size":976,"mtime":1611082931950,"results":"75","hashOfConfig":"53"},{"size":800,"mtime":1611082931902,"results":"76","hashOfConfig":"53"},{"size":3773,"mtime":1612984018483,"results":"77","hashOfConfig":"53"},{"size":1650,"mtime":1611082932193,"results":"78","hashOfConfig":"53"},{"size":622,"mtime":1611586298173,"results":"79","hashOfConfig":"53"},{"size":348,"mtime":1611082932200,"results":"80","hashOfConfig":"53"},{"size":512,"mtime":1611082932220,"results":"81","hashOfConfig":"53"},{"size":1763,"mtime":1611082931845,"results":"82","hashOfConfig":"53"},{"size":2803,"mtime":1613504174963,"results":"83","hashOfConfig":"53"},{"size":959,"mtime":1611082932040,"results":"84","hashOfConfig":"53"},{"size":1450,"mtime":1611167685720,"results":"85","hashOfConfig":"53"},{"size":3860,"mtime":1613503699113,"results":"86","hashOfConfig":"53"},{"size":3921,"mtime":1611082941404,"results":"87","hashOfConfig":"53"},{"size":2780,"mtime":1612984018561,"results":"88","hashOfConfig":"53"},{"size":1439,"mtime":1611167410881,"results":"89","hashOfConfig":"53"},{"size":7502,"mtime":1613501168454,"results":"90","hashOfConfig":"53"},{"size":21612,"mtime":1612984018516,"results":"91","hashOfConfig":"53"},{"size":12272,"mtime":1612984018493,"results":"92","hashOfConfig":"53"},{"size":524,"mtime":1611082932324,"results":"93","hashOfConfig":"53"},{"size":17906,"mtime":1613500936771,"results":"94","hashOfConfig":"53"},{"size":3670,"mtime":1612984018545,"results":"95","hashOfConfig":"53"},{"size":6716,"mtime":1611082941459,"results":"96","hashOfConfig":"53"},{"size":869,"mtime":1611082932274,"results":"97","hashOfConfig":"53"},{"size":879,"mtime":1611082932288,"results":"98","hashOfConfig":"53"},{"size":1859,"mtime":1611082932095,"results":"99","hashOfConfig":"53"},{"size":1811,"mtime":1611167033049,"results":"100","hashOfConfig":"53"},{"size":2091,"mtime":1611082932282,"results":"101","hashOfConfig":"53"},{"size":1106,"mtime":1612984018538,"results":"102","hashOfConfig":"53"},{"size":1684,"mtime":1612984018535,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"103fcwi",{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"106"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"106"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"106"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"106"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"106"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"106"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"106"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"106"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"106"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"106"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"106"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"106"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"106"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"106"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"106"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"106"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"106"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"106"},"/mnt/c/New App Academy/MERN_FS/frontend/src/index.js",[],["226","227"],"/mnt/c/New App Academy/MERN_FS/frontend/src/root.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/store/store.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/actions/session_actions.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/utils/session_api_util.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/start.js",["228"],"import React from 'react';\nimport { AuthRoute, ProtectedRoute } from './utils/route_util';\nimport { Switch } from 'react-router-dom';\nimport LoginFormContainer from './session/login_form_container';\nimport SignupFormContainer from './session/signup_form_container';\nimport ProfileContainer from './components/profiles/profile_container';\nimport Modal from './modal';\nimport SplashContainer from './components/splash/splash_container';\nimport { Route } from 'react-router-dom';\nimport FavorCreateContainer from './components/create_favor/favor_create_container';\nimport About from './components/about/about'\nimport AboutContainer from './components/about/about_container';\nimport CovidHelp from './components/covid_help/covid_help';\nimport NewsFeedContainer from './components/newsfeed/newsfeed_container';\nimport ProfileShowContainer from './components/profile_show/profile_show_container';\nimport WholeMapContainer from './components/splash/whole_map_container';\n\nconst App = () => (\n  <div>\n     <Modal />\n    \n    <Switch>\n      <Route exact path=\"/\" component={SplashContainer} /> \n      <Route exact path=\"/about\" component={AboutContainer} />\n      <Route exact path=\"/map\" component={WholeMapContainer} />\n      <Route exact path=\"/newsfeed\" component={NewsFeedContainer} />\n      <ProtectedRoute exact path='/add' component = {FavorCreateContainer} />\n      <AuthRoute exact path=\"/login\" component={LoginFormContainer} />\n      <AuthRoute exact path=\"/signup\" component={SignupFormContainer} />\n      <Route exact path=\"/covid\"  component={CovidHelp} />\n      <ProtectedRoute exact path=\"/:user_id\" component={ProfileContainer} /> \n      <ProtectedRoute exact path=\"profile\" component={ProfileContainer} /> \n      <Route exact path=\"/user/:user_id\" component={ProfileShowContainer} />\n      \n    </Switch>\n  </div>\n);\n\nexport default App;\n\n","/mnt/c/New App Academy/MERN_FS/frontend/src/actions/modal_actions.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/root_reducer.js",["229"],"import { ReactReduxContext } from \"react-redux\";\nimport {combineReducers} from 'redux';\nimport entitiesReducer from \"./entities_reducer\";\nimport sessionReducer from './session_api_reducer';\nimport errorsReducer from './errors_reducer';\n\nimport uiReducer from \"./ui_reducer\";\n\n\nconst RootReducer = combineReducers({\n    entities: entitiesReducer,\n    session: sessionReducer,\n        ui: uiReducer,\n    errors: errorsReducer\n\n\n\n})\n\n\n\n\n\nexport default RootReducer;","/mnt/c/New App Academy/MERN_FS/frontend/src/utils/route_util.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/session/login_form_container.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/session_api_reducer.js",["230"],"\nimport { RECEIVE_CURRENT_USER, \n         RECEIVE_USER_LOGOUT, \n         RECEIVE_USER_SIGN_IN } from '../actions/session_actions';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case RECEIVE_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !!action.currentUser,\n        user: action.currentUser\n      };\n    case RECEIVE_USER_LOGOUT:\n      return {\n        isAuthenticated: false,\n        user: undefined\n      };\n    case RECEIVE_USER_SIGN_IN:\n      return {\n        ...state,\n        isSignedIn: true\n      }\n    default:\n      return state;\n  }\n}\n\n","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/entities_reducer.js",["231"],"import { ReactReduxContext } from \"react-redux\";\nimport { combineReducers } from 'redux';\nimport usersReducer from './users_reducer';\nimport favorsReducer from './favors_reducer';\n\n\nconst entitiesReducer = combineReducers({\n    users: usersReducer,\n    favors: favorsReducer\n\n})\n\n\n\n\n\nexport default entitiesReducer;","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/errors_reducer.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/ui_reducer.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile_container.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/modal.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/session/signup_form_container.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/about/about_container.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/splash_container.jsx",["232"],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/create_favor/favor_create_container.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/whole_map_container.jsx",["233"],"import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport { fetchFavors } from '../../actions/favor_actions';\r\nimport WholeMap from './whole_map';\r\nconst mSTP = state => {\r\n    return {\r\n        favors: state.entities.favors,\r\n        currentUser: state.session.user,\r\n        loggedIn: state.session.isAuthenticated\r\n    }\r\n}\r\n\r\nconst mDTP = dispatch => {\r\n    return {\r\n    fetchFavors: () => dispatch(fetchFavors())\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mSTP, mDTP)(WholeMap);","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profile_show/profile_show_container.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/newsfeed/newsfeed_container.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/covid_help/covid_help.jsx",["234","235","236","237","238","239"],"import React from 'react';\nimport ProfileNavContainer from '../profiles/profile_nav_container';\n\nimport '../profiles/profile.css';\n\n\nclass CovidHelp  extends React.Component {\n\n\n\n\n\n\nrender() {\n\nreturn (\n\n<>\n<ProfileNavContainer />\n<div className=\"banners\">\n\n    <img className=\"support-banner\" src=\"https://i.ibb.co/SQLXj3y/1.png\"/>\n    <img className=\"support-banner\" src=\" https://i.ibb.co/fDdmsYj/2.png\"/>\n    <img className=\"support-banner\" src=\"https://i.ibb.co/r4g1jGw/3.png\"/>\n    <img className=\"support-banner\" src=\"https://i.ibb.co/fk1Rkdd/4.png\"/>\n    <img className=\"support-banner\" src=\"https://i.ibb.co/gFCy8ny/5.png\"/>\n    <img className=\"support-banner\" src=\"https://i.ibb.co/ZxttcGY/6.png\"/>\n                          \n</div>\n</>\n\n\n\n\n\n)\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n}\n\n\nexport default CovidHelp;\n","/mnt/c/New App Academy/MERN_FS/frontend/src/components/about/about.jsx",["240","241","242","243","244","245","246"],"import React from 'react';\r\nimport HospitalsNear from './hospitals_near'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCodeBranch} from '@fortawesome/free-solid-svg-icons'\r\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons'\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './about.css'\r\nimport NavBarContainer from './../splash/profile_nav_container';\r\nimport gitlogo from './Git-Icon-1788C.png'\r\nimport linklogo from './LI-In-Bug.png'\r\n\r\nclass About extends React.Component {\r\n\r\n    render() {\r\n        const git = <img alt=\"icon\" src={gitlogo} height={40} width={40}></img>;\r\n        const link = <img alt=\"icon\" src={linklogo} width={40} height = {40} ></img>\r\n        return(\r\n            <div>\r\n                <NavBarContainer />\r\n           \r\n            <div className=\"about\">\r\n                    <div className=\"about-header\">\r\n                        <h1> About Us </h1>\r\n                        <h2> View more of our projects or contact us!</h2>\r\n                    </div>\r\n                    <div className=\"about-people\">\r\n                        <div className=\"person-div\">\r\n                            <h2> Divyam Satyarthi </h2>\r\n                            <div className=\"links\">\r\n                                <div className=\"link-text-image\">\r\n                                    <a href=\"https://github.com/divyams1\">\r\n                                        {git}\r\n                                        <p> Github </p>\r\n                                    </a>\r\n                                </div>\r\n                                <div className=\"link-text-image\">\r\n                                    <a href=\"https://www.linkedin.com/in/divyam-satyarthi-b6628513b/\">\r\n                                    {link}\r\n                                    <p> LinkedIn</p>\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                            <h4> Email: divyamsat@gmail.com </h4>\r\n                            <h4> Phone: 443-838-7815</h4>\r\n                        </div>\r\n\r\n                        \r\n\r\n                        <div className=\"person-div\">\r\n                            <h2> Anthony Collichio </h2>\r\n                            <div className=\"links\">\r\n                                    <div className=\"link-text-image\">\r\n                                <a  href=\"https://github.com/collich55\">\r\n                                            {git}\r\n                                            <p> Github</p>\r\n                                            </a>\r\n                                    </div>\r\n                                    <div className=\"link-text-image\">\r\n                                <a  href=\"https://www.linkedin.com/in/anthony-collichio-451b11103/\"> \r\n                                            {link}\r\n                                            <p> LinkedIn </p>\r\n                                        </a>\r\n                                    </div>\r\n                            </div>\r\n                            <h4> Email: collich55@gmail.com  </h4>\r\n                            <h4> Phone: 585-794-3850  </h4>\r\n                        </div>\r\n                    </div>\r\n                    <Link id=\"back-link\" to={'/'}>Back</Link>\r\n                </div>\r\n\r\n                 </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;\r\n\r\n         {/* <div className=\"link-text-image\">\r\n\r\n                                    <img className=\"link-image\" src=\"https://images.spot.im/v1/production/xfghicjlsq78tkpf9xxe\" />\r\n                                    <p> Angel List </p>\r\n                                </div> */}","/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/favors_reducer.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/users_reducer.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/modals_reducer.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/reducers/session_errors_reducer.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/actions/favor_actions.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/session/login_form.jsx",["247"],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile_nav_container.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/profile_nav_container.js",["248","249","250","251","252","253","254","255","256"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { logout } from '../../actions/session_actions';\nimport { openModal, closeModal } from '../../actions/modal_actions';\nimport SplashNav2 from './profilenav2';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faCircle, faPlus, faBell, faNewspaper, faUser, faBars, faSignOutAlt, faUserPlus, faSignInAlt} from '@fortawesome/free-solid-svg-icons';\nimport {fetchFavors} from '../../actions/favor_actions';\n\nconst mapStateToProps = (state) => ({\n    modal: state.ui.modal,\n    currentUser: state.session.user,\n    favors: state.entities.favors.data,\n    currentUser: state.session.user,\n    loggedIn: state.session.isAuthenticated\n\n\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    logout: () => dispatch(logout()),\n    openModal: modal => dispatch(openModal(modal)),\n    closeModal: () => dispatch(closeModal()),\n    fetchFavors: () => dispatch(fetchFavors()),\n    sign:  (<i className=\"fas fa-user-plus icon-splash icon-fill\" onClick={() => dispatch(openModal('signup'))}>  <FontAwesomeIcon className=\"fai\" icon={faUserPlus} /> </i> )\n    ,\n     log:\n        (<i className=\"fas fa-sign-in-alt icon-splash icon-fill\"  onClick={() => dispatch(openModal('login'))}> <FontAwesomeIcon  icon={faSignInAlt} /> </i> )\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SplashNav2));","/mnt/c/New App Academy/MERN_FS/frontend/src/session/signup_form.jsx",["257","258"],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/create_favor/favor_create.jsx",["259"],"import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes} from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass FavorCreate extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            favor_title: '',\r\n            favor_description: '',\r\n            favor_lat: 0,\r\n            favor_lng: 0,\r\n            favor_status: '',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleDropInput = this.handleDropInput.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    navigator.geolocation.getCurrentPosition( position => {\r\n        this.setState( { favor_lat: position.coords.latitude })\r\n        this.setState( { favor_lng: position.coords.longitude})\r\n    })\r\n  }\r\n\r\n\r\n   componentWillReceiveProps(newState) {\r\n      this.setState({  favor_title: newState.favor_title,\r\n            favor_description: newState.favor_description,\r\n            favor_lat: newState.favor_lat,\r\n            favor_lng: newState.favor_lng,\r\n            favor_status: newState.favor_status, });\r\n    }\r\n   \r\n    handleInput(field) {\r\n        return e=> {\r\n            this.setState( { [field]: e.currentTarget.value })\r\n        }\r\n    }\r\n\r\n    handleDropInput(e) {\r\n         \r\n     this.setState({ \"favor_status\": e.currentTarget.value })\r\n     \r\n    }\r\n\r\n    handleSubmit(e) {\r\n\r\n        \r\n        e.preventDefault();\r\n        const favor = Object.assign({}, this.state)\r\n       \r\n        this.props.createFavor(favor).then(this.props.closeModal()).then(window.location.reload());\r\n        // this.props.history.push('/')\r\n\r\n        this.props.fetchFavors();\r\n        \r\n    }\r\n\r\n    render() {\r\n        const display = (\r\n            <div className=\"favor-create-form\">\r\n                \r\n                <form id={\"favor-form\"}>\r\n                    <center><h1 className=\"form-head\" id={\"favor-form-title\"}> Create a Favor </h1></center>\r\n\r\n                    <br/>\r\n                       <center><img className=\"logo-img\"  src=\"https://i.ibb.co/5MynHJQ/Clogo3.png\"/></center>\r\n\r\n                     {/* <center><img className=\"logo-img\"  src=\"https://i.ibb.co/1mHJgBD/C.png\"/></center> */}\r\n                     <div onClick={this.props.closeModal} className=\"close-x\"><FontAwesomeIcon   icon={faTimes} className='fstylec'/></div>\r\n\r\n                    <div className=\"favor-form-div\">\r\n                    <h2 className=\"form-head\"> Title: </h2>\r\n                    <label>\r\n                        <input id={\"input-form\"} type='text' placeholder=\"Title\" value={this.state.favor_title} onChange={this.handleInput('favor_title')} />\r\n                    </label>\r\n                    {/* <h2 className=\"form-head\"> Status:</h2>\r\n                    <select value={this.state.favor_status} onChange={this.handleDropInput} >\r\n                        <option value=\"Request\" >Request</option>\r\n                        <option value= \"Done\" >Done</option> \r\n                          \r\n                    </select> */}\r\n                    {/* <label>\r\n                        <input id={\"input-form\"} type='text' placeholder=\"Request\"  />\r\n                    </label> */}\r\n                    <h2 className=\"form-head\"> Description: </h2>\r\n                    <label>\r\n                        <textarea id={\"text-form\"} type='text' placeholder=\"Description\" value={this.state.favor_description} onChange={this.handleInput('favor_description')} />\r\n                    </label>\r\n                    <br/>\r\n                    <button id={\"favor-form-button\"}  disabled={!this.state.favor_title} onClick={this.handleSubmit}>Create Favor</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    return( \r\n        <div>\r\n            {display}\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default FavorCreate;","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/whole_map.jsx",["260"],"import React from 'react';\r\nimport MapContainer from './map';\r\nimport NavBarContainer from './../splash/profile_nav_container';\r\n\r\nclass WholeMap extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { userShow:  false , requestShow: false, userSearch: false, forUser: '' };\r\n        this.requestShow = this.requestShow.bind(this);\r\n        this.userShow = this.userShow.bind(this);\r\n        this.updateName = this.updateName.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchFavors();\r\n    }\r\n    requestShow() {\r\n        if (!this.state.favorRequests) {\r\n            this.setState( { favorRequests: true})\r\n        } else {\r\n            this.setState( { favorRequests: false})\r\n        }\r\n    }\r\n    userShow() {\r\n        if ( !this.state.myFavors ) {\r\n            this.setState( { myFavors: true})\r\n        } else {\r\n            this.setState( {myFavors: false })\r\n        }\r\n    }\r\n    updateName() {\r\n        \r\n        return e=> {\r\n            this.setState( { 'forUser' : e.currentTarget.value })\r\n            if ( this.state.forUser !== '') {\r\n                this.setState( { 'userSearch' : true })\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let favor_text = this.state.myFavors? \"View All Favors\" : \"View Your Favors\"\r\n        let request_text = this.state.favorRequests?   \"View All Posts\" : \"View Unaccepted Favors\"\r\n        return(\r\n            \r\n        <div>\r\n            <NavBarContainer />\r\n            <div className=\"map-head\">\r\n                <div className='map-text'>\r\n                    <h1> Favor Map </h1>\r\n                    <p> View Favors and Requests Others have made across the world! </p>\r\n                </div>\r\n                <div className=\"map-search\">\r\n                    <button className=\"news-btn\" onClick={this.userShow}> {favor_text} </button>\r\n                    <button className=\"news-btn\" onClick={this.requestShow}> {request_text} </button>\r\n                    <input type=\"text\" placeholder=\"Search a Username\" className=\"news-input-search\" value={this.state.forUser} onChange={this.updateName()}></input> \r\n                </div> \r\n            </div>\r\n            <div>\r\n                <div className=\"map-container-div\">\r\n                     <div className=\"map-div\">\r\n                         <MapContainer className=\"map-container\" fetchFavors={this.props.fetchFavors} favors={this.props.favors} userShow={this.state.userShow} requestShow={this.state.requestShow} currentUser={this.props.currentUser} userSearch={this.state.userSearch} forUser={this.state.forUser}/>\r\n                     </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default WholeMap;","/mnt/c/New App Academy/MERN_FS/frontend/src/components/about/hospitals_near.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/splash.jsx",["261","262","263","264","265","266","267","268","269","270"],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profile.jsx",["271","272","273","274","275","276","277"],"import React from 'react';\nimport ProfileNavContainer from './profile_nav_container';\nimport {NavLink, Link} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faLifeRing, faHandsHelping} from '@fortawesome/free-solid-svg-icons';\nimport FavorsReducer from '../../reducers/favors_reducer';\nimport NavBarContainer from './../splash/profile_nav_container';\n// import NavBarContainer from './profile_nav_container';\n\nimport NavBarNoLogoContainer from '../../session/navbar_no_logo_container';\n\n\n\n// import FavorItem from '../favors/favor_item';\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = this.props.favors;\n        this.handleFavors = this.handleFavors.bind(this);\n        this.handleNoFavors = this.handleNoFavors.bind(this);\n        this.renderForm = this.renderForm.bind(this);\n        this.handleTime = this.handleTime.bind(this);\n    }\n    componentDidMount() {\n      console.log(this.props.currentUser.id)\n      this.props.fetchFavors();\n      this.state = this.props.favors;\n      this.props.closeModal();\n      // this.props.fetchFavorsForUser({ user_id: this.props.user_profile_id });\n    }\n    componentWillReceiveProps(newState) {\n      this.setState({ favors: newState.favors });\n    }\n\n\n    componentDidUpdate(prevProps) {\n\n \n   \n\n\n        if (this.props.favors !== prevProps.favors) {\n\n        \n\n            const newFavors = this.props.favors;\n            this.setState({ favors: newFavors })\n        }\n\n\n}\n\n\n    componentWillUnmount() {\n        this.props.closeModal();\n    }\n    // listOfRequest() {\n    //   return this.props.favors[0].filter(favor => favor.favor_for_user_id === this.props.user_profile_id)\n    // }\n    renderForm(field) {\n    if (this.props.modal === field) {\n      return () => {\n        this.props.closeModal();\n      }\n    }\n    return () => this.props.openModal(field)\n  }\n\n\n  handleFavorButton(favor) {\n    if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\n      return null\n    } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Request\") {\n      return (\n        <button className=\"favor-button\" onClick={() => this.props.deleteFavor(favor)}>\n          Delete\n        </button>\n      )\n    } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\n      return ( \n        <button className=\"favor-button\" onClick={() => this.props.updateFavor(favor)}>\n          Click here to log favor as complete.\n        </button>\n      )\n    } else if (favor.favor_by_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\n      return (\n        <button className=\"favor-button\" onClick={() => this.props.updateFavor(favor)}>\n          Click here to undo accepting this favor.\n        </button>\n      )\n    } else if (favor.favor_by_username) {\n      return null\n    }\n     else {\n      return (\n        <button className=\"favor-button\" onClick={() => this.props.updateFavor(favor)}>\n          Click here to accept favor\n        </button>\n      )\n    }\n  }\n\n\n    handleNoFavors(){\n     \n              if (!this.props.favors) return (\n              <>\n              {/* <ProfileNavContainer /> */}\n              <div className=\"prof-nofavors\"> We currently have no record of any favors by you.\n                Click the add button to list any good deeds you have done lately </div>\n              </>\n    )}\n  handleNoTakenFavors() {\n    \n    if (!this.props.favors) return (\n      <>\n        {/* <ProfileNavContainer /> */}\n        <div className=\"prof-nofavors\"> We currently have no record of any favors that you are working on for other users.\n       </div>\n      </>\n    )\n  }\n  handleButtonName(favor) {\n    if (favor.favor_status === \"Doing\") {\n      return \"This is Taken by you, \" + favor.favor_by_username\n      // return \"This is Taken by you, \" + favor.favor_by_username + \". Click here to mark complete.\"\n    } else if (favor.favor_status === \"Request\") {\n      return \"Click to Accept Favor\"\n    } else {\n      return \"Debug this.\"\n    }\n  }\n    handleTime(time){\n    let currentDate = new Date(time);\n    let hours = currentDate.getHours();\n    let minutes = currentDate.getMinutes();\n    let seconds = currentDate.getSeconds();\n    hours = (hours < 10) ? `0${hours}` : hours;\n    minutes = (minutes < 10) ? `0${minutes}` : minutes;\n    seconds = (seconds < 10) ? `0${seconds}` : seconds;\n    return (\n      <div className=\"date\">\n        <span> Date: {currentDate.toDateString()} </span>\n        <span className=\"time-str\"> Time: {hours} :{minutes} :{seconds} </span>\n      </div>\n    )\n    }\n    // .filter(favor => favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status !== \"Done\")\n  handleFavors() {\n    if (this.props.favors) {\n      return (\n        <div className=\"small-prof-favors\">\n          {this.props.favors\n            .filter(favor => favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status !== \"Done\")\n            .map((favor, idx) => {\n              if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\n                return <div className=\"favor-item\" >\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  {/*NOTE: We may want to add a \"this favor is being fulfilled by *username* here\" */}\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Request\") {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p className=\"currently-fulfilling-none\">This favor has not been taken yet</p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\n                </div>\n              } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p id=\"currently-fulfilling\">This favor has been accepted by <Link className=\"showLinksCurrently\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to log favor as complete.</button>\n                </div>\n              } else if (favor.favor_by_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p id=\"currently-fulfilling\">You are currently fulfilling this favor for {favor.favor_for_username}</p>\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>\n                    Click here to undo accepting this favor.\n                  </button>\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              }\n              else if (favor.favor_by_username) {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\">  {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p id=\"currently-fulfilling\">This favor has been accepted by <Link className=\"showLinks\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              } else {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\">  {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  \n                  {/* <p>This favor has been accepted by {favor.favor_by_username}</p> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to accept favor</button>\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                  {/* <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button> */}\n                </div>\n\n              }\n            }\n            )\n          }\n        </div>\n      )\n    }\n  }\n      // .filter(favor => favor.favor_by_user_id === this.props.currentUser.id && favor.favor_status !== \"Done\")\n  handleTakenFavors() {\n    if (this.props.favors) {\n      return (\n        <div className=\"small-prof-favors\">\n          {this.props.favors\n            .filter(favor => favor.favor_by_user_id === this.props.currentUser.id && favor.favor_status !== \"Done\")\n            .map((favor, idx) => {\n              if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\n                return <div className=\"favor-item\" >\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className= \"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  {/*NOTE: We may want to add a \"this favor is being fulfilled by *username* here\" */}\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Request\") {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p className=\"currently-fulfilling-none\">This favor has not been taken yet</p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\n                </div>\n              } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p id=\"currently-fulfilling\">This favor has been accepted by <Link className=\"showLinksCurrently\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to log favor as complete.</button>\n                </div>\n              } else if (favor.favor_by_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\"> {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  <p id=\"currently-fulfilling\">You are currently fulfilling this favor</p>\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>\n                    Click here to undo accepting this favor.\n                  </button>\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              }\n              else if (favor.favor_by_username) {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\">  {favor.favor_description}</p>\n                  <p id=\"currently-fulfilling\">This favor has been accepted by <Link className=\"showLinks\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\n                  {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                </div>\n              } else {\n                return <div className=\"favor-item\">\n                  <h2 className=\"favor-header\"> {favor.favor_title} </h2>\n                  <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\n                  <p className=\"favor-description\">  {favor.favor_description}</p>\n                  <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\n                  \n                  {/* <p>This favor has been accepted by {favor.favor_by_username}</p> */}\n                  <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to accept favor</button>\n                  {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\n                  {/* <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button> */}\n                </div>\n\n              }\n            }\n            )\n          }\n        </div>\n      )\n    }\n  }\n    render() {\n      // const this_user_favors = this.listOfRequest();\n        // const noFavors = this.handleNoFavors();\n        // const hasFavors = this.handleFavors();\n        const favors = (this.props.favors ? this.handleFavors() : this.handleNoFavors());\n        const taken_favors = (this.props.favors ? this.handleTakenFavors() : this.handleNoTakenFavors());\n      // if (!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0)) {\n      //   return (\n      //     <h1>You are not logged in</h1>\n      //   )\n      // }\n\n     \n\n            return (\n              <>\n                {/* <ProfileNavContainer /> */}\n                <NavBarContainer/>\n                <div className=\"profile-view\">\n                  {/* <div  className=\"banners\">\n                     <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3>\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" />\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" />\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" />\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/LzLgWcc/connected-1.png\" />https://i.ibb.co/1JDb3PM/connected-2.png\n                     <img className=\"support-banner\" src=\"https://i.ibb.co/1JDb3PM/connected-2.png\" />\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/gt2Lfs5/ccmessage-1.png\" /> \n                       <img className=\"support-banner\" src=\"https://i.ibb.co/6mFTFMS/ccmessage-2.png\" />\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/LpRyT28/staysafe.png\" />\n\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/KXzV90D/connected-3.png\" />\n                      <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" />\n              </div> */}\n                  <div className=\"prof-favors\">\n                    <h1 className=\"favor-title\">  Welcome {this.props.currentUser.username}!  </h1>\n                    <div className=\"two-lists\">\n                    {/* <h3 className=\"prof-fav-hd2\"> These are the good deeds you have requested from others  </h3> <br /> */}\n                    <div className=\"favor-lst-requests\">\n                      <div className=\"favor-request-boxes\">\n                          <h2 className=\"prof-fav-hd\"> <FontAwesomeIcon icon={faLifeRing} />  Requested Favors</h2>\n                          <div className=\"favor-button-and-text\" onClick={this.renderForm('favor')}>\n                          <button className=\"favor-btn\" onClick={this.renderForm('favor')}>\n                              <img className=\"add-favor\" src=\"https://cdn2.iconfinder.com/data/icons/vibrancie-health/30/health_002-medical-cross-hospital-first-aid-doctor-512.png\" /> \n                          </button>\n                          <p id=\"add-favor-text\">{\"Ask Favor\"}</p>\n                        </div>\n                      </div>\n                      {favors}\n                    </div>\n                    \n                    <div className=\"favor-lst-taken\">\n                        <h2 className=\"prof-fav-hd-taken\"> <FontAwesomeIcon icon={faHandsHelping} />  Taken Favors</h2>\n                        \n                          <div className=\"add-favor-ghost\">\n                          <p>Visit the <Link className={\"showLinks\"} to={'/newsfeed'}>Newsfeed</Link> to accept new favors</p>\n                          </div>\n                          \n  \n                       \n            \n                      {taken_favors}\n                    </div>\n                  </div>\n\n                  </div>\n                  <div>\n                    {/* <img className=\"banner\" src=\"https://i.ibb.co/MSmtpdb/Stay.jpg\" alt=\"covid help\"/> */}\n                  </div>\n                  {/* {this.state.favors.map(favor => (\n                    <FavorItem key={favor.id} title={favor.title} />\n                  ))} */}\n                </div>\n              </>\n            );\n\n        }\n       \n}\nexport default Profile;","/mnt/c/New App Academy/MERN_FS/frontend/src/components/newsfeed/newsfeed.jsx",["278","279","280","281","282","283","284"],"import React from 'react';\r\nimport {NavLink, Link} from 'react-router-dom';\r\nimport './newsfeed.css'\r\nimport ProfileNavContainer from '../profiles/profile_nav_container';\r\nimport NavBarNoLogoContainer from '../../session/navbar_no_logo_container';\r\nimport { faVirus } from '@fortawesome/free-solid-svg-icons';\r\nimport NavBar from '../../session/navbar_container'\r\nimport NavBarContainer from './../splash/profile_nav_container';\r\nclass NewsFeed extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { myFavors: false, favorRequests: false, userSearch: false, forUser: ''}\r\n        this.userShow = this.userShow.bind(this);\r\n        this.requestShow = this.requestShow.bind(this);\r\n        // this.handleNav = this.handleNav.bind(this);\r\n        this.updateName = this.updateName.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchFavors();\r\n    }\r\n    requestShow() {\r\n        if (!this.state.favorRequests) {\r\n            this.setState( { favorRequests: true})\r\n        } else {\r\n            this.setState( { favorRequests: false})\r\n        }\r\n    }\r\n      userShow() {\r\n          if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\r\n            return null\r\n            } else if (!this.state.myFavors && !!this.props.currentUser && (!(Object.keys(this.props.currentUser).length === 0))) {\r\n           \r\n              return < button className=\"news-btn\" onClick={() => this.setState({ myFavors: true })} > View Other Users Favors </button >\r\n        } else {\r\n            \r\n              return < button className=\"news-btn\" onClick={() => this.setState({ myFavors: false })} > View All Favors </button >\r\n        }\r\n    }\r\n    updateName() {\r\n        \r\n        return e=> {\r\n            this.setState( { 'forUser' : e.currentTarget.value })\r\n            if ( this.state.forUser !== '') {\r\n                this.setState( { 'userSearch' : true })\r\n            }\r\n        }\r\n    }\r\n    handleButtonName(favor) {\r\n        if (favor.favor_status === \"Doing\") {\r\n            return \"This is Taken by \" + favor.favor_by_username\r\n        } else if (favor.favor_status === \"Request\") {\r\n            return \"Click to Accept Favor\"\r\n        } else {\r\n            return \"Debug this.\"\r\n        }\r\n    }\r\n\r\n    handleTime(time) {\r\n        let currentDate = new Date(time);\r\n        let hours = currentDate.getHours();\r\n        let minutes = currentDate.getMinutes();\r\n        let seconds = currentDate.getSeconds();\r\n        hours = (hours < 10) ? `0${hours}` : hours;\r\n        minutes = (minutes < 10) ? `0${minutes}` : minutes;\r\n        seconds = (seconds < 10) ? `0${seconds}` : seconds;\r\n        return (\r\n            <div className=\"date\">\r\n                <span> Date: {currentDate.toDateString()} </span>\r\n                <span className=\"time-str\"> Time: {hours} :{minutes} :{seconds} </span>\r\n            </div>\r\n        )\r\n    }\r\n    // handleNav() {\r\n    //     if (this.props.currentUser ) {\r\n    //         return <div> <ProfileNavContainer /> </div>\r\n    //     } else {\r\n    //         return <div> <NavBar /> </div>\r\n    //     }\r\n    // }\r\n    render() {\r\n        let favor_text = this.state.myFavors? \"View All Favors\" : \"View Other Users Favors\"\r\n        let request_text = this.state.favorRequests?   \"View All Posts\" : \"View Unaccepted Favors\"\r\n        let favors = (this.props.favors.data) || [];\r\n        \r\n        favors = ( this.state.myFavors? favors.filter( favor => this.props.currentUser.id !== favor.favor_for_user_id) : favors)\r\n        favors = ( this.state.favorRequests? favors.filter( favor => favor.favor_status === \"Request\") : favors )\r\n        favors = ( this.state.userSearch? favors.filter( favor => {\r\n            const length = this.state.forUser.length; \r\n\r\n            return favor.favor_for_username.slice(0,length) === this.state.forUser\r\n        }) : favors)\r\n        favors = favors.filter(favor => favor.favor_status !== \"Done\")\r\n\r\n  \r\n       \r\n        favors = favors.map( (favor, idx)=> {\r\n            if ((!this.props.currentUser || (Object.keys(this.props.currentUser).length === 0))) {\r\n                return <div className=\"favor-item-newsfeed\" >\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                    <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                    <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                    {/*NOTE: We may want to add a \"this favor is being fulfilled by *username* here\" */}\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n            } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Request\") {\r\n                return <div className=\"favor-item-newsfeed\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                    <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                    <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                    <p className=\"currently-fulfilling-none\">This favor has not been taken yet</p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button>\r\n                </div>\r\n            } else if (favor.favor_for_user_id === this.props.currentUser.id && favor.favor_status === \"Doing\") {\r\n                return <div className=\"favor-item-newsfeed\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                    <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                    <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                    <p id=\"currently-fulfilling\">Your favor is currently being fulfilled by <Link className=\"showLinksCurrently\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to log favor as complete.</button>\r\n                </div>\r\n            } else if (favor.favor_by_user_id === this.props.currentUser.id) {\r\n                return <div className=\"favor-item-newsfeed\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                    <p className=\"favor-description\"> {favor.favor_description}</p>\r\n                    <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                    <p id=\"currently-fulfilling\">You are currently fulfilling this favor for <Link className=\"showLinksCurrently\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>\r\n                        Click here to undo accepting this favor.\r\n                  </button>\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n            }\r\n            else if (favor.favor_by_username) {\r\n                return <div className=\"favor-item-newsfeed\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                    <p className=\"favor-description\">  {favor.favor_description}</p>\r\n                    <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n                    <p id=\"currently-fulfilling\">This favor has been accepted by <Link className=\"showLinksCurrently\" to={`/user/${favor.favor_by_user_id}`} >{favor.favor_by_username}  </Link></p>\r\n                    {/* <button onClick={() => this.props.updateFavor(favor)}>{this.handleButtonName(favor)}</button> */}\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                </div>\r\n            } else {\r\n                return <div className=\"favor-item-newsfeed\">\r\n                    <h2 className=\"favor-header\"> {favor.favor_title} </h2>\r\n                    <p key={idx} className=\"favor-list\"> {this.handleTime(favor.date)} </p>\r\n                    <p className=\"favor-description\">  {favor.favor_description}</p>\r\n                    <p className=\"favor-for-text\">For <Link className=\"showLinks\" to={`/user/${favor.favor_for_user_id}`} >{favor.favor_for_username}  </Link></p>\r\n\r\n                    {/* <p>This favor has been accepted by {favor.favor_by_username}</p> */}\r\n                    <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.updateFavor(favor)}>Click here to accept favor</button>\r\n                    {/* <button onClick={() => this.props.deleteFavor(favor)}>delete</button> */}\r\n                    {/* <button className=\"map-button nav-btns-child-login\" onClick={() => this.props.deleteFavor(favor)}>Delete</button> */}\r\n                </div>\r\n\r\n            }\r\n        })\r\n        \r\n            return (\r\n                <>\r\n                <NavBarContainer />\r\n                <div className=\"newsfeed-whole\">\r\n                    \r\n\r\n                    <div className=\"news-banners\">\r\n                        {/* <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --\r\n                       <NavLink to=\"/covid\">Covid Help</NavLink> </h3> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/LzLgWcc/connected-1.png\" />https://i.ibb.co/1JDb3PM/connected-2.png */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/1JDb3PM/connected-2.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/gt2Lfs5/ccmessage-1.png\" />  */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/6mFTFMS/ccmessage-2.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/LpRyT28/staysafe.png\" /> */}\r\n\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/KXzV90D/connected-3.png\" /> */}\r\n                        {/* <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" /> */}\r\n                    </div>\r\n                    <h1 id=\"newsfeed-title\"> Newsfeed </h1>\r\n                    {this.userShow()}\r\n                    <button className=\"news-btn\" onClick={this.requestShow}> {request_text} </button>\r\n                    <input type=\"text\" className=\"news-input-search\" placeholder='Search for a User' onChange={this.updateName()}></input>\r\n                    {/* <button className=\"news-btn\" > <Link className=\"showLinks\" to={`/map`} >Map  </Link> </button> */}\r\n                        \r\n                    {favors}\r\n                </div>\r\n                </>\r\n            ) \r\n\r\n    }\r\n    }\r\n\r\nexport default NewsFeed;\r\n\r\n\r\n    //  <div className=\"news-banners\">\r\n    //                        <h3 className=\"covid-help\">  Currently experiencing Covid symptoms?  Visit our info page for tips handling stress --      \r\n    //                    <NavLink to=\"/covid\">Covid Help</NavLink> </h3>   \r\n\r\n    //                   <img className=\"support-banner\" src=\"https://i.ibb.co/qxSdNMH/sustain-2.png\" />\r\n\r\n    //                   {/* <img className=\"support-banner\" src=\"https://i.ibb.co/10YkVyz/covidtips.png\" /> */}\r\n\r\n    //                  <img className=\"support-banner\" src=\"https://i.ibb.co/41BLxw2/covidflag.png\" />\r\n\r\n    //                   <img className=\"support-banner\" src=\"https://i.ibb.co/bbg6wy4/favorpic-1.png\" />\r\n\r\n    //             </div>\r\n\r\n    // <button onClick={this.userShow} className=\"map-button nav-btns-child\" > {favor_text} </button>\r\n    //                 <button onClick={this.requestShow} className=\"map-button nav-btns-child-login\"> {request_text} </button>\r\n    //                 <input type=\"text\"placeholder=\"Search a Username\" className=\"user-search-bar\" value={this.state.forUser} onChange={this.updateName()}></input>","/mnt/c/New App Academy/MERN_FS/frontend/src/utils/favors_api_util.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/profile_show/profile_show.jsx",["285","286","287","288","289","290","291"],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/profilenav2.jsx",["292","293","294","295","296","297","298"],"import React from 'react';\nimport {withRouter, Link} from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faCircle, faPlus, faBell, faNewspaper, faUser, faBars, faSignOutAlt, faUserPlus, faSignInAlt} from '@fortawesome/free-solid-svg-icons';\n\nimport './splash_nav.scss';\n\n\n\nclass SplashNav2 extends React.Component{\nconstructor(props){\nsuper(props);\n\nthis.state ={\n\n        notes: false,\n        info: false,\n        add: false,\n        favors: false\n        \n}\n\n\n\nthis.showDropdown = this.showDropdown.bind(this);\n\nthis.renderForm = this.renderForm.bind(this);\n\nthis.logoutUser = this.logoutUser.bind(this);\n\n\n}\n\n\n\nshowDropdown(field) {\n\n    \n        return e => {\n            e.preventDefault();\n            e.stopPropagation();\n            this.setState({\n\n                notes: false,\n                info: false,\n                add: false,\n                favors: false\n\n            })\n            this.setState({[field]: !this.state[field]}, () => {\n            if (this.state[field] === true) { \n                document.addEventListener('click', this.showDropdown);\n             } else {\n                document.removeEventListener(\"click\", this.showDropdown) \n\n            }\n            });\n        }\n    }\n\n\n\n\n\n\n\ncomponentDidMount() {\n        this.props.closeModal();\n        this.props.fetchFavors();\n    }\n\ncomponentWillUnmount() {\n        this.props.closeModal();\n    }\n    \n\n\nlogoutUser(e) {\n      e.preventDefault();\n      this.props.logout();\n  }\n\n\n\n\n    \n\n\nrenderForm(field) {\n    if (this.props.modal === field) {\n      return () => {\n        this.props.closeModal();\n      }\n    }\n    return () => this.props.openModal(field)\n  }\n\n\n\n\n\n\nrender(){\n    \nconst signUpOrProfile = this.props.loggedIn? (   <Link className=\"icon-link-splash\" to={'/profile'} > <i className=\"fas fa-user icon-splash icon-fill\">  <FontAwesomeIcon className=\"fai\" icon={faUser} /> </i> </Link>):\n  (this.props.sign);\n  const logInOrLogOut = this.props.loggedIn ? (<i className=\"fas fa-user icon-splash icon-fill\"  onClick={this.logoutUser}> <FontAwesomeIcon  icon={faSignOutAlt} /> </i> ): \n(this.props.log);\nreturn (\n\n    // <section className=\"navcontainer content\">\n\n       \n   \n    <header className=\"icon-container-splash\">\n\n    \n\n\n        <div className=\"header-div header-div-1\">\n           <Link className=\"icon-link-splash\" to={\"/\"}> <i className=\"fas fa-home icon-splash icon-fill\"> <FontAwesomeIcon  icon={faHome} /> </i></Link>\n        </div>\n     \n        \n        <div className=\"header-div\">\n         <Link className=\"icon-link-splash\" to={\"/newsfeed\"}>  <i className=\"fas fa-newspaper icon-splash icon-fill\"><FontAwesomeIcon  icon={faNewspaper} /> </i> </Link>                \n        </div>\n  \n\n      \n\n    \n        <div className=\"header-div header-splash-text\">\n            <h1 id=\"title-text\"> CovidConnection </h1>\n            <Link id=\"team-link\" className=\"showLinksCurrently\" to={`/about`} >Team Members</Link>\n        </div>\n          \n          \n\n\n    \n\n      <div className=\"header-div\">\n     {signUpOrProfile}\n    </div>\n           \n\n   \n        <div className=\"header-div\">\n      {logInOrLogOut}\n        </div>         \n\n\n\n\n{/* \n        <div className=\"mid\">     \n            <div onClick={this.showDropdown(\"favors\")}>\n                <span className=\"favor-button\"> Favors </span>\n            </div>\n                \n\n                    \n\n                {this.state.favors ? this.favorMenu() : null}\n\n    </div> */}\n\n\n\n\n\n\n\n    </header>\n\n \n\n    // </section>\n\n   \n\n\n\n\n\n);\n\n}\n\n}\n\n\n\n\n\n\n\nexport default withRouter(SplashNav2);","/mnt/c/New App Academy/MERN_FS/frontend/src/components/profiles/profilenav2.jsx",["299","300","301","302","303"],"import React from 'react';\nimport {withRouter, Link} from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome, faCircle, faPlus, faBell, faNewspaper, faUser, faBars, faHandsHelping} from '@fortawesome/free-solid-svg-icons';\n\n// npm install --save-dev @iconify/react @iconify-icons/fluent\nimport { Icon, InlineIcon } from '@iconify/react';\nimport signOut20Regular from '@iconify-icons/fluent/sign-out-20-regular';\n// npm install --save-dev @iconify/react @iconify-icons/fxemoji\nimport emailIcon from '@iconify-icons/fxemoji/email';\n// npm install --save-dev @iconify/react @iconify-icons/fa-solid\n\n\n\n\nimport './profile.scss';\n\n\n\nclass ProfileNav2 extends React.Component{\nconstructor(props){\nsuper(props);\n\nthis.state ={\n\n        notes: false,\n        info: false,\n        add: false,\n        favors: false\n        \n}\n\n\nthis.addMenu = this.addMenu.bind(this);\nthis.showNotesMenu = this.showNotesMenu.bind(this);\nthis.showDropdown = this.showDropdown.bind(this);\nthis.showUserInfo = this.showUserInfo.bind(this);\nthis.renderForm = this.renderForm.bind(this);\nthis.favorMenu = this.favorMenu.bind(this);\nthis.logoutUser = this.logoutUser.bind(this);\n\n\n}\n\n\n\nshowDropdown(field) {\n\n    \n        return e => {\n            e.preventDefault();\n            e.stopPropagation();\n            this.setState({\n\n                notes: false,\n                info: false,\n                add: false,\n                favors: false\n\n            })\n            this.setState({[field]: !this.state[field]}, () => {\n            if (this.state[field] === true) { \n                document.addEventListener('click', this.showDropdown);\n             } else {\n                document.removeEventListener(\"click\", this.showDropdown) \n\n            }\n            });\n        }\n    }\n\n\n\n\n\n\n\ncomponentDidMount() {\n        this.props.closeModal();\n        this.props.fetchFavors();\n    }\n\ncomponentWillUnmount() {\n        this.props.closeModal();\n    }\n    \n\naddMenu(){\n\n\nreturn(\n\n<section className=\"add-menu-items\" >\n <h2 className=\"author-menu\">  Create  <span className=\"menu-x\" onClick={this.showDropdown(\"add\")}>  X </span> </h2>\n    <hr />\n\n    <div className=\"add-menu-list\">\n\n        \n        <span className=\"add-menu-item\" onClick={this.renderForm('favor')}>\n        <span><FontAwesomeIcon icon={faHandsHelping} />Create Favor    \n        <p className=\"add-menu-desc\" > A member of CC can either request a favor when in need or keep record of something they \n        have done as a good deed. </p></span></span>\n\n    </div>\n    </section>\n\n)\n\n} \n\nfavorMenu(){\n\n if(this.props.favors.length === 0) return  null;\n      \n     \n   const favors =  this.props.favors\n                   .filter(favor => favor.favor_for_user_id === this.props.currentUser.id)\n                    .map(favor => {\n            \n            return ( <span> {favor.favor_title} <br /></span> );\n        })\n\n      return (\n\n            <section className=\"favor-menu-items\" >\n          <h2 className=\"author-menu\">  Favors  <span className=\"menu-x\" onClick={this.showDropdown(\"favors\")}>  X </span> </h2>\n         <div className=\"favor-menu-list\">\n            <div className=\"add-menu-item\">\n            <span className=\"favor-menu-list\">  {favors} </span>\n\n            </div>\n        </div>\n         </section>   \n      )\n    \n    }\n\n\nlogoutUser(e) {\n      e.preventDefault();\n      this.props.logout();\n  }\n\nshowUserInfo(){\n\n\nreturn(\n\n<section className=\"info-menu\" >\n <h2 className=\"author-menu\">  Account Info  <span className=\"menu-x\" onClick={this.showDropdown(\"info\")}>  X </span> </h2>\n <hr />\n<div className=\"profile-menu-list\" >\n    <Link to=\"/profile\" className=\"user-menu-link\"> <span className=\"prof-info\"> \n      <i className=\"fas fa-user-circle\"> {this.props.currentUser.username} <p className=\"pi-style\">See your profile </p></i></span></Link>\n    \n <hr />\n\n <span > <Icon icon={emailIcon} />  <span className=\"email-info\">{this.props.currentUser.email}</span></span>\n\n <hr />\n  <span className=\"logout-menu\" onClick={this.logoutUser}> <Icon className=\"log-men-door\" icon={signOut20Regular} />\n  <span className=\"lg-men\">Log Out</span></span> \n\n</div>\n</section> \n\n\n)\n\n}\n\n\n\n// handleFavors(){\n\n//     if(this.props.favors){\n      \n     \n//       return (\n//       <div>\n//          {this.props.favors\n//           .filter(favor => favor.favor_for_user_id === this.props.currentUser.id)\n//           .map(favor =>   <p  className=\"favor-list\">{favor.favor_description}</p>)\n//         }\n//     </div> \n//       )}\n\n\n//       }\n    \n\n\nrenderForm(field) {\n    if (this.props.modal === field) {\n      return () => {\n        this.props.closeModal();\n      }\n    }\n    return () => this.props.openModal(field)\n  }\n\n\nshowNotesMenu(){\n\nreturn (\n\n    <ul className=\"notes-list\">\n        <li> No notifications at this time! </li>\n        <img className=\"logo-img\"  src=\"https://i.ibb.co/ZWSmV2V/doublec-2.png\"/>\n\n    </ul>\n)\n\n}\n\n\nrender(){\n\nreturn (\n\n    <section className=\"navcontainer content\">\n\n       \n   \n    <header className=\"icon-container\">\n\n    \n\n\n        \n           <Link className=\"icon-link\" to={\"/\"}> <i className=\"fas fa-home icon icon-fill\"><span className=\"nav-menu-txt\">Home</span> <FontAwesomeIcon  icon={faHome} /> </i></Link>\n            \n     \n       \n    \n         <Link className=\"icon-link\" to={\"/newsfeed\"}>  <i class=\"fas fa-newspaper icon icon-fill\"><span className=\"nav-menu-txt\">Newsfeed</span><FontAwesomeIcon  icon={faNewspaper} /> </i> </Link>                \n       \n  \n\n      \n\n    \n           \n           <Link className=\"icon-link\" to={\"/profile\"}> <i class=\"fas fa-user icon icon-fill\"><span className=\"nav-menu-txt\">Profile</span> <FontAwesomeIcon  icon={faUser} /></i> </Link>                 \n          \n\n\n    \n\n      \n     <i class=\"fas fa-bars icon icon-fill\"  onClick={this.showDropdown(\"info\")}> <span className=\"nav-menu-txt\">Account</span> <FontAwesomeIcon  icon={faBars} /> </i> \n\n            {this.state.info ? this.showUserInfo() : null}\n\n   \n\n      <i class=\"fas fa-plus icon icon-fill\" onClick={this.showDropdown(\"add\")}> <span className=\"nav-menu-txt\">Create</span>  <FontAwesomeIcon className=\"fai\" icon={faPlus} /> </i>\n                        {this.state.add ? this.addMenu() : null}\n\n\n\n\n{/* \n        <div className=\"mid\">     \n            <div onClick={this.showDropdown(\"favors\")}>\n                <span className=\"favor-button\"> Favors </span>\n            </div>\n                \n\n                    \n\n                {this.state.favors ? this.favorMenu() : null}\n\n    </div> */}\n\n\n\n\n\n\n\n    </header>\n\n \n\n    </section>\n\n   \n\n\n\n\n\n);\n\n}\n\n}\n\n\n\n\n\n\n\nexport default withRouter(ProfileNav2);","/mnt/c/New App Academy/MERN_FS/frontend/src/session/navbar_container.js",["304"],"\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/session_actions';\nimport {openModal, closeModal} from '../actions/modal_actions';\n\nimport NavBar from './navbar';\nimport NavBarNoLogo from './navbar_no_logo'\nimport './navbar.css'\n\nconst mapStateToProps = state => ({\n  loggedIn: state.session.isAuthenticated,\n  currentUser: state.session.user\n});\n\nconst mapDispatchToProps = dispatch => {\n\n  return {\n\n    sign: (<button className=\"nav-btns-child\" onClick={() => dispatch(openModal('signup'))}>\n          Sign Up\n        </button>\n    ),\n    log: (<button className=\"nav-btns-child-login\"  onClick={() => dispatch(openModal('login'))}>\n          Log In \n        </button>\n    ),\n    logout: () => dispatch(logout()),\n    closeModal: () => dispatch(closeModal())\n\n\n\n\n  }\n\n\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","/mnt/c/New App Academy/MERN_FS/frontend/src/session/navbar_no_logo_container.js",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/map.jsx",["305","306","307"],"import { Map, GoogleApiWrapper, Marker, InfoWindow, addListener} from 'google-maps-react';\r\nimport MarkerClusterer from '@googlemaps/markerclustererplus';\r\nimport React from 'react';\r\n\r\n\r\nconst mapStyles = {\r\n  width: '80%',\r\n  height: '80%',\r\n  'margin-left' : '10%',\r\n  'margin-right' : '5%',\r\n  'border' : '2px solid black'\r\n}\r\nexport class MapBox extends React.Component {\r\n\r\n\r\n  render() {\r\n\r\n    \r\n    \r\n    let favors = this.props.favors.data || []\r\n   \r\n    if ( this.props.userShow ) {\r\n        favors = favors.filter( favor => this.props.currentUser.id === favor.favor_for_user_id )\r\n    }\r\n    if (this.props.requestShow ) {\r\n      favors = favors.filter( favor => favor.status === true)\r\n    }\r\n    favors = ( this.props.userSearch ? favors.filter( favor =>  {\r\n            const length = this.props.forUser.length;\r\n            if ( favor.favor_for_username) {\r\n            return favor.favor_for_username.slice(0, length)  === this.props.forUser\r\n            } else {\r\n               return false \r\n            }\r\n        }) : favors)\r\n    const test_markers = favors.map( (favor,idx) => {\r\n      const lat = favor.favor_lat \r\n      const lng = favor.favor_lng \r\n      const location = { lat: lat, lng: lng } \r\n      const marker = < Marker position={ location } title={`${favor.favor_title} \r\n    ${favor.favor_description} `|| \"favor\"} key={idx} />\r\n      return marker\r\n      \r\n    })\r\n    \r\n    \r\n    const map =    (<Map \r\n        google = {this.props.google}\r\n        zoom= {8}\r\n        style={mapStyles}\r\n        initialCenter = {{lat: 39.419140, lng: -76.452240}}\r\n        className=\"map-container\"\r\n      > \r\n      {test_markers} \r\n      </Map>)\r\n   \r\n    return (\r\n      <div>\r\n       {map}\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyAZpaEFWsQyJOahKBVfBZ1g3mpemxo1VQo'\r\n})(MapBox);\r\n","/mnt/c/New App Academy/MERN_FS/frontend/src/session/navbar.jsx",[],"/mnt/c/New App Academy/MERN_FS/frontend/src/session/navbar_no_logo.jsx",["308"],"// src/components/nav/navbar.js\n\nimport React from 'react';\nimport { Link } from 'react-router-dom'\nimport './navbar.css'\n\nclass NavBarNoLogo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.logoutUser = this.logoutUser.bind(this);\n        this.getLinks = this.getLinks.bind(this);\n    }\n\n    logoutUser(e) {\n        e.preventDefault();\n        this.props.logout();\n    }\n\n    // Selectively render links dependent on whether the user is logged in\n    getLinks() {\n        if (this.props.loggedIn) {\n            return (\n                <div className=\"nav-btns\">\n                    <button id=\"pro\" className=\"nav-btns-child\"><Link to={'/profile'}>View Profile</Link></button>\n                    <button className=\"nav-btns-child-login\" onClick={this.logoutUser}>Logout</button>\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"nav-btns\">\n                    {/* <Link to={'/signup'}>Signup</Link>\n                <Link to={'/login'}>Login</Link> */}\n                    {this.props.sign}\n\n                    <br />\n\n                    {this.props.log}\n\n                </div>\n            );\n        }\n    }\n\n    render() {\n        const logAbout = (\n            <div id={\"right-btns\"}>\n                <button id=\"news\" className=\"nav-btns-child login-links\"><Link to={'/newsfeed'}>Newsfeed</Link></button>\n                <button id=\"abt\" className=\"nav-btns-child-login login-links\"><Link to={'/about'}>About</Link></button>\n            </div>\n        )\n        return (\n            <div className=\"nav-bar-top\">\n                <div className=\"nav-bar-left\">\n                    <img className=\"logo-header-none\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/5b/60x15transparent_spacer.svg/2880px-60x15transparent_spacer.svg.png\" width={5} height={1} />\n                    <Link id=\"back-link\" to={'/'}>Back</Link>\n                    {logAbout}\n                </div>\n                { this.getLinks()}\n            </div>\n        );\n    }\n}\n\nexport default NavBarNoLogo;","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/new_splash_container.jsx",["309"],"import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport { fetchFavors } from '../../actions/favor_actions';\r\nimport NewSplash from './new_splash';\r\nimport { logout } from '../../actions/session_actions';\r\nimport { openModal, closeModal } from '../../actions/modal_actions';\r\n\r\nconst mSTP = state => {\r\n    return {\r\n        favors: state.entities.favors,\r\n        currentUser: state.session.user,\r\n        loggedIn: state.session.isAuthenticated\r\n    }\r\n}\r\n\r\nconst mDTP = dispatch => {\r\n    return {\r\n        fetchFavors: () => dispatch(fetchFavors()),\r\n        logout: () => dispatch(logout()),\r\n    openModal: modal => dispatch(openModal(modal)),\r\n    closeModal: () => dispatch(closeModal()),\r\n    fetchFavors: () => dispatch(fetchFavors()),\r\n    sign: (<button  className=\"splash-btns\" onClick={() => dispatch(openModal('signup'))}>\r\n          Sign Up\r\n        </button>)\r\n        ,\r\n    log: (<button  className=\"splash-btns\"  onClick={() => dispatch(openModal('login'))}>\r\n          Log In \r\n        </button>)\r\n    }\r\n}\r\n\r\nexport default connect(mSTP, mDTP)(NewSplash);","/mnt/c/New App Academy/MERN_FS/frontend/src/components/splash/new_splash.jsx",["310"],"import React from 'react';\r\nimport './new_splash.css'\r\n\r\nclass NewSplash extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"new-splash-cont\">\r\n                <h1> CovidConnection </h1>\r\n                <div>\r\n                    <ul className=\"navbar-buttons\">\r\n                        <li>\r\n                            <a> Newsfeed </a>\r\n                        </li>\r\n                        <li>\r\n                            <a> About </a>\r\n                        </li>\r\n                        <li>\r\n                            <a> Login </a>\r\n                        </li>\r\n                        <li>\r\n                            <a> Sign Up</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewSplash;",{"ruleId":"311","replacedBy":"312"},{"ruleId":"313","replacedBy":"314"},{"ruleId":"315","severity":1,"message":"316","line":11,"column":8,"nodeType":"317","messageId":"318","endLine":11,"endColumn":13},{"ruleId":"315","severity":1,"message":"319","line":1,"column":10,"nodeType":"317","messageId":"318","endLine":1,"endColumn":27},{"ruleId":"320","severity":1,"message":"321","line":11,"column":1,"nodeType":"322","endLine":32,"endColumn":2},{"ruleId":"315","severity":1,"message":"319","line":1,"column":10,"nodeType":"317","messageId":"318","endLine":1,"endColumn":27},{"ruleId":"323","severity":1,"message":"324","line":22,"column":5,"nodeType":"325","messageId":"326","endLine":22,"endColumn":16},{"ruleId":"315","severity":1,"message":"327","line":2,"column":8,"nodeType":"317","messageId":"318","endLine":2,"endColumn":13},{"ruleId":"328","severity":1,"message":"329","line":22,"column":5,"nodeType":"330","endLine":22,"endColumn":75},{"ruleId":"328","severity":1,"message":"329","line":23,"column":5,"nodeType":"330","endLine":23,"endColumn":76},{"ruleId":"328","severity":1,"message":"329","line":24,"column":5,"nodeType":"330","endLine":24,"endColumn":75},{"ruleId":"328","severity":1,"message":"329","line":25,"column":5,"nodeType":"330","endLine":25,"endColumn":75},{"ruleId":"328","severity":1,"message":"329","line":26,"column":5,"nodeType":"330","endLine":26,"endColumn":75},{"ruleId":"328","severity":1,"message":"329","line":27,"column":5,"nodeType":"330","endLine":27,"endColumn":75},{"ruleId":"315","severity":1,"message":"331","line":2,"column":8,"nodeType":"317","messageId":"318","endLine":2,"endColumn":21},{"ruleId":"315","severity":1,"message":"332","line":3,"column":10,"nodeType":"317","messageId":"318","endLine":3,"endColumn":25},{"ruleId":"315","severity":1,"message":"333","line":4,"column":10,"nodeType":"317","messageId":"318","endLine":4,"endColumn":22},{"ruleId":"315","severity":1,"message":"334","line":5,"column":10,"nodeType":"317","messageId":"318","endLine":5,"endColumn":22},{"ruleId":"315","severity":1,"message":"335","line":6,"column":10,"nodeType":"317","messageId":"318","endLine":6,"endColumn":17},{"ruleId":"315","severity":1,"message":"336","line":8,"column":8,"nodeType":"317","messageId":"318","endLine":8,"endColumn":23},{"ruleId":"337","severity":1,"message":"338","line":80,"column":10,"nodeType":"339","messageId":"340","endLine":84,"endColumn":43},{"ruleId":"315","severity":1,"message":"341","line":5,"column":16,"nodeType":"317","messageId":"318","endLine":5,"endColumn":26},{"ruleId":"315","severity":1,"message":"342","line":8,"column":10,"nodeType":"317","messageId":"318","endLine":8,"endColumn":16},{"ruleId":"315","severity":1,"message":"343","line":8,"column":18,"nodeType":"317","messageId":"318","endLine":8,"endColumn":26},{"ruleId":"315","severity":1,"message":"344","line":8,"column":28,"nodeType":"317","messageId":"318","endLine":8,"endColumn":34},{"ruleId":"315","severity":1,"message":"345","line":8,"column":36,"nodeType":"317","messageId":"318","endLine":8,"endColumn":42},{"ruleId":"315","severity":1,"message":"346","line":8,"column":44,"nodeType":"317","messageId":"318","endLine":8,"endColumn":55},{"ruleId":"315","severity":1,"message":"347","line":8,"column":57,"nodeType":"317","messageId":"318","endLine":8,"endColumn":63},{"ruleId":"315","severity":1,"message":"348","line":8,"column":65,"nodeType":"317","messageId":"318","endLine":8,"endColumn":71},{"ruleId":"315","severity":1,"message":"349","line":8,"column":73,"nodeType":"317","messageId":"318","endLine":8,"endColumn":85},{"ruleId":"323","severity":1,"message":"350","line":15,"column":5,"nodeType":"325","messageId":"326","endLine":15,"endColumn":16},{"ruleId":"315","severity":1,"message":"341","line":6,"column":16,"nodeType":"317","messageId":"318","endLine":6,"endColumn":26},{"ruleId":"315","severity":1,"message":"351","line":58,"column":9,"nodeType":"317","messageId":"318","endLine":58,"endColumn":18},{"ruleId":"328","severity":1,"message":"329","line":69,"column":32,"nodeType":"330","endLine":69,"endColumn":102},{"ruleId":"315","severity":1,"message":"336","line":3,"column":8,"nodeType":"317","messageId":"318","endLine":3,"endColumn":23},{"ruleId":"315","severity":1,"message":"352","line":2,"column":8,"nodeType":"317","messageId":"318","endLine":2,"endColumn":20},{"ruleId":"315","severity":1,"message":"336","line":3,"column":8,"nodeType":"317","messageId":"318","endLine":3,"endColumn":23},{"ruleId":"315","severity":1,"message":"353","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":22},{"ruleId":"315","severity":1,"message":"354","line":8,"column":8,"nodeType":"317","messageId":"318","endLine":8,"endColumn":14},{"ruleId":"315","severity":1,"message":"355","line":9,"column":8,"nodeType":"317","messageId":"318","endLine":9,"endColumn":18},{"ruleId":"315","severity":1,"message":"356","line":52,"column":15,"nodeType":"317","messageId":"318","endLine":52,"endColumn":26},{"ruleId":"315","severity":1,"message":"357","line":53,"column":15,"nodeType":"317","messageId":"318","endLine":53,"endColumn":27},{"ruleId":"337","severity":1,"message":"338","line":115,"column":2,"nodeType":"339","messageId":"340","endLine":124,"endColumn":27},{"ruleId":"337","severity":1,"message":"338","line":125,"column":17,"nodeType":"339","messageId":"340","endLine":134,"endColumn":27},{"ruleId":"337","severity":1,"message":"338","line":137,"column":21,"nodeType":"339","messageId":"340","endLine":158,"endColumn":23},{"ruleId":"315","severity":1,"message":"358","line":2,"column":8,"nodeType":"317","messageId":"318","endLine":2,"endColumn":27},{"ruleId":"315","severity":1,"message":"335","line":3,"column":9,"nodeType":"317","messageId":"318","endLine":3,"endColumn":16},{"ruleId":"315","severity":1,"message":"347","line":5,"column":10,"nodeType":"317","messageId":"318","endLine":5,"endColumn":16},{"ruleId":"315","severity":1,"message":"359","line":6,"column":8,"nodeType":"317","messageId":"318","endLine":6,"endColumn":21},{"ruleId":"315","severity":1,"message":"360","line":10,"column":8,"nodeType":"317","messageId":"318","endLine":10,"endColumn":29},{"ruleId":"361","severity":1,"message":"362","line":27,"column":7,"nodeType":"363","endLine":27,"endColumn":11},{"ruleId":"328","severity":1,"message":"329","line":354,"column":31,"nodeType":"330","endLine":354,"endColumn":184},{"ruleId":"315","severity":1,"message":"335","line":2,"column":9,"nodeType":"317","messageId":"318","endLine":2,"endColumn":16},{"ruleId":"315","severity":1,"message":"358","line":4,"column":8,"nodeType":"317","messageId":"318","endLine":4,"endColumn":27},{"ruleId":"315","severity":1,"message":"360","line":5,"column":8,"nodeType":"317","messageId":"318","endLine":5,"endColumn":29},{"ruleId":"315","severity":1,"message":"364","line":6,"column":10,"nodeType":"317","messageId":"318","endLine":6,"endColumn":17},{"ruleId":"315","severity":1,"message":"354","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":14},{"ruleId":"315","severity":1,"message":"336","line":8,"column":8,"nodeType":"317","messageId":"318","endLine":8,"endColumn":23},{"ruleId":"315","severity":1,"message":"365","line":82,"column":13,"nodeType":"317","messageId":"318","endLine":82,"endColumn":23},{"ruleId":"315","severity":1,"message":"358","line":2,"column":8,"nodeType":"317","messageId":"318","endLine":2,"endColumn":27},{"ruleId":"315","severity":1,"message":"335","line":3,"column":9,"nodeType":"317","messageId":"318","endLine":3,"endColumn":16},{"ruleId":"315","severity":1,"message":"347","line":6,"column":10,"nodeType":"317","messageId":"318","endLine":6,"endColumn":16},{"ruleId":"315","severity":1,"message":"359","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":21},{"ruleId":"315","severity":1,"message":"336","line":8,"column":8,"nodeType":"317","messageId":"318","endLine":8,"endColumn":23},{"ruleId":"361","severity":1,"message":"362","line":22,"column":7,"nodeType":"363","endLine":22,"endColumn":11},{"ruleId":"328","severity":1,"message":"329","line":282,"column":25,"nodeType":"330","endLine":282,"endColumn":178},{"ruleId":"315","severity":1,"message":"366","line":3,"column":10,"nodeType":"317","messageId":"318","endLine":3,"endColumn":17},{"ruleId":"315","severity":1,"message":"343","line":5,"column":18,"nodeType":"317","messageId":"318","endLine":5,"endColumn":26},{"ruleId":"315","severity":1,"message":"344","line":5,"column":28,"nodeType":"317","messageId":"318","endLine":5,"endColumn":34},{"ruleId":"315","severity":1,"message":"345","line":5,"column":36,"nodeType":"317","messageId":"318","endLine":5,"endColumn":42},{"ruleId":"315","severity":1,"message":"348","line":5,"column":65,"nodeType":"317","messageId":"318","endLine":5,"endColumn":71},{"ruleId":"315","severity":1,"message":"367","line":5,"column":87,"nodeType":"317","messageId":"318","endLine":5,"endColumn":97},{"ruleId":"315","severity":1,"message":"368","line":5,"column":99,"nodeType":"317","messageId":"318","endLine":5,"endColumn":110},{"ruleId":"315","severity":1,"message":"366","line":3,"column":10,"nodeType":"317","messageId":"318","endLine":3,"endColumn":17},{"ruleId":"315","severity":1,"message":"343","line":5,"column":18,"nodeType":"317","messageId":"318","endLine":5,"endColumn":26},{"ruleId":"315","severity":1,"message":"345","line":5,"column":36,"nodeType":"317","messageId":"318","endLine":5,"endColumn":42},{"ruleId":"315","severity":1,"message":"341","line":8,"column":16,"nodeType":"317","messageId":"318","endLine":8,"endColumn":26},{"ruleId":"328","severity":1,"message":"329","line":211,"column":9,"nodeType":"330","endLine":211,"endColumn":82},{"ruleId":"315","severity":1,"message":"369","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":20},{"ruleId":"315","severity":1,"message":"370","line":1,"column":41,"nodeType":"317","messageId":"318","endLine":1,"endColumn":51},{"ruleId":"315","severity":1,"message":"371","line":1,"column":53,"nodeType":"317","messageId":"318","endLine":1,"endColumn":64},{"ruleId":"315","severity":1,"message":"372","line":2,"column":8,"nodeType":"317","messageId":"318","endLine":2,"endColumn":23},{"ruleId":"328","severity":1,"message":"329","line":54,"column":21,"nodeType":"330","endLine":54,"endColumn":209},{"ruleId":"323","severity":1,"message":"324","line":22,"column":5,"nodeType":"325","messageId":"326","endLine":22,"endColumn":16},{"ruleId":"315","severity":1,"message":"373","line":3,"column":9,"nodeType":"317","messageId":"318","endLine":3,"endColumn":19},"no-native-reassign",["374"],"no-negated-in-lhs",["375"],"no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","'ReactReduxContext' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'fetchFavors'.","ObjectExpression","unexpected","'React' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'HospitalsNear' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCodeBranch' is defined but never used.","'faLinkedinIn' is defined but never used.","'NavLink' is defined but never used.","'NavBarContainer' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'InlineIcon' is defined but never used.","'faHome' is defined but never used.","'faCircle' is defined but never used.","'faPlus' is defined but never used.","'faBell' is defined but never used.","'faNewspaper' is defined but never used.","'faUser' is defined but never used.","'faBars' is defined but never used.","'faSignOutAlt' is defined but never used.","Duplicate key 'currentUser'.","'loginUser' is assigned a value but never used.","'MapContainer' is defined but never used.","'AboutContainer' is defined but never used.","'NavBar' is defined but never used.","'SplashNav2' is defined but never used.","'button_text' is assigned a value but never used.","'request_text' is assigned a value but never used.","'ProfileNavContainer' is defined but never used.","'FavorsReducer' is defined but never used.","'NavBarNoLogoContainer' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","'faVirus' is defined but never used.","'favor_text' is assigned a value but never used.","'library' is defined but never used.","'faUserPlus' is defined but never used.","'faSignInAlt' is defined but never used.","'NavBarNoLogo' is defined but never used.","'InfoWindow' is defined but never used.","'addListener' is defined but never used.","'MarkerClusterer' is defined but never used.","'withRouter' is defined but never used.","no-global-assign","no-unsafe-negation"]